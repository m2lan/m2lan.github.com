<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识记录</title>
  <icon>https://www.gravatar.com/avatar/4a4707290e0bd2d91bfe9658e5753e17</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.golearns.org/"/>
  <updated>2018-10-30T06:25:54.529Z</updated>
  <id>http://blog.golearns.org/</id>
  
  <author>
    <name>M2</name>
    <email>763960267@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建nagios监控服务器</title>
    <link href="http://blog.golearns.org/2018/10/30/%E6%90%AD%E5%BB%BAnagios%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.golearns.org/2018/10/30/搭建nagios监控服务器/</id>
    <published>2018-10-30T06:16:44.000Z</published>
    <updated>2018-10-30T06:25:54.529Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搭建nagios"><a href="#搭建nagios" class="headerlink" title="搭建nagios"></a>搭建nagios</h3><h1 id="安装nagios"><a href="#安装nagios" class="headerlink" title="安装nagios"></a>安装nagios</h1><pre><code>yum install -y httpd gcc glibc glibc-common php gd gd-devel libpng libmng libjpeg zlibuseradd nagiosgroupadd nagcmdusermod -G nagcmd nagiosusermod -G nagcmd apachetar xzvf nagios-3.5.1.tar.gzcd nagios./configure --with-command-group=nagcmdmake allmake install# 生成的nagios web访问目录ll /usr/local/nagios/share/# 生成启动脚本make install-init# 设置工作目录权限make install-commandmode# 生成配置文件make install-config# 配置文件目录ll /usr/local/nagios/etc/# 将nagios配置文件加入apache配置文件make install-webconf# 生成访问nagios web登录的用户名和密码htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin</code></pre><ul><li><p>编译nagios插件</p><pre><code># 安装插件之前先安装mysql服务yum install -y mysql-develtar xzvf nagios-plugins-2.1.1.tar.gzcd nagios-plugins-2.1.1./configure --with-nagios-user=nagios --with-nagios-group=nagcmdmake &amp;&amp; make install# 安装成功后会生成脚本文件ls -la /usr/local/nagios/libexec/</code></pre></li><li><p>检查配置文件</p><pre><code>/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg</code></pre></li><li><p>启动nagios</p><pre><code>systemctl start nagios</code></pre></li><li><p>访问</p><pre><code>http://192.168.1.240/nagios</code></pre></li></ul><h1 id="监控本机对象，监控NFS服务运行状态"><a href="#监控本机对象，监控NFS服务运行状态" class="headerlink" title="监控本机对象，监控NFS服务运行状态"></a>监控本机对象，监控NFS服务运行状态</h1><pre><code>cd /usr/local/nagios/etc/objects/cp localhost.cfg localhost.cfg.bakcat localhost.cfgdefine host {    use                     linux-server    host_name               localhost    alias                   localhost    address                 127.0.0.1  }define hostgroup{        hostgroup_name  linux-servers        alias           Linux Servers        members         localhost}define service {    use    local-service    host_name    localhost    service_description    NFS    check_command    check_tcp!2049 ;监听tcp端口2049}# 安装nfs服务yum install -y rpc-bind nfs-utils# 配置nfscat /etc/exports/tmp    *(rw)# 启动nfssystemctl restart nfs# 检查nfs是否启动成功showmount -e 192.168.1.240# 重启nagiossystemctl restart nagios# 访问http://192.168.1.240/nagios查看服务状态# 默认间隔5分钟检查一次，可以强制检查</code></pre><p><img src="http://opsi4gg7g.bkt.clouddn.com/1540545509151.jpg" alt=""></p><pre><code># 如果出现Error: Could not stat() command file &apos;/usr/local/nagios/var/rw/nagios.cmd&apos;!错误，关闭防火墙</code></pre><h1 id="监控外部主机192-168-1-241上的mysql服务器运行状态"><a href="#监控外部主机192-168-1-241上的mysql服务器运行状态" class="headerlink" title="监控外部主机192.168.1.241上的mysql服务器运行状态"></a>监控外部主机192.168.1.241上的mysql服务器运行状态</h1><ul><li><p>编辑主配置文件</p><pre><code>vim /usr/local/nagios/etc/nagios.cfg# 添加以下两项配置cfg_file=/usr/local/nagios/etc/objects/mysql.cfgcat mysql.cfgdefine host{        use                     linux-server        host_name               nagios2        alias                   mysql服务器        address                 192.168.1.241    hostgroups        mysql-server}define service {        use     local-service        host_name       nagios2        service_description     mysql服务        check_command   check_mysql}define hostgroup {    hostgroup_name    mysql-server    alias    mysql服务器    members    nagios2}# check_command 命令必须在command.cfg中存在# 在command.cfg中添加以下内容define command {command_name    check_mysqlcommand_line    $USER1$/check_mysql -H $HOSTADDRESS$ -u nagdb -d nagdb}# 在192.168.1.241服务器中安装mysql服务yum install -y mysql-serversystemctl start mysqld# 创建nagdb数据库和用户create database nagdb;grant select on nagdb.* to nagdb@&apos;192.168.1.240&apos;;# 回到192.168.1.240服务器中测试连接/usr/local/nagios/libexec/check_mysql -H 192.168.1.241 -u nagdb -d nagdb# 返回以下内容表示连接成功Uptime: 846  Threads: 1  Questions: 49  Slow queries: 0  Opens: 67  Flush tables: 1  Open tables: 60  Queries per second avg: 0.057|Connections=19c;;; Open_files=16;;; Open_tables=60;;; Qcache_free_memory=1031352;;; Qcache_hits=0c;;; Qcache_inserts=0c;;; Qcache_lowmem_prunes=0c;;; Qcache_not_cached=11c;;; Qcache_queries_in_cache=0;;; Queries=50c;;; Questions=44c;;; Table_locks_waited=0c;;; Threads_connected=1;;; Threads_running=1;;; Uptime=846c;;;# 关闭192.168.1.241上的mysql服务，测试返回结果为Can&apos;t connect to MySQL server on &apos;192.168.1.241&apos; (111)# 访问http://192.168.1.240/nagios查看mysql服务是否正常</code></pre><p>  <img src="http://opsi4gg7g.bkt.clouddn.com/1540615926016.jpg" alt=""></p></li></ul><h1 id="监听服务器上的私有信息"><a href="#监听服务器上的私有信息" class="headerlink" title="监听服务器上的私有信息"></a>监听服务器上的私有信息</h1><h2 id="监控192-168-1-241服务器上的私有信息-硬盘、。"><a href="#监控192-168-1-241服务器上的私有信息-硬盘、。" class="headerlink" title="监控192.168.1.241服务器上的私有信息(硬盘、。)"></a>监控192.168.1.241服务器上的私有信息(硬盘、。)</h2><ul><li>正常情况下不能访问外部服务器的私有信息，需要通过nagios远程执行插件nrpe来获取</li><li>两台机器通过ssl加密传输数据</li><li><p>在两台机器上192.168.1.240和241服务器安装ssl</p><pre><code>yum install -y openssl openssl-devel</code></pre></li><li><p>两台服务器分别安装nrpe</p><pre><code>tar xvzf nrpe-2.15.tar.gzcd nrpe-2.15yum install -y gcc./configure# 编译成功后显示General Options: ------------------------- NRPE port:    5666 NRPE user:    nagios NRPE group:   nagios Nagios user:  nagios Nagios group: nagios# 需要创建nagios用户useradd nagiosgroupadd nagcmdusermod -G nagcmd nagiosmake allmake install# 插件安装后所在路径/usr/local/nagios/libexec/check_nrpe# 192.168.1.241服务器还需生成配置文件make install-daemon-config# 让xinetd服务可以管理nrep服务，生成xinetd下nrpe配置文件make install-xinetdyum install -y xinetd</code></pre></li><li><p>在主配置文件添加配置文件</p><pre><code># 在/usr/local/nagios/etc/nagios.cfg中添加cfg_file=/usr/local/nagios/etc/objects/hosts.cfg# 在/usr/local/nagios/etc/objects/hosts.cfg中添加define service {    use     local-service    host_name       nagios2    service_description     磁盘检查    check_command   check_nrpe!check_root ; 当磁盘空间小于80%警告，小于90%警告危急}define service {    use local-service    host_name       nagios2    service_description     统计总进程    check_command   check_nrpe!check_total_procs ; 总进程数大于250个警告，大于400个警告危急}define service {    use     local-service    host_name       nagios2    service_description     当前负载    check_command   check_nrpe!check_load ; 检查当前服务器负载}# 在/usr/local/nagios/etc/objects/command.cfg中添加define command {    command_name    check_nrpe    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$}</code></pre></li></ul><h3 id="192-168-1-241配置"><a href="#192-168-1-241配置" class="headerlink" title="192.168.1.241配置"></a>192.168.1.241配置</h3><ul><li>安装nagios-plugins</li><li><p>编辑 /etc/xinetd.d/nrpe配置文件，添加only_from 192.168.1.240，允许240服务器连接nrpe</p><pre><code>service nrpe{        flags           = REUSE        socket_type     = stream        port            = 5666        wait            = no        user            = nagios        group           = nagios        server          = /usr/local/nagios/bin/nrpe        server_args     = -c /usr/local/nagios/etc/nrpe.cfg --inetd        log_on_failure  += USERID        disable         = no        only_from       = 127.0.0.1 192.168.1.240}</code></pre></li><li><p>在/etc/services文件中添加</p><pre><code>nrpe            5666/tcp                # NRPE</code></pre></li><li><p>/etc/services文件作用</p><ul><li>xinet.d来启动服务时会在/etc/services找相应的端口来启动服务。找不到对应端口，将不启动服务。</li></ul></li><li><p>启动xinetd</p><pre><code>systemctl start xinetd</code></pre></li><li><p>查看5666端口是否启动成功</p><pre><code>netstat -antlup | grep 5666</code></pre></li><li><p>/usr/local/nagios/etc/nrpe.cfg添加，检查磁盘剩余空间，小于80%告警，小于90%告警危急</p><pre><code>command[check_root]=/usr/local/nagios/libexec/check_disk -w 80% -c 90% -p /dev/mapper/centos-root</code></pre></li><li><p>重启xinetd</p><pre><code>systemctl restart xinetd</code></pre></li><li><p>查看磁盘空间</p><pre><code>[root@nagios2 etc]# df -h文件系统                 容量  已用  可用 已用% 挂载点/dev/mapper/centos-root   18G  2.0G   16G   11% /devtmpfs                 484M     0  484M    0% /devtmpfs                    494M     0  494M    0% /dev/shmtmpfs                    494M   13M  481M    3% /runtmpfs                    494M     0  494M    0% /sys/fs/cgroup/dev/sda1                497M  154M  344M   31% /boottmpfs                     99M     0   99M    0% /run/user/0</code></pre></li><li>访问<a href="http://192.168.1.240/nagios" target="_blank" rel="noopener">http://192.168.1.240/nagios</a><img src="http://opsi4gg7g.bkt.clouddn.com/1540630066544.jpg" alt=""></li></ul><h1 id="配置nagios邮件提醒"><a href="#配置nagios邮件提醒" class="headerlink" title="配置nagios邮件提醒"></a>配置nagios邮件提醒</h1><ul><li><p>安装sendmail</p><pre><code>yum install -y sendmailsystemctl enable sendmailsystemctl start sendmail</code></pre></li><li><p>修改配置文件<code>/usr/local/nagios/etc/objects/contacts.cfg</code></p><pre><code>define contact{    contact_name                    nagiosadmin    use                             generic-contact    alias                           Nagios Admin    email                           763960267@qq.com ; 多个联系人用空格分开}</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;搭建nagios&quot;&gt;&lt;a href=&quot;#搭建nagios&quot; class=&quot;headerlink&quot; title=&quot;搭建nagios&quot;&gt;&lt;/a&gt;搭建nagios&lt;/h3&gt;&lt;h1 id=&quot;安装nagios&quot;&gt;&lt;a href=&quot;#安装nagios&quot; class=&quot;head
      
    
    </summary>
    
      <category term="nagios" scheme="http://blog.golearns.org/categories/nagios/"/>
    
    
      <category term="nagios" scheme="http://blog.golearns.org/tags/nagios/"/>
    
  </entry>
  
  <entry>
    <title>php elsearch autocomplete</title>
    <link href="http://blog.golearns.org/2018/09/17/php-elsearch-autocomplete/"/>
    <id>http://blog.golearns.org/2018/09/17/php-elsearch-autocomplete/</id>
    <published>2018-09-17T15:13:08.000Z</published>
    <updated>2018-09-17T15:15:55.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-Eleasticsearch-实现自动补全"><a href="#PHP-Eleasticsearch-实现自动补全" class="headerlink" title="PHP+Eleasticsearch 实现自动补全"></a>PHP+Eleasticsearch 实现自动补全</h1><h2 id="1-创建索引"><a href="#1-创建索引" class="headerlink" title="1. 创建索引"></a>1. 创建索引</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $params = [</span><br><span class="line">        <span class="string">'index'</span> =&gt; <span class="string">'auto_complete_shop'</span>,</span><br><span class="line">        <span class="string">'body'</span> =&gt; [</span><br><span class="line">            <span class="string">'settings'</span> =&gt; [</span><br><span class="line">                <span class="string">'number_of_shards'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                <span class="string">'analysis'</span> =&gt; [</span><br><span class="line">                    <span class="string">'filter'</span> =&gt; [</span><br><span class="line">                        <span class="string">'autocomplete_filter'</span> =&gt; [</span><br><span class="line">                            <span class="string">'type'</span> =&gt; <span class="string">'edge_ngram'</span>,</span><br><span class="line">                            <span class="string">'min_gram'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                            <span class="string">'max_gram'</span> =&gt; <span class="number">20</span></span><br><span class="line">                        ]</span><br><span class="line">                    ],</span><br><span class="line">                    <span class="string">'analyzer'</span> =&gt; [</span><br><span class="line">                        <span class="string">'autocomplete'</span> =&gt; [</span><br><span class="line">                            <span class="string">'type'</span> =&gt; <span class="string">'custom'</span>,</span><br><span class="line">                            <span class="string">'tokenizer'</span> =&gt; <span class="string">'standard'</span>,</span><br><span class="line">                            <span class="string">'filter'</span> =&gt; [</span><br><span class="line">                                <span class="string">'lowercase'</span>, <span class="string">'autocomplete_filter'</span></span><br><span class="line">                            ]</span><br><span class="line">                        ]</span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'mappings'</span> =&gt; [</span><br><span class="line">                <span class="string">'goods'</span> =&gt; [</span><br><span class="line">                    <span class="string">'_source'</span> =&gt; [</span><br><span class="line">                        <span class="string">'enabled'</span> =&gt; <span class="keyword">true</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="string">'properties'</span> =&gt; [</span><br><span class="line">                        <span class="string">'name'</span> =&gt; [</span><br><span class="line">                            <span class="string">'type'</span> =&gt; <span class="string">'string'</span>,</span><br><span class="line">                            <span class="string">'analyzer'</span> =&gt; <span class="string">'autocomplete'</span>,</span><br><span class="line">                            <span class="string">'search_analyzer'</span> =&gt; <span class="string">'standard'</span></span><br><span class="line">                        ]</span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $result = <span class="keyword">$this</span>-&gt;client-&gt;indices()-&gt;create($params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json_encode($result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-批量索引文档"><a href="#2-批量索引文档" class="headerlink" title="2. 批量索引文档"></a>2. 批量索引文档</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">indexGoods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $goods = db(<span class="string">'goods'</span>)-&gt;field(<span class="string">'id, name, category_id, goods_no, pro_no, depot, brand_id, sell_price, market_price, cost_price, create_time, store_nums, warning_line'</span>)-&gt;select();</span><br><span class="line"></span><br><span class="line">    $params = [<span class="string">'body'</span> =&gt; []];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($goods !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($goods <span class="keyword">as</span> $k =&gt; $good) &#123;</span><br><span class="line">            $params[<span class="string">'body'</span>][] = [</span><br><span class="line">                <span class="string">'index'</span> =&gt; [</span><br><span class="line">                    <span class="string">'_index'</span> =&gt; <span class="string">'auto_complete_shop'</span>,</span><br><span class="line">                    <span class="string">'_type'</span> =&gt; <span class="string">'goods'</span>,</span><br><span class="line">                    <span class="string">'_id'</span> =&gt; $good[<span class="string">'id'</span>]</span><br><span class="line">                ]</span><br><span class="line">            ];</span><br><span class="line"></span><br><span class="line">            $params[<span class="string">'body'</span>][] = [</span><br><span class="line">                <span class="string">'name'</span> =&gt; $good[<span class="string">'name'</span>],</span><br><span class="line">                <span class="string">'categoryId'</span> =&gt; $good[<span class="string">'category_id'</span>],</span><br><span class="line">                <span class="string">'goodsNo'</span> =&gt; $good[<span class="string">'goods_no'</span>],</span><br><span class="line">                <span class="string">'proNo'</span> =&gt; $good[<span class="string">'pro_no'</span>],</span><br><span class="line">                <span class="string">'depot'</span> =&gt; $good[<span class="string">'depot'</span>],</span><br><span class="line">                <span class="string">'brandId'</span> =&gt; $good[<span class="string">'brand_id'</span>],</span><br><span class="line">                <span class="string">'sellPrice'</span> =&gt; $good[<span class="string">'sell_price'</span>],</span><br><span class="line">                <span class="string">'marketPrice'</span> =&gt; $good[<span class="string">'market_price'</span>],</span><br><span class="line">                <span class="string">'costPrice'</span> =&gt; $good[<span class="string">'cost_price'</span>],</span><br><span class="line">                <span class="string">'createTime'</span> =&gt; $good[<span class="string">'create_time'</span>],</span><br><span class="line">                <span class="string">'storeNums'</span> =&gt; $good[<span class="string">'store_nums'</span>],</span><br><span class="line">                <span class="string">'warningLine'</span> =&gt; $good[<span class="string">'warning_line'</span>]</span><br><span class="line">            ];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($k % <span class="number">1000</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                $responses = <span class="keyword">$this</span>-&gt;client-&gt;bulk($params);</span><br><span class="line">                $params = [<span class="string">'body'</span> =&gt; []];</span><br><span class="line">                <span class="keyword">unset</span>($responses);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($params[<span class="string">'body'</span>])) &#123;</span><br><span class="line">            $responses = <span class="keyword">$this</span>-&gt;client-&gt;bulk($params);</span><br><span class="line">            <span class="keyword">return</span> json_encode($responses);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="string">'status'</span> =&gt; <span class="string">'success'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json_encode([<span class="string">'status'</span> =&gt; <span class="string">'faild'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-自动补全接口"><a href="#3-自动补全接口" class="headerlink" title="3. 自动补全接口"></a>3. 自动补全接口</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">autoComplete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $search = input(<span class="string">'get.search'</span>);</span><br><span class="line"></span><br><span class="line">    $params = [</span><br><span class="line">        <span class="string">'index'</span> =&gt; <span class="string">'auto_complete_shop'</span>,</span><br><span class="line">        <span class="string">'type'</span> =&gt; <span class="string">'goods'</span>,</span><br><span class="line">        <span class="string">'body'</span> =&gt; [</span><br><span class="line">            <span class="string">'query'</span> =&gt; [</span><br><span class="line">                <span class="string">'match'</span> =&gt; [</span><br><span class="line">                    <span class="string">'name'</span> =&gt; $search</span><br><span class="line">                ]</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $response = <span class="keyword">$this</span>-&gt;client-&gt;search($params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($response[<span class="string">'hits'</span>][<span class="string">'hits'</span>]) &amp;&amp; count($response[<span class="string">'hits'</span>][<span class="string">'hits'</span>]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        $result = [];</span><br><span class="line"></span><br><span class="line">        $hits = $response[<span class="string">'hits'</span>][<span class="string">'hits'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($hits <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            $result[$k][<span class="string">'name'</span>] = $v[<span class="string">'_source'</span>][<span class="string">'name'</span>];</span><br><span class="line">            <span class="comment">// array_push($result, $v['_source']['name']);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode($result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> json_encode([]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PHP-Eleasticsearch-实现自动补全&quot;&gt;&lt;a href=&quot;#PHP-Eleasticsearch-实现自动补全&quot; class=&quot;headerlink&quot; title=&quot;PHP+Eleasticsearch 实现自动补全&quot;&gt;&lt;/a&gt;PHP+Eleasticsearch 实现自动补全&lt;/h1&gt;&lt;h2 id=&quot;1-创建索引&quot;&gt;&lt;a href=&quot;#1-创建索引&quot; class=&quot;headerlink&quot; title=&quot;1. 创建索引&quot;&gt;&lt;/a&gt;1. 创建索引&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createIndex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $params = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;auto_complete_shop&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;settings&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;number_of_shards&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;analysis&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;filter&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;autocomplete_filter&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;edge_ngram&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;min_gram&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;max_gram&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;analyzer&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;autocomplete&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;custom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;tokenizer&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;standard&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;filter&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&#39;lowercase&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;autocomplete_filter&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;mappings&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;goods&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;_source&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;enabled&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;properties&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;string&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;analyzer&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;autocomplete&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;search_analyzer&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;standard&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $result = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;client-&amp;gt;indices()-&amp;gt;create($params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; json_encode($result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/categories/thinkphp5/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/tags/thinkphp5/"/>
    
  </entry>
  
  <entry>
    <title>Logstash安装</title>
    <link href="http://blog.golearns.org/2018/09/17/Logstash%E5%AE%89%E8%A3%85/"/>
    <id>http://blog.golearns.org/2018/09/17/Logstash安装/</id>
    <published>2018-09-17T15:12:24.000Z</published>
    <updated>2018-09-17T15:12:48.248Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Logstash-install"><a href="#Logstash-install" class="headerlink" title="Logstash install"></a>Logstash install</h1><h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><pre><code>rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearchcd /etc/yum.repos.d/touch logstash.repocat logstash.repo[logstash-5.x]name=Elastic repository for 5.x packagesbaseurl=https://artifacts.elastic.co/packages/5.x/yumgpgcheck=1gpgkey=https://artifacts.elastic.co/GPG-KEY-elasticsearchenabled=1autorefresh=1type=rpm-mdyum install -y logstash</code></pre><h3 id="start"><a href="#start" class="headerlink" title="start"></a>start</h3><pre><code>systemctl start logstash.service</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Logstash-install&quot;&gt;&lt;a href=&quot;#Logstash-install&quot; class=&quot;headerlink&quot; title=&quot;Logstash install&quot;&gt;&lt;/a&gt;Logstash install&lt;/h1&gt;&lt;h3 id=&quot;install&quot;&gt;
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
      <category term="Logstash" scheme="http://blog.golearns.org/tags/Logstash/"/>
    
  </entry>
  
  <entry>
    <title>kibana安装</title>
    <link href="http://blog.golearns.org/2018/09/17/kibana%E5%AE%89%E8%A3%85/"/>
    <id>http://blog.golearns.org/2018/09/17/kibana安装/</id>
    <published>2018-09-17T15:11:39.000Z</published>
    <updated>2018-09-17T15:16:11.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Kibana-install"><a href="#Kibana-install" class="headerlink" title="Kibana install"></a>Kibana install</h1><blockquote><p>数据可视化和实时数据</p></blockquote><h3 id="install"><a href="#install" class="headerlink" title="install"></a>install</h3><pre><code>wget https://artifacts.elastic.co/downloads/kibana/kibana-5.5.1-linux-x86_64.tar.gzsha1sum kibana-5.5.1-linux-x86_64.tar.gztar -xzf kibana-5.5.1-linux-x86_64.tar.gz</code></pre><a id="more"></a><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><ul><li>kibana启动时会读取<code>config/kibana.yml</code>配置文件</li><li>默认运行在<code>localhost:5601</code></li><li><p>配置文件配置</p><pre><code>server.port: 默认5601。 指定要使用的端口server.host: 默认localhost。 指定服务器的主机server.basePath: 如果在代理之后运行，可以指定kibana挂在路径。代理将请求转发给kibana之前应该删除basePath值，此配置不能以斜线(/)结尾server.maxPayloadBytes: 默认1048576。 服务器最大的请求负荷server.name: 默认your-hostname。 kibana服务器的名称，用于实例名称显示server.defaultRoute: 默认/app/kibana。 指定打开kibana时的默认路由elasticsearch.url: 默认http://localhost:9200。 elasticsearch地址elasticsearch.preserveHost: 默认true。 当此值设置为true时，kibana将使用server.host设置中指定的主机名。当此值设置为false时，kibana将使用连接到此kibana实例的主机的主机名kibana.index: 默认.kibana。 kibana在elasticsearch中使用索引来存储保存的搜索、可视化和仪表盘。如果索引不存在，kibana会创建一个新的索引kibana.defaultAppId: 默认discover。 要加载的默认应用程序# 如果elasticsearch使用基本验证，则需要配置用户名和密码elasticsearch.username: elasticsearch.password: # 启用ssl，设置为true时需要提供server.ssl.certificate和server.ssl.keyserver.ssl.enabled: falseserver.ssl.certificate: /path/to/your/server.crtserver.ssl.key: /path/to/your/server.keyelasticsearch.ssl.certificate: /path/to/your/client.crtelasticsearch.ssl.key: /path/to/your/client.keyelasticsearch.ssl.certificateAuthorities: [ &quot;/path/to/your/CA.pem&quot; ]elasticsearch.ssl.verificationMode: fullelasticsearch.pingTimeout: 1500elasticsearch.requestTimeout: 30000elasticsearch.requestHeadersWhitelist: [ authorization ]elasticsearch.customHeaders: {}elasticsearch.shardTimeout: 0。 elasticsearch等待来自分片的响应的时间（以毫秒为单位）。设为0禁用。elasticsearch.startupTimeout: 默认5000。 在重试之前在Kibana启动时等待Elasticsearch的时间（以毫秒为单位）。pid.file: 默认/var/run/kibana.pid。 指定Kibana创建进程ID文件的路径。logging.dest: 默认stdout。 使您能够指定Kibana存储日志输出的文件。logging.silent: 默认false。 将此设置的值设置为true以禁止所有日志记录输出。logging.quiet: 默认false。 将此设置的值设置为true以禁止除错误消息之外的所有日志记录输出。logging.verbose: 默认false。 将此设置的值设置为true以记录所有事件，包括系统使用情况信息和所有请求。ops.interval: 默认5000。 以毫秒为单位设置时间间隔以对系统和进程性能度量标准进行采样。最小值是100。i18n.defaultLocale: 默认en。 默认的语言环境</code></pre></li></ul><h3 id="start"><a href="#start" class="headerlink" title="start"></a>start</h3><pre><code>./bin/kibana serve &amp;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Kibana-install&quot;&gt;&lt;a href=&quot;#Kibana-install&quot; class=&quot;headerlink&quot; title=&quot;Kibana install&quot;&gt;&lt;/a&gt;Kibana install&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;数据可视化和实时数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;install&quot;&gt;&lt;a href=&quot;#install&quot; class=&quot;headerlink&quot; title=&quot;install&quot;&gt;&lt;/a&gt;install&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;wget https://artifacts.elastic.co/downloads/kibana/kibana-5.5.1-linux-x86_64.tar.gz
sha1sum kibana-5.5.1-linux-x86_64.tar.gz
tar -xzf kibana-5.5.1-linux-x86_64.tar.gz
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
      <category term="kibana" scheme="http://blog.golearns.org/tags/kibana/"/>
    
  </entry>
  
  <entry>
    <title>elsearch安装</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch%E5%AE%89%E8%A3%85/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch安装/</id>
    <published>2018-09-17T15:10:59.000Z</published>
    <updated>2018-09-17T15:16:21.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="elasticsearch-install"><a href="#elasticsearch-install" class="headerlink" title="elasticsearch install"></a>elasticsearch install</h1><h3 id="新建用户组和用户"><a href="#新建用户组和用户" class="headerlink" title="新建用户组和用户"></a>新建用户组和用户</h3><pre><code>groupadd elsearchuseradd elsearch -g elsearch# 切换用户su elsearch</code></pre><h3 id="下载启动"><a href="#下载启动" class="headerlink" title="下载启动"></a>下载启动</h3><pre><code>wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.zipunzip elasticsearch-5.5.1.zipcd elasticsearch-5.5.1/</code></pre><a id="more"></a><h3 id="遇到无法启动，切换到root用户"><a href="#遇到无法启动，切换到root用户" class="headerlink" title="遇到无法启动，切换到root用户"></a>遇到无法启动，切换到root用户</h3><pre><code>vim /etc/security/limits.conf# 添加* soft nofile 65536* hard nofile 131072* soft nproc 2048* hard nproc 4096vim /etc/sysctl.conf# 添加vm.max_map_count=655360# 执行sysctl -p</code></pre><h3 id="重启elasticsearch"><a href="#重启elasticsearch" class="headerlink" title="重启elasticsearch"></a>重启elasticsearch</h3><pre><code>su elsearchcd elasticsearch/./bin/elasticsearch -d -p pid</code></pre><h3 id="需要远程访问"><a href="#需要远程访问" class="headerlink" title="需要远程访问"></a>需要远程访问</h3><pre><code>vim config/elasticsearch.ymlnetwork.host: 0.0.0.0</code></pre><h3 id="中文分词设置"><a href="#中文分词设置" class="headerlink" title="中文分词设置"></a>中文分词设置</h3><pre><code>./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.1/elasticsearch-analysis-ik-5.5.1.zip# 可以将文件下载ftp上传后通过以下方式安装./bin/elasticsearch-plugin install file:///home/elsearch/elasticsearch-analysis-ik-5.5.1.zip</code></pre><h3 id="查看集群信息"><a href="#查看集群信息" class="headerlink" title="查看集群信息"></a>查看集群信息</h3><ul><li><p>查看健康状态</p><pre><code>curl &apos;http://localhost:9200/_cat/health?v&apos;status: green yellow redgreen: 表示一切正常，集群功能完全正常yellow: 表示所有数据都可用，但是一些副本尚未分配。red: 表示某些数据因任何原因不可用</code></pre></li><li><p>查看节点列表</p><pre><code>curl &apos;http://localhost:9200/_cat/nodes?v&apos;</code></pre></li><li><p>查看节点所有索引信息</p><pre><code>curl &apos;http://localhost:9200/_cat/indices?v&apos;health status index           uuid                   pri rep docs.count docs.deleted store.size pri.store.sizeyellow open   megacorp_spring NpcpvsXYTiOWGpFXqznl2Q   5   1          1            0      6.3kb          6.3kbyellow open   user            0GPpkAzNTHaLCJV0yhievQ   5   1          4            0     22.9kb         22.9kbhealth: 健康状态status: 状态, yellow(因为elasticsearch默认为这个索引分配了一个副本，当前只有一个节点，当该副本被分配到第二个节点上，该索引状态将变成绿色)index: 索引名称uuid: 唯一标识pri: 主分片rep: 副本docs.count: docs.deleted: store.size: pri.store.size: </code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;elasticsearch-install&quot;&gt;&lt;a href=&quot;#elasticsearch-install&quot; class=&quot;headerlink&quot; title=&quot;elasticsearch install&quot;&gt;&lt;/a&gt;elasticsearch install&lt;/h1&gt;&lt;h3 id=&quot;新建用户组和用户&quot;&gt;&lt;a href=&quot;#新建用户组和用户&quot; class=&quot;headerlink&quot; title=&quot;新建用户组和用户&quot;&gt;&lt;/a&gt;新建用户组和用户&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;groupadd elsearch
useradd elsearch -g elsearch
# 切换用户
su elsearch
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;下载启动&quot;&gt;&lt;a href=&quot;#下载启动&quot; class=&quot;headerlink&quot; title=&quot;下载启动&quot;&gt;&lt;/a&gt;下载启动&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.zip
unzip elasticsearch-5.5.1.zip
cd elasticsearch-5.5.1/
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
  </entry>
  
  <entry>
    <title>elsearch autocomplete</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch-autocomplete/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch-autocomplete/</id>
    <published>2018-09-17T15:10:30.000Z</published>
    <updated>2018-09-17T15:16:29.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Elsearch自动补全"><a href="#Elsearch自动补全" class="headerlink" title="Elsearch自动补全"></a>Elsearch自动补全</h1><h2 id="1-创建索引、实例化token过滤器和分析器"><a href="#1-创建索引、实例化token过滤器和分析器" class="headerlink" title="1. 创建索引、实例化token过滤器和分析器"></a>1. 创建索引、实例化token过滤器和分析器</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT localhost:9200/autosuggest -d '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"number_of_shards"</span>: <span class="number">1</span>, </span><br><span class="line">        <span class="attr">"analysis"</span>: &#123;</span><br><span class="line">            <span class="attr">"filter"</span>: &#123;</span><br><span class="line">                <span class="attr">"autocomplete_filter"</span>: &#123; </span><br><span class="line">                    <span class="attr">"type"</span>:     <span class="string">"edge_ngram"</span>,</span><br><span class="line">                    <span class="attr">"min_gram"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">"max_gram"</span>: <span class="number">20</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"analyzer"</span>: &#123;</span><br><span class="line">                <span class="attr">"autocomplete"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>:      <span class="string">"custom"</span>,</span><br><span class="line">                    <span class="attr">"tokenizer"</span>: <span class="string">"standard"</span>,</span><br><span class="line">                    <span class="attr">"filter"</span>: [</span><br><span class="line">                        <span class="string">"lowercase"</span>,</span><br><span class="line">                        <span class="string">"autocomplete_filter"</span> </span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-测试分析器是否正确"><a href="#2-测试分析器是否正确" class="headerlink" title="2. 测试分析器是否正确"></a>2. 测试分析器是否正确</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/_analyze -d '                             </span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"autocomplete"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"quick brown"</span></span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="3-使用update-mappingAPI将这个分析器应用到具体字段"><a href="#3-使用update-mappingAPI将这个分析器应用到具体字段" class="headerlink" title="3. 使用update-mappingAPI将这个分析器应用到具体字段"></a>3. 使用<code>update-mapping</code>API将这个分析器应用到具体字段</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT localhost:9200/autosuggest/_mapping/my_type -d '                             </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"my_type"</span>: &#123;</span><br><span class="line">        <span class="attr">"properties"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: &#123;</span><br><span class="line">                <span class="attr">"type"</span>:     <span class="string">"string"</span>,</span><br><span class="line">                <span class="attr">"analyzer"</span>: <span class="string">"autocomplete"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="4-创建测试文档"><a href="#4-创建测试文档" class="headerlink" title="4. 创建测试文档"></a>4. 创建测试文档</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST localhost:9200/autosuggest/my_type/_bulk -d '                             </span><br><span class="line">&#123; <span class="attr">"index"</span>: &#123; <span class="attr">"_id"</span>: <span class="number">1</span>            &#125;&#125;</span><br><span class="line">&#123; <span class="attr">"name"</span>: <span class="string">"Brown foxes"</span>    &#125;</span><br><span class="line">&#123; <span class="attr">"index"</span>: &#123; <span class="attr">"_id"</span>: <span class="number">2</span>            &#125;&#125;</span><br><span class="line">&#123; <span class="attr">"name"</span>: <span class="string">"Yellow furballs"</span> &#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="5-如果使用简单的match查询测试brown-fo"><a href="#5-如果使用简单的match查询测试brown-fo" class="headerlink" title="5. 如果使用简单的match查询测试brown fo"></a>5. 如果使用简单的match查询测试<code>brown fo</code></h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_search -d '                             </span><br><span class="line">&#123;                                  </span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"match"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"brown fo"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><ul><li>可以看到两个文档都能匹配，尽管 <code>Yellow furballs</code> 这个文档并不包含 <code>brown</code> 和 <code>fo</code> ：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span>: <span class="number">42</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"max_score"</span>: <span class="number">1.7102298</span>,</span><br><span class="line">    <span class="attr">"hits"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"my_type"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">1.7102298</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"Brown foxes"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"my_type"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">0.2688388</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"Yellow furballs"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-分析"><a href="#6-分析" class="headerlink" title="6. 分析"></a>6. 分析</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_validate/query?explain -d ' </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"match"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"brown fo"</span></span><br><span class="line">        &#125;                              </span><br><span class="line">    &#125;                                  </span><br><span class="line">&#125;                                             </span><br><span class="line">'</span><br></pre></td></tr></table></figure><ul><li><code>name:f</code>条件可以满足第二个文档</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"explanations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">      <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"explanation"</span>: <span class="string">"+(Synonym(name:b name:br name:bro name:brow name:brown) Synonym(name:f name:fo)) #_type:my_type"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-匹配用户输入的完整词组"><a href="#7-匹配用户输入的完整词组" class="headerlink" title="7. 匹配用户输入的完整词组"></a>7. 匹配用户输入的完整词组</h2><ul><li>可以通过在索引时使用 <code>autocomplete</code> 分析器，并在搜索时使用 <code>standard</code> 标准分析器来实现这种想法，只要改变查询使用的搜索分析器 <code>analyzer</code> 参数即可：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_search -d '</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="attr">"query"</span>: &#123;</span><br><span class="line">         <span class="attr">"match"</span>: &#123;</span><br><span class="line">             <span class="attr">"name"</span>: &#123;</span><br><span class="line">                 <span class="attr">"query"</span>:    <span class="string">"brown fo"</span>,</span><br><span class="line">                 <span class="attr">"analyzer"</span>: <span class="string">"standard"</span> </span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> '</span><br></pre></td></tr></table></figure><h2 id="8-改变-search-analyzer-这里只要更新现有的映射不用对数据重新创建索引"><a href="#8-改变-search-analyzer-这里只要更新现有的映射不用对数据重新创建索引" class="headerlink" title="8. 改变`search_analyzer `这里只要更新现有的映射不用对数据重新创建索引"></a>8. 改变<code>`search_analyzer</code> `这里只要更新现有的映射不用对数据重新创建索引</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT localhost:9200/autosuggest/my_type/_mapping -d '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"my_type"</span>: &#123;</span><br><span class="line">        <span class="attr">"properties"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: &#123;</span><br><span class="line">                <span class="attr">"type"</span>:            <span class="string">"string"</span>,</span><br><span class="line">                <span class="attr">"analyzer"</span>: <span class="string">"autocomplete"</span>,</span><br><span class="line">                <span class="attr">"search_analyzer"</span>: <span class="string">"standard"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="9-再次请求validate-queryAPI"><a href="#9-再次请求validate-queryAPI" class="headerlink" title="9. 再次请求validate-queryAPI"></a>9. 再次请求<code>validate-query</code>API</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_validate/query?explain -d ' </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"match"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"brown fo"</span></span><br><span class="line">        &#125;                              </span><br><span class="line">    &#125;                                  </span><br><span class="line">&#125;                                             </span><br><span class="line">'</span><br><span class="line"></span><br><span class="line">Response: </span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"explanations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">      <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"explanation"</span>: <span class="string">"+(name:brown name:fo) #_type:my_type"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Elsearch自动补全&quot;&gt;&lt;a href=&quot;#Elsearch自动补全&quot; class=&quot;headerlink&quot; title=&quot;Elsearch自动补全&quot;&gt;&lt;/a&gt;Elsearch自动补全&lt;/h1&gt;&lt;h2 id=&quot;1-创建索引、实例化token过滤器和分析器&quot;&gt;&lt;a href=&quot;#1-创建索引、实例化token过滤器和分析器&quot; class=&quot;headerlink&quot; title=&quot;1. 创建索引、实例化token过滤器和分析器&quot;&gt;&lt;/a&gt;1. 创建索引、实例化token过滤器和分析器&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -XPUT localhost:9200/autosuggest -d &#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;settings&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;number_of_shards&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;analysis&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;filter&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;autocomplete_filter&quot;&lt;/span&gt;: &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;:     &lt;span class=&quot;string&quot;&gt;&quot;edge_ngram&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;min_gram&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;max_gram&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;analyzer&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;autocomplete&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;:      &lt;span class=&quot;string&quot;&gt;&quot;custom&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;tokenizer&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;standard&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;filter&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;lowercase&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;autocomplete_filter&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elsearch 关键配置</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch-%E5%85%B3%E9%94%AE%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch-关键配置/</id>
    <published>2018-09-17T15:10:02.000Z</published>
    <updated>2018-09-17T15:39:07.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Elsearch-关键配置"><a href="#Elsearch-关键配置" class="headerlink" title="Elsearch 关键配置"></a>Elsearch 关键配置</h1><h2 id="关键配置项"><a href="#关键配置项" class="headerlink" title="关键配置项"></a>关键配置项</h2><p><strong>1、索引的shards个数:</strong></p><p>shards的个数，最好是和节点数相关的。理论上对同一个索引，单机上的shards个数最好不要超过两个，这样每个查询尽可能并行。但因为ES中shards的个数是确定了就没办法再调整的，所以如果考虑到数据会高速增长，一开始分配多些也可以。另一个常见思路是按时间纬度（如月）去定义ES索引——因为可以动态调整新加的索引的shards个数。其他的一些情况，比如下面举到的Wetest聚合的例子，因为需要数据尽量地按照渠道切分开，所以定义了很多个shards（200个），但太多的shards通常是不推荐的，ES管理起来也有开销。</p><p><strong>2、heap内存:</strong></p><p>官方建议是可用内存的一半，是通过启动ES的环境中，定义环境变量的方式完成的。如<code>export ES_HEAP_SIZE=10g</code></p><a id="more"></a><p><strong>3、cluster.name:</strong></p><p>集群的逻辑名称。只有cluster name相同的机器，才会在逻辑上组成一个集群。比如，内网中有5台ES机器的实例，是可以构成几个互不干扰的ES集群的。</p><p><strong>4、discovery.zen.minimum_master_nodes:</strong></p><p>这个是用于集群的分布式决策的最少master机器个数。和常见的分布式协调算法一样，为了避免脑裂现象，建议超过一半的机器，<code>n/2+1</code></p><p><strong>5、discovery.zen.ping.unicast.hosts:</strong></p><p>ES集群的机器列表。注意ES单点不用配置集群中的所有机器列表，像一个连通图一样，只要每台机器配置了其他机器，而这些配置又是互相可以连接的，那ES最终就会发现所有机器，构成集群。如<code>[&#39;111.111.111.0&#39;,&#39;111.111.111.1&#39;,&#39;111.111.111.2&#39;]</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Elsearch-关键配置&quot;&gt;&lt;a href=&quot;#Elsearch-关键配置&quot; class=&quot;headerlink&quot; title=&quot;Elsearch 关键配置&quot;&gt;&lt;/a&gt;Elsearch 关键配置&lt;/h1&gt;&lt;h2 id=&quot;关键配置项&quot;&gt;&lt;a href=&quot;#关键配置项&quot; class=&quot;headerlink&quot; title=&quot;关键配置项&quot;&gt;&lt;/a&gt;关键配置项&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、索引的shards个数:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;shards的个数，最好是和节点数相关的。理论上对同一个索引，单机上的shards个数最好不要超过两个，这样每个查询尽可能并行。但因为ES中shards的个数是确定了就没办法再调整的，所以如果考虑到数据会高速增长，一开始分配多些也可以。另一个常见思路是按时间纬度（如月）去定义ES索引——因为可以动态调整新加的索引的shards个数。其他的一些情况，比如下面举到的Wetest聚合的例子，因为需要数据尽量地按照渠道切分开，所以定义了很多个shards（200个），但太多的shards通常是不推荐的，ES管理起来也有开销。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、heap内存:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官方建议是可用内存的一半，是通过启动ES的环境中，定义环境变量的方式完成的。如&lt;code&gt;export ES_HEAP_SIZE=10g&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elsearch 安装sql插件</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch-%E5%AE%89%E8%A3%85sql%E6%8F%92%E4%BB%B6/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch-安装sql插件/</id>
    <published>2018-09-17T15:09:23.000Z</published>
    <updated>2018-09-17T15:16:42.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="elsearch安装sql插件"><a href="#elsearch安装sql插件" class="headerlink" title="elsearch安装sql插件"></a>elsearch安装sql插件</h1><ul><li><p>install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/5.5.1.0/elasticsearch-sql-5.5.1.0.zip</span><br></pre></td></tr></table></figure></li><li><p>install ui web front-end</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/NLPchina/elasticsearch-sql/releases/download/5.4.1.0/es-sql-site-standalone.zip</span><br><span class="line"></span><br><span class="line">cd site-server</span><br><span class="line">npm install express --save</span><br><span class="line">node node-server.js &amp;</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>request web</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://site:8080</span><br><span class="line"></span><br><span class="line">// 修改头部请求链接</span><br><span class="line">http://site:9200</span><br></pre></td></tr></table></figure></li><li><p>输入查询语句通过explain后将代码调整为文档格式后请求搜索</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;elsearch安装sql插件&quot;&gt;&lt;a href=&quot;#elsearch安装sql插件&quot; class=&quot;headerlink&quot; title=&quot;elsearch安装sql插件&quot;&gt;&lt;/a&gt;elsearch安装sql插件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;install&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/5.5.1.0/elasticsearch-sql-5.5.1.0.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;install ui web front-end&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://github.com/NLPchina/elasticsearch-sql/releases/download/5.4.1.0/es-sql-site-standalone.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd site-server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install express --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node node-server.js &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>centos7 install elasticHD</title>
    <link href="http://blog.golearns.org/2018/09/17/centos7-install-elasticHD/"/>
    <id>http://blog.golearns.org/2018/09/17/centos7-install-elasticHD/</id>
    <published>2018-09-17T15:08:32.000Z</published>
    <updated>2018-09-17T15:09:15.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7-install-elasticHD"><a href="#centos7-install-elasticHD" class="headerlink" title="centos7 install elasticHD"></a>centos7 install elasticHD</h1><ul><li>下载ElasticHD<a href="https://github.com/360EntSecGroup-Skylar/ElasticHD/releases/download/1.4/elasticHD_linux_amd64.zip" target="_blank" rel="noopener">elasticHD_linux_amd64.zip</a></li></ul><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><pre><code>chmod 0777 elasticHD_linux_amd64.zipunzip elasticHD_linux_amd64.zip# 开启端口9800# 启动./ElasticHD -p 0.0.0.0:9800 &amp;# 访问http://site:9800</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;centos7-install-elasticHD&quot;&gt;&lt;a href=&quot;#centos7-install-elasticHD&quot; class=&quot;headerlink&quot; title=&quot;centos7 install elasticHD&quot;&gt;&lt;/a&gt;centos7 ins
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos" scheme="http://blog.golearns.org/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>webrtc服务端搭建</title>
    <link href="http://blog.golearns.org/2018/09/17/webrtc%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA/"/>
    <id>http://blog.golearns.org/2018/09/17/webrtc服务端搭建/</id>
    <published>2018-09-17T15:07:37.000Z</published>
    <updated>2018-09-17T15:17:02.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="webrtc服务端"><a href="#webrtc服务端" class="headerlink" title="webrtc服务端"></a>webrtc服务端</h1><h2 id="搭建房间服务器"><a href="#搭建房间服务器" class="headerlink" title="搭建房间服务器"></a>搭建房间服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y java-1.8.0-openjdk</span><br><span class="line">yum install -y nodejs</span><br><span class="line">yum install python</span><br><span class="line">yum install python-test</span><br><span class="line">git clone  https://github.com/webrtc/apprtc.git</span><br><span class="line">cd apprtc</span><br><span class="line">npm install</span><br><span class="line">npm -g install grunt</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 修改</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz apprtc]# cat src/app_engine/constants.py</span><br><span class="line"><span class="meta">#</span> Copyright 2015 Google Inc. All Rights Reserved.</span><br><span class="line"></span><br><span class="line">"""AppRTC Constants.</span><br><span class="line"></span><br><span class="line">This module contains the constants used in AppRTC Python modules.</span><br><span class="line">"""</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Deprecated domains which we should to redirect to REDIRECT_URL.</span><br><span class="line">REDIRECT_DOMAINS =  [</span><br><span class="line">  'apprtc.appspot.com', 'apprtc.webrtc.org', 'www.appr.tc'</span><br><span class="line">]</span><br><span class="line"><span class="meta">#</span> URL which we should redirect to if matching in REDIRECT_DOMAINS.</span><br><span class="line">REDIRECT_URL = 'https://appr.tc'</span><br><span class="line"></span><br><span class="line">ROOM_MEMCACHE_EXPIRATION_SEC = 60 * 60 * 24</span><br><span class="line">MEMCACHE_RETRY_LIMIT = 100</span><br><span class="line"></span><br><span class="line">LOOPBACK_CLIENT_ID = 'LOOPBACK_CLIENT_ID'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Turn/Stun server override. This allows AppRTC to connect to turn servers</span><br><span class="line"><span class="meta">#</span> directly rather than retrieving them from an ICE server provider.</span><br><span class="line">ICE_SERVER_OVERRIDE = None</span><br><span class="line"><span class="meta">#</span> Enable by uncomment below and comment out above, then specify turn and stun</span><br><span class="line"><span class="meta">#</span> ICE_SERVER_OVERRIDE  = [</span><br><span class="line"><span class="meta">#</span>   &#123;</span><br><span class="line"><span class="meta">#</span>     "urls": [</span><br><span class="line"><span class="meta">#</span>       "turn:hostname/IpToTurnServer:19305?transport=udp",</span><br><span class="line"><span class="meta">#</span>       "turn:hostname/IpToTurnServer:19305?transport=tcp"</span><br><span class="line"><span class="meta">#</span>     ],</span><br><span class="line"><span class="meta">#</span>     "username": "TurnServerUsername",</span><br><span class="line"><span class="meta">#</span>     "credential": "TurnServerCredentials"</span><br><span class="line"><span class="meta">#</span>   &#125;,</span><br><span class="line"><span class="meta">#</span>   &#123;</span><br><span class="line"><span class="meta">#</span>     "urls": [</span><br><span class="line"><span class="meta">#</span>       "stun:hostname/IpToStunServer:19302"</span><br><span class="line"><span class="meta">#</span>     ]</span><br><span class="line"><span class="meta">#</span>   &#125;</span><br><span class="line"><span class="meta">#</span> ]</span><br><span class="line"></span><br><span class="line">TURN_BASE_URL = 'https://webrtc.m2lan.com'</span><br><span class="line">TURN_URL_TEMPLATE = '%s/turn.php?username=%s&amp;key=%s'</span><br><span class="line">CODE_KEY = 'zhangsan'</span><br><span class="line"></span><br><span class="line">ICE_SERVER_BASE_URL = 'https://webrtc.m2lan.com'</span><br><span class="line">ICE_SERVER_URL_TEMPLATE = '%s/iceconfig.php?key=%s'</span><br><span class="line">ICE_SERVER_API_KEY = os.environ.get('ICE_SERVER_API_KEY')</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dictionary keys in the collider instance info constant.</span><br><span class="line">WSS_INSTANCE_HOST_KEY = 'webrtc.m2lan.com:8089'</span><br><span class="line">WSS_INSTANCE_NAME_KEY = 'vm_name'</span><br><span class="line">WSS_INSTANCE_ZONE_KEY = 'zone'</span><br><span class="line">WSS_INSTANCES = [&#123;</span><br><span class="line">    WSS_INSTANCE_HOST_KEY: 'webrtc.m2lan.com:8089',</span><br><span class="line">    WSS_INSTANCE_NAME_KEY: 'wsserver-std',</span><br><span class="line">    WSS_INSTANCE_ZONE_KEY: 'us-central1-a'</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    WSS_INSTANCE_HOST_KEY: 'webrtc.m2lan.com:8089',</span><br><span class="line">    WSS_INSTANCE_NAME_KEY: 'wsserver-std-2',</span><br><span class="line">    WSS_INSTANCE_ZONE_KEY: 'us-central1-f'</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">WSS_HOST_PORT_PAIRS = [ins[WSS_INSTANCE_HOST_KEY] for ins in WSS_INSTANCES]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> memcache key for the active collider host.</span><br><span class="line">WSS_HOST_ACTIVE_HOST_KEY = 'wss_host_active_host'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dictionary keys in the collider probing result.</span><br><span class="line">WSS_HOST_IS_UP_KEY = 'is_up'</span><br><span class="line">WSS_HOST_STATUS_CODE_KEY = 'status_code'</span><br><span class="line">WSS_HOST_ERROR_MESSAGE_KEY = 'error_message'</span><br><span class="line"></span><br><span class="line">RESPONSE_ERROR = 'ERROR'</span><br><span class="line">RESPONSE_ROOM_FULL = 'FULL'</span><br><span class="line">RESPONSE_UNKNOWN_ROOM = 'UNKNOWN_ROOM'</span><br><span class="line">RESPONSE_UNKNOWN_CLIENT = 'UNKNOWN_CLIENT'</span><br><span class="line">RESPONSE_DUPLICATE_CLIENT = 'DUPLICATE_CLIENT'</span><br><span class="line">RESPONSE_SUCCESS = 'SUCCESS'</span><br><span class="line">RESPONSE_INVALID_REQUEST = 'INVALID_REQUEST'</span><br><span class="line"></span><br><span class="line">IS_DEV_SERVER = os.environ.get('APPLICATION_ID', '').startswith('dev')</span><br><span class="line"></span><br><span class="line">BIGQUERY_URL = 'https://www.googleapis.com/auth/bigquery'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dataset used in production.</span><br><span class="line">BIGQUERY_DATASET_PROD = 'prod'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dataset used when running locally.</span><br><span class="line">BIGQUERY_DATASET_LOCAL = 'dev'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> BigQuery table within the dataset.</span><br><span class="line">BIGQUERY_TABLE = 'analytics'</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>编译</span><br><span class="line">grunt build</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>安装和配置google app engine</span><br><span class="line">wget https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.50.zip</span><br><span class="line">unzip google_appengine_1.9.50.zip</span><br><span class="line"><span class="meta">#</span>编辑/etc/profile</span><br><span class="line">export PATH="$PATH:/root/google_appengine/"</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>运行房间服务器</span><br><span class="line">cd google_appengine/</span><br><span class="line">nohup ./dev_appserver.py /root/apprtc/out/app_engine &amp;</span><br></pre></td></tr></table></figure><h2 id="搭建信令服务器"><a href="#搭建信令服务器" class="headerlink" title="搭建信令服务器"></a>搭建信令服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>安装golang环境</span><br><span class="line">mkdir -p /root/go/src</span><br><span class="line"><span class="meta">#</span>编辑/etc/profile</span><br><span class="line">export GOPATH=$HOME/go</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br><span class="line">export PATH=$PATH:/$GOPATH/bin</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>拷贝/root/apprtc/src/collider/目录下的三个目录（collider、collidermain、collidertest）复制到/root/goWorkspace/src/目录下</span><br><span class="line">cp -rf /root/apprtc/src/collider/* /root/goWorkspace/src</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编辑修改房间服务器地址</span><br><span class="line">vim /root/go/src/collidermain/main.go</span><br><span class="line">var roomSrv = flag.String("room-server", "https://webrtc.m2lan.com", "The origin of the room server")</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编辑修改ssl</span><br><span class="line">vim /root/go/src/collider/collider.go</span><br><span class="line"><span class="meta">#</span>将</span><br><span class="line">e = server.ListenAndServeTLS("/cert/cert.pem", "/cert/key.pem")</span><br><span class="line"><span class="meta">#</span>改为</span><br><span class="line">e = server.ListenAndServeTLS("/etc/letsencrypt/live/webrtc.m2lan.com/fullchain.pem", "/etc/letsencrypt/live/webrtc.m2lan.com/privkey.pem")</span><br></pre></td></tr></table></figure><h3 id="编译信令服务器"><a href="#编译信令服务器" class="headerlink" title="编译信令服务器"></a>编译信令服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /root/go/src/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz src]# go get collidermain</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz src]# go install collidermain</span><br></pre></td></tr></table></figure><h3 id="运行信令服务器"><a href="#运行信令服务器" class="headerlink" title="运行信令服务器"></a>运行信令服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd go/bin</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz bin]# nohup ./collidermain -port=8089 -tls=true &amp;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 使用systemd管理</span><br><span class="line"><span class="meta">#</span> 添加/collider/start.sh文件</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# mkdir /collider</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /collider/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz collider]# vim start.sh</span><br><span class="line"><span class="meta">#</span>!/bin/sh -</span><br><span class="line">/root/go/bin/collidermain -port=8089 -tls=true 2&gt;&gt; /collider/collider.log</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz collider]# chmod 744 start.sh</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /lib/systemd/system/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz system]# vim collider.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=AppRTC signalling server (Collider)</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/collider/start.sh</span><br><span class="line">StandardOutput=null</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=collider.service</span><br><span class="line"><span class="meta">#</span> 启用服务</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# systemctl enable collider.service</span><br><span class="line"><span class="meta">#</span> 运行</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# systemctl start collider.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 记录运行时日志</span><br><span class="line"><span class="meta">#</span> 日志每天轮换，10天后删除，日志存放在/collider目录</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /etc/logrotate.d/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz logrotate.d]# vim collider</span><br><span class="line">/collider/collider.log &#123;</span><br><span class="line">    daily</span><br><span class="line">    compress</span><br><span class="line">    copytruncate</span><br><span class="line">    dateext</span><br><span class="line">    missingok</span><br><span class="line">    notifempty</span><br><span class="line">    rotate 10</span><br><span class="line">    sharedscripts</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="搭建STUN-TURN服务器"><a href="#搭建STUN-TURN服务器" class="headerlink" title="搭建STUN/TURN服务器"></a>搭建STUN/TURN服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# wget http://coturn.net/turnserver/v4.5.0.7/turnserver-4.5.0.7-CentOS7.4-x86_64.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# tar xvfz turnserver-4.5.0.7-CentOS7.4-x86_64.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd turnserver-4.5.0.7</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz turnserver-4.5.0.7]# ./install.sh</span><br><span class="line"><span class="meta">#</span>编辑turnserver.conf</span><br><span class="line"><span class="meta">#</span>key码生成</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz turnserver-4.5.0.7]# turnadmin -k -u zhangsan -r north.gov -p zhangsan</span><br><span class="line"><span class="meta">#</span>证书生成</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz etc]# openssl req -x509 -newkey rsa:2048 -keyout /usr/local/etc/turn_server_pkey.pem -out /usr/local/etc/turn_server_cert.pem -days 9999 -nodes</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# vim /etc/turnserver/turnserver.conf</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz etc]# cat /etc/turnserver/turnserver.conf | grep -v "^#" | grep -v '^$'</span><br><span class="line">listening-device=eth0</span><br><span class="line">listening-port=3478</span><br><span class="line">relay-device=eth0</span><br><span class="line">min-port=49152</span><br><span class="line">max-port=65535</span><br><span class="line">Verbose</span><br><span class="line">fingerprint</span><br><span class="line">lt-cred-mech</span><br><span class="line">use-auth-secret</span><br><span class="line">static-auth-secret=zhangsan #此处要和房间服务器配置时constants.py文件中的CODE_KEY保持一致。</span><br><span class="line">user=zhangsan:0x934893f0ea44d4355cbfd48a40ae023c</span><br><span class="line">user=zhangsan:zhangsan</span><br><span class="line">stale-nonce=600</span><br><span class="line">cert=/usr/local/etc/turn_server_cert.pem</span><br><span class="line">pkey=/usr/local/etc/turn_server_pkey.pem</span><br><span class="line">no-stdout-log</span><br><span class="line">syslog</span><br><span class="line">no-loopback-peers</span><br><span class="line">no-multicast-peers</span><br><span class="line">pidfile="/var/run/turnserver/turnserver.pid"</span><br><span class="line">mobility</span><br><span class="line">no-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>运行-r: 外部服务器地址</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# turnserver -V -r 47.88.159.236:3478 -a -o -c /etc/turnserver/turnserver.conf</span><br></pre></td></tr></table></figure><h3 id="创建turn-php和iceconfig-php"><a href="#创建turn-php和iceconfig-php" class="headerlink" title="创建turn.php和iceconfig.php"></a>创建turn.php和iceconfig.php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/share/nginx/html/turn.php </span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $request_username = $_GET[<span class="string">"username"</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($request_username)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"username == null"</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $request_key = $_GET[<span class="string">"key"</span>];</span><br><span class="line">    $time_to_live = <span class="number">600</span>;</span><br><span class="line">    $timestamp = time() + $time_to_live;<span class="comment">//失效时间</span></span><br><span class="line">    $response_username = $timestamp.<span class="string">":"</span>.$_GET[<span class="string">"username"</span>];</span><br><span class="line">    $response_key = $request_key;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($response_key)) &#123;</span><br><span class="line">        $response_key = <span class="string">"zhangsan"</span>; <span class="comment">//constants.py中CEOD_KEY  </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $response_password = getSignature($response_username, $response_key);  </span><br><span class="line"></span><br><span class="line">    $jsonObj = <span class="keyword">new</span> Response();</span><br><span class="line">    $jsonObj-&gt;username = $response_username;</span><br><span class="line">    $jsonObj-&gt;password = $response_password;</span><br><span class="line">    $jsonObj-&gt;ttl = <span class="number">86400</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此处需配置自己的服务器</span></span><br><span class="line">    $jsonObj-&gt;uris= <span class="keyword">array</span>(<span class="string">"stun:webrtc.m2lan.com:3478"</span>,<span class="string">"turn:webrtc.m2lan.com:3478?transport=udp"</span>,<span class="string">"turn:webrtc.m2lan.com?transport=tcp"</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($jsonObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用HMAC-SHA1算法生成签名值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $str 源串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $key 密钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 签名值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getSignature</span><span class="params">($str, $key)</span> </span>&#123;</span><br><span class="line">        $signature = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (function_exists(<span class="string">'hash_hmac'</span>)) &#123;</span><br><span class="line">            $signature = base64_encode(hash_hmac(<span class="string">"sha1"</span>, $str, $key, <span class="keyword">true</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $blocksize = <span class="number">64</span>;</span><br><span class="line">            $hashfunc = <span class="string">'sha1'</span>;</span><br><span class="line">            <span class="keyword">if</span> (strlen($key) &gt; $blocksize) &#123;</span><br><span class="line">                $key = pack(<span class="string">'H*'</span>, $hashfunc($key));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $key = str_pad($key, $blocksize, chr(<span class="number">0x00</span>));</span><br><span class="line">            $ipad = str_repeat(chr(<span class="number">0x36</span>), $blocksize);</span><br><span class="line">            $opad = str_repeat(chr(<span class="number">0x5c</span>), $blocksize);</span><br><span class="line">            $hmac = pack(</span><br><span class="line">                <span class="string">'H*'</span>, $hashfunc(($key ^ $opad). pack(<span class="string">'H*'</span>, $hashfunc(($key ^ $ipad) . $str)))</span><br><span class="line">            );</span><br><span class="line">            $signature = base64_encode($hmac);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $signature;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $username = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $password = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $ttl = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $uris = <span class="keyword">array</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/share/nginx/html/iceconfig.php</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">    $request_username = <span class="string">"zhangsan"</span>;  <span class="comment">//配置成自己的turn服务器用户名</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($request_username)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"username == null"</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">    $request_key = <span class="string">"zhangsan"</span>;  <span class="comment">//配置成自己的turn服务器密码</span></span><br><span class="line">    $time_to_live = <span class="number">600</span>;</span><br><span class="line">    $timestamp = time() + $time_to_live;<span class="comment">//失效时间</span></span><br><span class="line">    $response_username = $timestamp.<span class="string">":"</span>.$_GET[<span class="string">"username"</span>];</span><br><span class="line">    $response_key = $request_key;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($response_key)) &#123;</span><br><span class="line">        $response_key = <span class="string">"zhangsan"</span>;<span class="comment">//constants.py中CEOD_KEY</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $response_password = getSignature($response_username, $response_key);</span><br><span class="line"></span><br><span class="line">    $arrayObj = <span class="keyword">array</span>();</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'username'</span>] = $response_username;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'credential'</span>] = $response_password;</span><br><span class="line">    <span class="comment">//配置成自己的stun/turn服务器</span></span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'urls'</span>][<span class="number">0</span>] = <span class="string">"stun:webrtc.m2lan.com:3478"</span>;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'urls'</span>][<span class="number">1</span>] = <span class="string">"turn:webrtc.m2lan.com:3478?transport=tcp"</span>;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'uris'</span>][<span class="number">0</span>] = <span class="string">"stun:webrtc.m2lan.com:3478"</span>;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'uris'</span>][<span class="number">1</span>] = <span class="string">"turn:webrtc.m2lan.com:3478?transport=tcp"</span>;</span><br><span class="line">    $jsonObj = <span class="keyword">new</span> Response();</span><br><span class="line">    $jsonObj-&gt;lifetimeDuration = <span class="string">"300.000s"</span>;</span><br><span class="line">    $jsonObj-&gt;iceServers = $arrayObj;</span><br><span class="line">    <span class="keyword">echo</span> json_encode($jsonObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用HMAC-SHA1算法生成签名值</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> $str 源串</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> $key 密钥</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 签名值</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getSignature</span><span class="params">($str, $key)</span> </span>&#123;</span><br><span class="line">        $signature = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (function_exists(<span class="string">'hash_hmac'</span>)) &#123;</span><br><span class="line">            $signature = base64_encode(hash_hmac(<span class="string">"sha1"</span>, $str, $key, <span class="keyword">true</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $blocksize = <span class="number">64</span>;</span><br><span class="line">            hashfunc = <span class="string">'sha1'</span>;</span><br><span class="line">            <span class="keyword">if</span> (strlen($key) &gt; $blocksize) &#123;</span><br><span class="line">                $key = pack(<span class="string">'H*'</span>, $hashfunc($key));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $key = str_pad($key, $blocksize, chr(<span class="number">0x00</span>));</span><br><span class="line">            $ipad = str_repeat(chr(<span class="number">0x36</span>), $blocksize);</span><br><span class="line">            $opad = str_repeat(chr(<span class="number">0x5c</span>), $blocksize);</span><br><span class="line">            $hmac = pack(<span class="string">'H*'</span>, $hashfunc(($key ^ $opad) . pack(<span class="string">'H*'</span>, $hashfunc(($key ^ $ipad) . $str))));</span><br><span class="line">            $signature = base64_encode($hmac);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $signature;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $lifetimeDuration = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $iceServers = <span class="keyword">array</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="运行过程中的问题"><a href="#运行过程中的问题" class="headerlink" title="运行过程中的问题"></a>运行过程中的问题</h2><ul><li>Failed to start signaling: Failed to execute ‘pushState’ on ‘History’: A history state object with URL ‘<a href="http://192.168.6.54/r/198676628" target="_blank" rel="noopener">http://192.168.6.54/r/198676628</a>’ cannot be created in a document with origin ‘<a href="https://192.168.6.54/" target="_blank" rel="noopener">https://192.168.6.54</a>’ and URL ‘<a href="https://192.168.6.54/" target="_blank" rel="noopener">https://192.168.6.54/</a></li></ul><blockquote><p><strong>解决方法1：</strong> 房间服务器编译完成后，在/root/apprtc/out/app_engine/js/apprtc.debug.js文件中找到window.history.pushState({‘roomId’: roomId, ‘roomLink’: roomLink}, roomId, roomLink)，把这句话注释掉，重新运行即可。（如果重新编译，需要重新修改）</p><p><strong>解决方法2：</strong> 在/root/apprtc/src/web_app/js/appcontroller.js文件中找到window.history.pushState({‘roomId’: roomId, ‘roomLink’: roomLink}, roomId, roomLink)，把这句话注释掉，然后重新编译，重新运行房间服务器即可。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;webrtc服务端&quot;&gt;&lt;a href=&quot;#webrtc服务端&quot; class=&quot;headerlink&quot; title=&quot;webrtc服务端&quot;&gt;&lt;/a&gt;webrtc服务端&lt;/h1&gt;&lt;h2 id=&quot;搭建房间服务器&quot;&gt;&lt;a href=&quot;#搭建房间服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建房间服务器&quot;&gt;&lt;/a&gt;搭建房间服务器&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y java-1.8.0-openjdk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install -y nodejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install python-test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone  https://github.com/webrtc/apprtc.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd apprtc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm -g install grunt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="webrtc" scheme="http://blog.golearns.org/categories/webrtc/"/>
    
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
      <category term="webrtc" scheme="http://blog.golearns.org/tags/webrtc/"/>
    
  </entry>
  
  <entry>
    <title>swoole集群消息分发</title>
    <link href="http://blog.golearns.org/2018/09/17/swoole%E9%9B%86%E7%BE%A4%E6%B6%88%E6%81%AF%E5%88%86%E5%8F%91/"/>
    <id>http://blog.golearns.org/2018/09/17/swoole集群消息分发/</id>
    <published>2018-09-17T15:07:03.000Z</published>
    <updated>2018-09-17T15:17:12.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="swoole集群消息分发"><a href="#swoole集群消息分发" class="headerlink" title="swoole集群消息分发"></a>swoole集群消息分发</h1><ul><li><p>配置文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// IM 配置</span></span><br><span class="line">    <span class="string">'im'</span> =&gt; [</span><br><span class="line">        <span class="string">'ack_time'</span> =&gt; <span class="number">300</span>,</span><br><span class="line">        <span class="string">'daemonize_enable'</span> =&gt; <span class="keyword">false</span>, <span class="comment">// 是否后台运行</span></span><br><span class="line">        <span class="string">'host'</span> =&gt; <span class="string">'0.0.0.0'</span>, <span class="comment">// 监听的host</span></span><br><span class="line">        <span class="string">'port'</span> =&gt; <span class="number">9999</span>, <span class="comment">// 监听的端口</span></span><br><span class="line">        <span class="string">'heartbeat_idle_time'</span> =&gt; <span class="number">300</span>, <span class="comment">// 连接最大允许空闲的时间</span></span><br><span class="line">        <span class="string">'heartbeat_check_interval'</span> =&gt; <span class="number">60</span>, <span class="comment">// 心跳检测，每个多久轮询一次</span></span><br><span class="line">        <span class="string">'enable_ssl'</span> =&gt; <span class="keyword">false</span>, <span class="comment">// 是否启用ssl</span></span><br><span class="line">        <span class="string">'pid_file'</span> =&gt; ROOT_PATH . <span class="string">'groupchat.pid'</span>,</span><br><span class="line">        <span class="string">'log_file'</span> =&gt; LOG_PATH . <span class="string">'swoole'</span> . DS . date(<span class="string">'Ymd'</span>) . <span class="string">'.log'</span>,</span><br><span class="line">        <span class="string">'ssl_cert_file'</span> =&gt; <span class="string">'/etc/letsencrypt/live/test.im.movie952.net/fullchain.pem'</span>, <span class="comment">// cert证书</span></span><br><span class="line">        <span class="string">'ssl_key_file'</span> =&gt; <span class="string">'/etc/letsencrypt/live/test.im.movie952.net/privkey.pem'</span>, <span class="comment">// key私钥</span></span><br><span class="line">        <span class="string">'message_base_uri'</span> =&gt; <span class="string">'http://192.168.3.8:8083/api/'</span>,</span><br><span class="line">        <span class="string">'movie_base_uri'</span> =&gt; <span class="string">'http://movie.api.com/api/'</span>,</span><br><span class="line">        <span class="string">'enable_push'</span> =&gt; <span class="keyword">false</span>,</span><br><span class="line">        <span class="string">'push_accessKey'</span> =&gt; <span class="string">'LTAIq0MVVNyZiUz5'</span>,</span><br><span class="line">        <span class="string">'push_accessKeySecret'</span> =&gt; <span class="string">'qVhQhdIxn8dWiebROKO8hybn1T3mXq'</span>,</span><br><span class="line">        <span class="string">'push_ios_appkey'</span> =&gt; <span class="string">'24913838'</span>,</span><br><span class="line">        <span class="string">'push_android_appkey'</span> =&gt; <span class="string">''</span>,</span><br><span class="line">        <span class="string">'serverNode'</span> =&gt; <span class="string">'node1'</span></span><br><span class="line">    ],</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>建立链接握手</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义握手规则</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onHandShake</span><span class="params">($request, $response)</span> </span>&#123;</span><br><span class="line">        $user = <span class="keyword">$this</span>-&gt;checkRequest($request);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>($user)) &#123;</span><br><span class="line">            $response-&gt;header(<span class="string">'message'</span>, <span class="string">'用户身份验证失败'</span>);</span><br><span class="line">            $response-&gt;status(<span class="number">403</span>);</span><br><span class="line">            $response-&gt;end();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">isset</span>($request-&gt;header[<span class="string">'sec-websocket-key'</span>])) &#123;</span><br><span class="line">            $response-&gt;end();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> === preg_match(<span class="string">'#^[+/0-9A-Za-z]&#123;21&#125;[AQgw]==$#'</span>, $request-&gt;header[<span class="string">'sec-websocket-key'</span>])</span><br><span class="line">            || <span class="number">16</span> !== strlen(base64_decode($request-&gt;header[<span class="string">'sec-websocket-key'</span>]))) &#123;</span><br><span class="line">            $response-&gt;status(<span class="number">403</span>);</span><br><span class="line">            $response-&gt;end();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $key = base64_encode(sha1($request-&gt;header[<span class="string">'sec-websocket-key'</span>].<span class="string">'258EAFA5-E914-47DA-95CA-C5AB0DC85B11'</span>, <span class="keyword">true</span>));</span><br><span class="line">        $headers = [</span><br><span class="line">            <span class="string">'Upgrade'</span> =&gt; <span class="string">'websocket'</span>,</span><br><span class="line">            <span class="string">'Connection'</span> =&gt; <span class="string">'Upgrade'</span>,</span><br><span class="line">            <span class="string">'Sec-WebSocket-Accept'</span> =&gt; $key,</span><br><span class="line">            <span class="string">'Sec-WebSocket-Version'</span> =&gt; <span class="string">'13'</span>,</span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($headers <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">            $response-&gt;header($key, $val);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $response-&gt;status(<span class="number">101</span>);</span><br><span class="line">        $response-&gt;end();</span><br><span class="line"></span><br><span class="line">        $fd = $request-&gt;fd;</span><br><span class="line">        $server = <span class="keyword">$this</span>-&gt;swoole;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>($user[<span class="string">'userFd'</span>]) &amp;&amp; $server-&gt;exist($user[<span class="string">'userFd'</span>])) &#123;</span><br><span class="line">            $server-&gt;after(<span class="number">100</span>, <span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span><span class="params">($fd, $server, $user)</span> </span>&#123;</span><br><span class="line">                $server-&gt;push($user[<span class="string">'userFd'</span>], json_encode([</span><br><span class="line">                    MessageType::CHAT_STATUS =&gt; MessageType::RESPONSE_ACCOUNT_ALREADY_LOGIN_ERROR,</span><br><span class="line">                    MessageType::CHAT_BODY =&gt; <span class="string">'您的账号已在其他设备登录，您已被迫下线'</span></span><br><span class="line">                ]));</span><br><span class="line"></span><br><span class="line">                $server-&gt;close($user[<span class="string">'userFd'</span>]);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'用户: '</span> . $user[<span class="string">'userId'</span>] . <span class="string">'登录'</span> . PHP_EOL;</span><br><span class="line"></span><br><span class="line">                $server-&gt;bind($fd, $user[<span class="string">'userId'</span>]);</span><br><span class="line">                <span class="keyword">$this</span>-&gt;swoole-&gt;redis-&gt;hset(RedisKey::WEBSOCKET_INFOFD, config(<span class="string">'im.serverNode'</span>) . <span class="string">'-'</span> . $user[<span class="string">'userId'</span>], $fd); <span class="comment">// 根据节点保存用户fd</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'用户: '</span> . $user[<span class="string">'userId'</span>] . <span class="string">'登录'</span> . PHP_EOL;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// bind:</span></span><br><span class="line">            $server-&gt;bind($fd, $user[<span class="string">'userId'</span>]);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;swoole-&gt;redis-&gt;hset(RedisKey::WEBSOCKET_INFOFD, config(<span class="string">'im.serverNode'</span>) . <span class="string">'-'</span> . $user[<span class="string">'userId'</span>], $fd);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $server-&gt;defer(<span class="function"><span class="keyword">function</span> <span class="params">()</span> <span class="title">use</span> <span class="params">($fd, $server, $user)</span> </span>&#123;</span><br><span class="line">            $server-&gt;task([<span class="string">'fd'</span> =&gt; $fd, <span class="string">'event'</span> =&gt; <span class="string">'userOnlineMessageGroups'</span>, <span class="string">'uid'</span> =&gt; $user[<span class="string">'userId'</span>]]);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>用户退出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onClose</span><span class="params">($server, $fd)</span> </span>&#123;</span><br><span class="line">        $userInfo = $server-&gt;connection_info($fd);</span><br><span class="line">        <span class="keyword">if</span> ($userInfo !== <span class="keyword">false</span> &amp;&amp; !<span class="keyword">empty</span>($userInfo[<span class="string">'uid'</span>])) &#123;</span><br><span class="line">            $userId = $userInfo[<span class="string">'uid'</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'用户: '</span> . $userId . <span class="string">'退出'</span> . PHP_EOL;</span><br><span class="line"></span><br><span class="line">            $server-&gt;redis-&gt;hDel(RedisKey::WEBSOCKET_INFOFD, config(<span class="string">'im.serverNode'</span>) . <span class="string">'-'</span> . $userId); <span class="comment">// 所在节点删除</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 用户是否进入过面对面建群</span></span><br><span class="line">            $recordDialog = $server-&gt;redis-&gt;hGet(<span class="string">'record_dialog'</span>, $userId);</span><br><span class="line">            <span class="keyword">if</span> ($recordDialog !== <span class="keyword">false</span>) &#123;</span><br><span class="line">                $server-&gt;redis-&gt;zRem($recordDialog, $userId);</span><br><span class="line">                $server-&gt;redis-&gt;hDel(<span class="string">'record_dialog'</span>, $userId);</span><br><span class="line"></span><br><span class="line">                $exists = $server-&gt;redis-&gt;exists($recordDialog);</span><br><span class="line">                <span class="keyword">if</span> (!$exists) &#123;</span><br><span class="line">                    $server-&gt;redis-&gt;hDel(<span class="string">'record_face_each_mid'</span>, $recordDialog);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>消息转发</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sendToClusterServerNode</span><span class="params">($redis, $uid, $data = [], $chatType)</span> </span>&#123;</span><br><span class="line">    $serverNodes = $redis-&gt;hGetAll(<span class="string">'serverNodes'</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($serverNodes) . PHP_EOL;</span><br><span class="line">    <span class="keyword">if</span> ($serverNodes !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($serverNodes <span class="keyword">as</span> $k =&gt; $serverNode) &#123;</span><br><span class="line">            $userFd = $redis-&gt;hGet(<span class="string">'WEBSOCKET_INFOFD'</span>, $k . <span class="string">'-'</span> . $uid);</span><br><span class="line">            <span class="keyword">if</span> ($userFd !== <span class="keyword">false</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;client-&gt;post(<span class="string">'http://'</span> . $serverNode, [<span class="string">'form_params'</span> =&gt; [<span class="string">'event'</span> =&gt; <span class="string">'sendClusterMessage'</span>, <span class="string">'data'</span> =&gt; $data, <span class="string">'chatType'</span> =&gt; $chatType]]);</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>请求处理</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">onRequest</span><span class="params">($request, $response)</span> </span>&#123;</span><br><span class="line">        $checkRequest = <span class="keyword">$this</span>-&gt;checkOnRequest($request);</span><br><span class="line">        <span class="keyword">if</span> ($checkRequest !== <span class="keyword">false</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($request-&gt;post[<span class="string">'event'</span>])) &#123;</span><br><span class="line">                $data  = $request-&gt;post;</span><br><span class="line">                $event = $data[<span class="string">'event'</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ($event == <span class="string">'faceEachCreateGroup'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/OtherMessage/faceEachCreateGroup'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'pushGroupAnnouncement'</span>) &#123;</span><br><span class="line">                    $announcement = $data[<span class="string">'announcement'</span>];</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/pushGroupAnnouncement'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $announcement]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'shareCard'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/shareCard'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'groupAdminTransfer'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/groupAdminTransfer'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'updateGroupName'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/updateGroupName'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'groupJoinReview'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/groupJoinReview'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'updateGroupReviewStatus'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/updateGroupReviewStatus'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'batchInviteUserJoinGroup'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/batchInviteUserJoinGroup'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'batchInviteUserRemoveGroup'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/batchInviteUserRemoveGroup'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'addFriend'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/FriendManager/addFriend'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'acceptAddFriend'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/FriendManager/acceptAddFriend'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'createGroupChat'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/createGroupChat'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125; <span class="keyword">elseif</span> ($event == <span class="string">'systemNotify'</span>) &#123;</span><br><span class="line">                    action(<span class="string">'index/SendPackMessage/systemNotify'</span>, [<span class="string">'swoole'</span> =&gt; <span class="keyword">$this</span>-&gt;swoole, <span class="string">'data'</span> =&gt; $data[<span class="string">'data'</span>]]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">// 处理消息分发</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">isset</span>($request-&gt;post[<span class="string">'event'</span>])) &#123;</span><br><span class="line">                $event = $request-&gt;post[<span class="string">'event'</span>];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> ($event == <span class="string">'sendClusterMessage'</span>) &#123;</span><br><span class="line">                    $sendData = $request-&gt;post[<span class="string">'data'</span>];</span><br><span class="line">                    sendToUserOrWriteOffline(</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;swoole,</span><br><span class="line">                        $sendData[<span class="string">'toId'</span>],</span><br><span class="line">                        $sendData,</span><br><span class="line">                        $request-&gt;post[<span class="string">'chatType'</span>],</span><br><span class="line">                        <span class="keyword">$this</span>-&gt;request,</span><br><span class="line">                        <span class="keyword">new</span> MessagePush(),</span><br><span class="line">                        <span class="keyword">false</span>,</span><br><span class="line">                        <span class="keyword">true</span></span><br><span class="line">                    );</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $response-&gt;end(json_encode([]));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;swoole集群消息分发&quot;&gt;&lt;a href=&quot;#swoole集群消息分发&quot; class=&quot;headerlink&quot; title=&quot;swoole集群消息分发&quot;&gt;&lt;/a&gt;swoole集群消息分发&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;配置文件&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// IM 配置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&#39;im&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;ack_time&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;daemonize_enable&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 是否后台运行&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;host&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;0.0.0.0&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 监听的host&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;port&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;9999&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 监听的端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;heartbeat_idle_time&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 连接最大允许空闲的时间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;heartbeat_check_interval&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 心跳检测，每个多久轮询一次&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;enable_ssl&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// 是否启用ssl&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;pid_file&#39;&lt;/span&gt; =&amp;gt; ROOT_PATH . &lt;span class=&quot;string&quot;&gt;&#39;groupchat.pid&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;log_file&#39;&lt;/span&gt; =&amp;gt; LOG_PATH . &lt;span class=&quot;string&quot;&gt;&#39;swoole&#39;&lt;/span&gt; . DS . date(&lt;span class=&quot;string&quot;&gt;&#39;Ymd&#39;&lt;/span&gt;) . &lt;span class=&quot;string&quot;&gt;&#39;.log&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;ssl_cert_file&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;/etc/letsencrypt/live/test.im.movie952.net/fullchain.pem&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// cert证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;ssl_key_file&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;/etc/letsencrypt/live/test.im.movie952.net/privkey.pem&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;// key私钥&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;message_base_uri&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;http://192.168.3.8:8083/api/&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;movie_base_uri&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;http://movie.api.com/api/&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;enable_push&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;push_accessKey&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;LTAIq0MVVNyZiUz5&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;push_accessKeySecret&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;qVhQhdIxn8dWiebROKO8hybn1T3mXq&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;push_ios_appkey&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;24913838&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;push_android_appkey&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;serverNode&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;node1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="swoole" scheme="http://blog.golearns.org/categories/swoole/"/>
    
    
      <category term="swoole" scheme="http://blog.golearns.org/tags/swoole/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp-oauth2</title>
    <link href="http://blog.golearns.org/2018/09/17/thinkphp-oauth2/"/>
    <id>http://blog.golearns.org/2018/09/17/thinkphp-oauth2/</id>
    <published>2018-09-17T15:05:45.000Z</published>
    <updated>2018-09-17T15:25:01.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OAuth2-Server-PHP"><a href="#OAuth2-Server-PHP" class="headerlink" title="OAuth2 Server PHP"></a>OAuth2 Server PHP</h1><p><a href="http://bshaffer.github.io/oauth2-server-php-docs" target="_blank" rel="noopener">oauth2-server-php-docs</a></p><h3 id="获取OAuth2"><a href="#获取OAuth2" class="headerlink" title="获取OAuth2"></a>获取OAuth2</h3><pre><code>composer require bshaffer/oauth2-server-php &quot;^1.10&quot;</code></pre><h3 id="Authorized认证方式"><a href="#Authorized认证方式" class="headerlink" title="Authorized认证方式"></a>Authorized认证方式</h3><blockquote><p><a href="http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz" target="_blank" rel="noopener">http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz</a></p><p><a href="http://swoole-chat.com/index/index/testToken" target="_blank" rel="noopener">http://swoole-chat.com/index/index/testToken</a> form-data: [grant_type: authorization_code, code: authorizedCode]</p></blockquote><pre><code>use utils\Crypt;use OAuth2\Autoloader;use OAuth2\Server;use OAuth2\GrantType\AuthorizationCode;use OAuth2\GrantType\ClientCredentials;use OAuth2\GrantType\UserCredentials;use OAuth2\Request;use OAuth2\Response;use OAuth2\Storage\Redis as StorageRedis;use cache\Redis;header(&apos;Access-Control-Allow-Origin:*&apos;);class Index {    protected $server;    public function __construct() {        // 使用PDO方式存储        // $storage = new Pdo([&apos;dsn&apos; =&gt; &apos;mysql:dbname=oauth;host=192.168.3.188&apos;, &apos;username&apos; =&gt; &apos;root&apos;, &apos;password&apos; =&gt; &apos;123456&apos;]);        // 使用Redis方式存储        $redis = new Redis(config(&apos;redis&apos;));        $storage = new StorageRedis($redis);        // Authorized example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz        $storage-&gt;setClientDetails(&apos;ios&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;android&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;phpweb&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $server = new Server($storage);        // 授权码        $server-&gt;addGrantType(new AuthorizationCode($storage));        $this-&gt;server = $server;    }    /**     * Authorized认证     * example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz     * @return bool|string     */    public function testAuthorize() {        $request = Request::createFromGlobals();        $response = new Response();        if (!$this-&gt;server-&gt;validateAuthorizeRequest($request, $response)) {            $response-&gt;send();            die;        }        if (empty($_POST)) {            return &apos;                &lt;form method=&quot;post&quot;&gt;                  &lt;label&gt;是否对testclient用户授权?&lt;/label&gt;&lt;br /&gt;                  &lt;input type=&quot;submit&quot; name=&quot;authorized&quot; value=&quot;yes&quot;&gt;                  &lt;input type=&quot;submit&quot; name=&quot;authorized&quot; value=&quot;no&quot;&gt;                &lt;/form&gt;            &apos;;        }        $is_authorized = ($_POST[&apos;authorized&apos;] === &apos;yes&apos;);        $this-&gt;server-&gt;handleAuthorizeRequest($request, $response, $is_authorized, 1);        if ($is_authorized) {            $code = substr($response-&gt;getHttpHeader(&apos;Location&apos;), strpos($response-&gt;getHttpHeader(&apos;Location&apos;), &apos;code=&apos;) + 5, 40);            return $code;        }        return &apos;授权失败&apos;;    }    /**     * 获取token     * @return [type] [description]     */    public function testToken() {        return $this-&gt;server-&gt;handleTokenRequest(Request::createFromGlobals())-&gt;send();    }    /**     * 请求API     * @return [type] [description]     */    public function testApi() {        $request = Request::createFromGlobals();        if (!$this-&gt;server-&gt;verifyResourceRequest($request)) {            return $this-&gt;server-&gt;getResponse()-&gt;send();        }        $result = $this-&gt;server-&gt;getAccessTokenData($request);        return json_encode([&apos;success&apos; =&gt; true, &apos;message&apos; =&gt; &apos;你可以访问API了&apos;, &apos;userId&apos; =&gt; $result[&apos;user_id&apos;]]);    }}</code></pre><a id="more"></a><h3 id="Password认证方式"><a href="#Password认证方式" class="headerlink" title="Password认证方式"></a>Password认证方式</h3><blockquote><p>curl -u phpweb:123456 <a href="http://swoole-chat.com/token" target="_blank" rel="noopener">http://swoole-chat.com/token</a> -d ‘grant_type=password&amp;username=zhangsan&amp;password=123456</p></blockquote><pre><code>use utils\Crypt;use OAuth2\Autoloader;use OAuth2\Server;use OAuth2\GrantType\AuthorizationCode;use OAuth2\GrantType\ClientCredentials;use OAuth2\GrantType\UserCredentials;use OAuth2\Request;use OAuth2\Response;use OAuth2\Storage\Redis as StorageRedis;use cache\Redis;header(&apos;Access-Control-Allow-Origin:*&apos;);class Index {    protected $server;    public function __construct() {        // 使用PDO方式存储        // $storage = new Pdo([&apos;dsn&apos; =&gt; &apos;mysql:dbname=oauth;host=192.168.3.188&apos;, &apos;username&apos; =&gt; &apos;root&apos;, &apos;password&apos; =&gt; &apos;123456&apos;]);        // 使用Redis方式存储        $redis = new Redis(config(&apos;redis&apos;));        $storage = new StorageRedis($redis);        // Authorized example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz        $storage-&gt;setClientDetails(&apos;ios&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;android&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;phpweb&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        // Password example: curl -u phpweb:123456 http://swoole-chat.com/token -d &apos;grant_type=password&amp;username=zhangsan&amp;password=123456        $server = new Server($storage);        // 用户凭据        $server-&gt;addGrantType(new UserCredentials($storage));        $this-&gt;server = $server;    }    /**     * 获取token     * @return [type] [description]     */    public function testToken() {        $_POST[&apos;username&apos;] = 3;        $request = Request::createFromGlobals();        return $this-&gt;server-&gt;handleTokenRequest($request)-&gt;send();    }    /**     * 请求API     * @return [type] [description]     */    public function testApi() {        $request = Request::createFromGlobals();        if (!$this-&gt;server-&gt;verifyResourceRequest($request)) {            return $this-&gt;server-&gt;getResponse()-&gt;send();        }        $result = $this-&gt;server-&gt;getAccessTokenData($request);        return json_encode([&apos;success&apos; =&gt; true, &apos;message&apos; =&gt; &apos;你可以访问API了&apos;, &apos;userId&apos; =&gt; $result[&apos;user_id&apos;]]);    }}</code></pre><h3 id="令牌刷新"><a href="#令牌刷新" class="headerlink" title="令牌刷新"></a>令牌刷新</h3><ul><li><p>controller</p><pre><code>use OAuth2\GrantType\RefreshToken;use OAuth2\Scope;use OAuth2\ScopeTest;use utils\Crypt;use OAuth2\Server;use OAuth2\GrantType\AuthorizationCode;use OAuth2\GrantType\ClientCredentials;use OAuth2\GrantType\UserCredentials;use OAuth2\Request;use OAuth2\Response;use OAuth2\Storage\Redis as StorageRedis;use cache\Redis;header(&apos;Access-Control-Allow-Origin:*&apos;);class Index {    protected $server;    public function __construct() {        // Autoloader::register();        // $storage = new Pdo([&apos;dsn&apos; =&gt; &apos;mysql:dbname=oauth;host=192.168.3.188&apos;, &apos;username&apos; =&gt; &apos;root&apos;, &apos;password&apos; =&gt; &apos;123456&apos;]);        $redis = new Redis(config(&apos;redis&apos;));        $storage = new StorageRedis($redis);        $storage-&gt;setClientDetails(&apos;ios&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password refresh_token&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;android&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password refresh_token&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;phpweb&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password refresh_token&apos;, &apos;read write&apos;);        // 刷新令牌 example: curl -u phpweb:123456 http://swoole-chat.com/index/index/testToken -d &apos;grant_type=refresh_token&amp;refresh_token=xxxxxx&apos;        $server = new Server($storage, [            &apos;always_issue_new_refresh_token&apos; =&gt; true,            &apos;refresh_token_lifetime&apos; =&gt; 1209600 // 14天        ]);        // 用户凭据        $server-&gt;addGrantType(new UserCredentials($storage));        // 令牌刷新        $server-&gt;addGrantType(new RefreshToken($storage));        $this-&gt;server = $server;    }    /**     * 获取token     * @return [type] [description]     */    public function testToken() {        // 校验用户登录信息是否正确，更改username为用户ID来验证请求信息        $_POST[&apos;username&apos;] = 3;        $request = Request::createFromGlobals();        return $this-&gt;server-&gt;handleTokenRequest($request)-&gt;send();    }    /**     * 请求API     * @return [type] [description]     */    public function testApi() {        $request = Request::createFromGlobals();        if (!$this-&gt;server-&gt;verifyResourceRequest($request)) {            return $this-&gt;server-&gt;getResponse()-&gt;send();        }        $result = $this-&gt;server-&gt;getAccessTokenData($request);        return json_encode([&apos;success&apos; =&gt; true, &apos;message&apos; =&gt; &apos;你可以访问API了&apos;, &apos;userId&apos; =&gt; $result[&apos;user_id&apos;]]);    }}</code></pre></li><li><p>获取访问令牌</p><pre><code>curl -u phpweb:123456 http://swoole-chat.com/index/index/testToken -d &apos;grant_type=password&amp;username=tianqi&amp;password=123456&apos;// result:{    &quot;access_token&quot;:&quot;2fc621cf037d7906a2bf037d62f2fe286c83bdab&quot;,    &quot;expires_in&quot;:3600,    &quot;token_type&quot;:&quot;Bearer&quot;,    &quot;scope&quot;:null,    &quot;refresh_token&quot;:&quot;745e6207af4b5ec88c44f411ff736c631ffd59ed&quot;}</code></pre></li><li><p>拿到上面的refresh_token,请求刷新令牌</p><pre><code>curl -u phpweb:123456 http://swoole-chat.com/index/index/testToken -d &apos;grant_type=refresh_token&amp;refresh_token=745e6207af4b5ec88c44f411ff736c631ffd59ed&apos;// result:{     &quot;access_token&quot;:&quot;73c5382acdc41220f1b40a660a2531f40153f5d8&quot;,     &quot;expires_in&quot;:3600,     &quot;token_type&quot;:&quot;Bearer&quot;,     &quot;scope&quot;:null}</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;OAuth2-Server-PHP&quot;&gt;&lt;a href=&quot;#OAuth2-Server-PHP&quot; class=&quot;headerlink&quot; title=&quot;OAuth2 Server PHP&quot;&gt;&lt;/a&gt;OAuth2 Server PHP&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://bshaffer.github.io/oauth2-server-php-docs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;oauth2-server-php-docs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取OAuth2&quot;&gt;&lt;a href=&quot;#获取OAuth2&quot; class=&quot;headerlink&quot; title=&quot;获取OAuth2&quot;&gt;&lt;/a&gt;获取OAuth2&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;composer require bshaffer/oauth2-server-php &amp;quot;^1.10&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;Authorized认证方式&quot;&gt;&lt;a href=&quot;#Authorized认证方式&quot; class=&quot;headerlink&quot; title=&quot;Authorized认证方式&quot;&gt;&lt;/a&gt;Authorized认证方式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://swoole-chat.com/index/index/testToken&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://swoole-chat.com/index/index/testToken&lt;/a&gt; form-data: [grant_type: authorization_code, code: authorizedCode]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;use utils\Crypt;
use OAuth2\Autoloader;
use OAuth2\Server;
use OAuth2\GrantType\AuthorizationCode;
use OAuth2\GrantType\ClientCredentials;
use OAuth2\GrantType\UserCredentials;
use OAuth2\Request;
use OAuth2\Response;
use OAuth2\Storage\Redis as StorageRedis;
use cache\Redis;

header(&amp;apos;Access-Control-Allow-Origin:*&amp;apos;);

class Index {

    protected $server;

    public function __construct() {

        // 使用PDO方式存储
        // $storage = new Pdo([&amp;apos;dsn&amp;apos; =&amp;gt; &amp;apos;mysql:dbname=oauth;host=192.168.3.188&amp;apos;, &amp;apos;username&amp;apos; =&amp;gt; &amp;apos;root&amp;apos;, &amp;apos;password&amp;apos; =&amp;gt; &amp;apos;123456&amp;apos;]);

        // 使用Redis方式存储
        $redis = new Redis(config(&amp;apos;redis&amp;apos;));

        $storage = new StorageRedis($redis);

        // Authorized example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz
        $storage-&amp;gt;setClientDetails(&amp;apos;ios&amp;apos;, &amp;apos;123456&amp;apos;, &amp;apos;http://swoole-chat.com&amp;apos;, &amp;apos;authorization_code password&amp;apos;, &amp;apos;read write&amp;apos;);
        $storage-&amp;gt;setClientDetails(&amp;apos;android&amp;apos;, &amp;apos;123456&amp;apos;, &amp;apos;http://swoole-chat.com&amp;apos;, &amp;apos;authorization_code password&amp;apos;, &amp;apos;read write&amp;apos;);
        $storage-&amp;gt;setClientDetails(&amp;apos;phpweb&amp;apos;, &amp;apos;123456&amp;apos;, &amp;apos;http://swoole-chat.com&amp;apos;, &amp;apos;authorization_code password&amp;apos;, &amp;apos;read write&amp;apos;);

        $server = new Server($storage);

        // 授权码
        $server-&amp;gt;addGrantType(new AuthorizationCode($storage));

        $this-&amp;gt;server = $server;
    }

    /**
     * Authorized认证
     * example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz
     * @return bool|string
     */
    public function testAuthorize() {
        $request = Request::createFromGlobals();
        $response = new Response();

        if (!$this-&amp;gt;server-&amp;gt;validateAuthorizeRequest($request, $response)) {
            $response-&amp;gt;send();
            die;
        }

        if (empty($_POST)) {
            return &amp;apos;
                &amp;lt;form method=&amp;quot;post&amp;quot;&amp;gt;
                  &amp;lt;label&amp;gt;是否对testclient用户授权?&amp;lt;/label&amp;gt;&amp;lt;br /&amp;gt;
                  &amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;authorized&amp;quot; value=&amp;quot;yes&amp;quot;&amp;gt;
                  &amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;authorized&amp;quot; value=&amp;quot;no&amp;quot;&amp;gt;
                &amp;lt;/form&amp;gt;
            &amp;apos;;
        }

        $is_authorized = ($_POST[&amp;apos;authorized&amp;apos;] === &amp;apos;yes&amp;apos;);
        $this-&amp;gt;server-&amp;gt;handleAuthorizeRequest($request, $response, $is_authorized, 1);

        if ($is_authorized) {
            $code = substr($response-&amp;gt;getHttpHeader(&amp;apos;Location&amp;apos;), strpos($response-&amp;gt;getHttpHeader(&amp;apos;Location&amp;apos;), &amp;apos;code=&amp;apos;) + 5, 40);
            return $code;
        }

        return &amp;apos;授权失败&amp;apos;;
    }

    /**
     * 获取token
     * @return [type] [description]
     */
    public function testToken() {
        return $this-&amp;gt;server-&amp;gt;handleTokenRequest(Request::createFromGlobals())-&amp;gt;send();
    }

    /**
     * 请求API
     * @return [type] [description]
     */
    public function testApi() {
        $request = Request::createFromGlobals();

        if (!$this-&amp;gt;server-&amp;gt;verifyResourceRequest($request)) {
            return $this-&amp;gt;server-&amp;gt;getResponse()-&amp;gt;send();
        }

        $result = $this-&amp;gt;server-&amp;gt;getAccessTokenData($request);

        return json_encode([&amp;apos;success&amp;apos; =&amp;gt; true, &amp;apos;message&amp;apos; =&amp;gt; &amp;apos;你可以访问API了&amp;apos;, &amp;apos;userId&amp;apos; =&amp;gt; $result[&amp;apos;user_id&amp;apos;]]);
    }
}
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/categories/thinkphp5/"/>
    
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/tags/thinkphp5/"/>
    
      <category term="oauth2" scheme="http://blog.golearns.org/tags/oauth2/"/>
    
  </entry>
  
  <entry>
    <title>nginx thinkphp5配置</title>
    <link href="http://blog.golearns.org/2018/09/17/nginx-thinkphp5%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.golearns.org/2018/09/17/nginx-thinkphp5配置/</id>
    <published>2018-09-17T15:04:22.000Z</published>
    <updated>2018-09-17T15:17:53.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx-thinkphp5-config"><a href="#nginx-thinkphp5-config" class="headerlink" title="nginx thinkphp5 config"></a>nginx thinkphp5 config</h1><h3 id="新建think5-conf"><a href="#新建think5-conf" class="headerlink" title="新建think5.conf"></a>新建think5.conf</h3><pre><code>server {    listen       80;    server_name  think5.com;    index index.html index.php;    root /usr/share/nginx/html/think5/public;    set $basedir &quot;open_basedir=/usr/share/nginx/html/think5/:/tmp/:/proc/&quot;;    #charset koi8-r;    #access_log  /var/log/nginx/host.access.log  main;    location / {    if (!-e $request_filename) {        rewrite ^(.*)$ /index.php?s=/$1 last;        break;    }    }    #error_page  404              /404.html;    # redirect server error pages to the static page /50x.html    #    #error_page   500 502 503 504  /50x.html;    #location = /50x.html {    #    root   /usr/share/nginx/html;    #}    location ~ \.php$ {        try_files $uri =404;        fastcgi_pass 127.0.0.1:9000;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        include fastcgi_params;    }   }</code></pre><a id="more"></a><h3 id="fastcgi-params配置"><a href="#fastcgi-params配置" class="headerlink" title="fastcgi_params配置"></a>fastcgi_params配置</h3><pre><code>fastcgi_param  PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;fastcgi_param  PHP_ADMIN_VALUE $basedir if_not_empty;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx-thinkphp5-config&quot;&gt;&lt;a href=&quot;#nginx-thinkphp5-config&quot; class=&quot;headerlink&quot; title=&quot;nginx thinkphp5 config&quot;&gt;&lt;/a&gt;nginx thinkphp5 config&lt;/h1&gt;&lt;h3 id=&quot;新建think5-conf&quot;&gt;&lt;a href=&quot;#新建think5-conf&quot; class=&quot;headerlink&quot; title=&quot;新建think5.conf&quot;&gt;&lt;/a&gt;新建think5.conf&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;server {
    listen       80;
    server_name  think5.com;
    index index.html index.php;
    root /usr/share/nginx/html/think5/public;

    set $basedir &amp;quot;open_basedir=/usr/share/nginx/html/think5/:/tmp/:/proc/&amp;quot;;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
    if (!-e $request_filename) {
        rewrite ^(.*)$ /index.php?s=/$1 last;
        break;
    }
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }   
}
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/categories/thinkphp5/"/>
    
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/tags/thinkphp5/"/>
    
      <category term="Nginx" scheme="http://blog.golearns.org/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>jks转pem</title>
    <link href="http://blog.golearns.org/2018/09/17/jks%E8%BD%ACpem/"/>
    <id>http://blog.golearns.org/2018/09/17/jks转pem/</id>
    <published>2018-09-17T15:02:45.000Z</published>
    <updated>2018-09-17T15:03:03.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jks转pem"><a href="#jks转pem" class="headerlink" title="jks转pem"></a>jks转pem</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keytool -importkeystore -srckeystore test.jks -destkeystore test.p12 -srcstoretype jks -deststoretype pkcs12</span><br><span class="line"></span><br><span class="line">openssl pkcs12 -in test.p12 -out test.pem</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jks转pem&quot;&gt;&lt;a href=&quot;#jks转pem&quot; class=&quot;headerlink&quot; title=&quot;jks转pem&quot;&gt;&lt;/a&gt;jks转pem&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="jks" scheme="http://blog.golearns.org/categories/jks/"/>
    
    
      <category term="jks" scheme="http://blog.golearns.org/tags/jks/"/>
    
      <category term="pem" scheme="http://blog.golearns.org/tags/pem/"/>
    
  </entry>
  
  <entry>
    <title>janus webrtc网关</title>
    <link href="http://blog.golearns.org/2018/09/17/janus-webrtc%E7%BD%91%E5%85%B3/"/>
    <id>http://blog.golearns.org/2018/09/17/janus-webrtc网关/</id>
    <published>2018-09-17T15:02:07.000Z</published>
    <updated>2018-09-17T15:18:02.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="janus-webrtc-网关服务器"><a href="#janus-webrtc-网关服务器" class="headerlink" title="janus webrtc 网关服务器"></a>janus webrtc 网关服务器</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum install libmicrohttpd-devel jansson-devel libnice-devel \</span><br><span class="line">   openssl-devel libsrtp-devel sofia-sip-devel glib-devel \</span><br><span class="line">   opus-devel libogg-devel libcurl-devel lua-devel \</span><br><span class="line">   pkgconfig gengetopt libtool autoconf automake</span><br><span class="line">   </span><br><span class="line"><span class="meta">#</span>如果出现No package sofia-sip-devel available</span><br><span class="line"><span class="meta">#</span>下载地址</span><br><span class="line">https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/</span><br><span class="line">wget https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/sofia-sip-1.12.11.tar.gz/download</span><br><span class="line"></span><br><span class="line">tar xzvf download</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="安装安装-libsrtp"><a href="#安装安装-libsrtp" class="headerlink" title="安装安装 libsrtp"></a>安装安装 libsrtp</h2><blockquote><p>Janus至少需要version1.5以上的libsrtp，如果已经安装需要先卸载后再安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# yum remove libsrtp</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# wget https://github.com/cisco/libsrtp/archive/v2.2.0.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# tar xfv v2.2.0.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd libsrtp-2.2.0/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libsrtp-2.2.0]# ./configure --prefix=/usr --enable-openssl</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libsrtp-2.2.0]# make shared_library</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libsrtp-2.2.0]# make install</span><br></pre></td></tr></table></figure><h2 id="安装websocket"><a href="#安装websocket" class="headerlink" title="安装websocket"></a>安装websocket</h2><blockquote><p>janus支持websocket是可选的，如果不安装，编译janus时默认不支持websocket链接请求</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# git clone https://github.com/warmcat/libwebsockets.git</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd libwebsockets/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libwebsockets]# mkdir build</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> centos install cmake</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# wget  https://cmake.org/files/v3.3/cmake-3.3.2.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# tar xzvf cmake-3.3.2.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd cmake-3.3.2</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz cmake-3.3.2]# ./bootstrap</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz cmake-3.3.2]# gmake</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz cmake-3.3.2]# make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 切换到libwebsockets/build</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libwebsockets]# cd build/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz build]# cmake -DLWS_MAX_SMP=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" ..</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz build]# make</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz build]# make install</span><br></pre></td></tr></table></figure><h2 id="编译安装janus"><a href="#编译安装janus" class="headerlink" title="编译安装janus"></a>编译安装janus</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# git clone https://github.com/meetecho/janus-gateway.git</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd janus-gateway/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# sh autogen.sh</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# ./configure --prefix=/opt/janus --enable-websockets --enable-docs</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# make</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# make install</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# make configs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 启动janus报错</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# /opt/janus/bin/janus </span><br><span class="line">/opt/janus/bin/janus: error while loading shared libraries: libsrtp2.so.1: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看libsrtp2.so.1所在目录</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus]# whereis libsrtp2.so.1</span><br><span class="line">libsrtp2.so: /usr/lib/libsrtp2.so /usr/lib/libsrtp2.so.1</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /etc/ld.so.conf.d/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 添加whatever.conf文件</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ld.so.conf.d]# vim whatever.conf</span><br><span class="line">/usr/lib</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 更新配置</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# ldconfig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 再次启动janus报以下错误</span><br><span class="line">[ERR] [plugins/janus_lua.c:janus_lua_init:1155] Error loading Lua script /opt/janus/share/janus/lua/echotest.lua: /opt/janus/share/janus/lua/echotest.lua:6: module 'json' not found:</span><br><span class="line">no field package.preload['json']</span><br><span class="line">no file './json.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/json.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/json/init.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/json.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/json/init.lua'</span><br><span class="line">no file '/opt/janus/share/janus/lua/json.lua'</span><br><span class="line">no file './json.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/json.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/loadall.so'</span><br><span class="line">[WARN] The 'janus.plugin.lua' plugin could not be initialized</span><br><span class="line"></span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# yum install -y ncurses-devel</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# yum install lua-json</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重新启动报</span><br><span class="line">[ERR] [plugins/janus_lua.c:janus_lua_init:1155] Error loading Lua script /opt/janus/share/janus/lua/echotest.lua: /opt/janus/share/janus/lua/echotest.lua:12: module 'ansicolors' not found:</span><br><span class="line">no field package.preload['ansicolors']</span><br><span class="line">no file './ansicolors.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/ansicolors.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/ansicolors/init.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/ansicolors.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/ansicolors/init.lua'</span><br><span class="line">no file '/opt/janus/share/janus/lua/ansicolors.lua'</span><br><span class="line">no file './ansicolors.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/ansicolors.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/loadall.so'</span><br><span class="line">[WARN] The 'janus.plugin.lua' plugin could not be initialized</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 新建color.lua文件</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cat color.lua </span><br><span class="line">local colors = require 'ansicolors'</span><br><span class="line">print(colors('%&#123;red&#125;hello'))</span><br><span class="line">print(colors('%&#123;redbg&#125;hello%&#123;reset&#125;'))</span><br><span class="line">print(colors('%&#123;bright red underline&#125;hello'))</span><br><span class="line"></span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# lua color.lua </span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 再次运行</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# /opt/janus/bin/janus</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;janus-webrtc-网关服务器&quot;&gt;&lt;a href=&quot;#janus-webrtc-网关服务器&quot; class=&quot;headerlink&quot; title=&quot;janus webrtc 网关服务器&quot;&gt;&lt;/a&gt;janus webrtc 网关服务器&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install libmicrohttpd-devel jansson-devel libnice-devel \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   openssl-devel libsrtp-devel sofia-sip-devel glib-devel \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   opus-devel libogg-devel libcurl-devel lua-devel \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   pkgconfig gengetopt libtool autoconf automake&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;如果出现No package sofia-sip-devel available&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;下载地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/sofia-sip-1.12.11.tar.gz/download&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xzvf download&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="webrtc" scheme="http://blog.golearns.org/categories/webrtc/"/>
    
    
      <category term="webrt" scheme="http://blog.golearns.org/tags/webrt/"/>
    
      <category term="janus" scheme="http://blog.golearns.org/tags/janus/"/>
    
      <category term="网关" scheme="http://blog.golearns.org/tags/%E7%BD%91%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>install shadowsocks</title>
    <link href="http://blog.golearns.org/2018/09/17/install-shadowsocks/"/>
    <id>http://blog.golearns.org/2018/09/17/install-shadowsocks/</id>
    <published>2018-09-17T15:01:37.000Z</published>
    <updated>2018-09-17T15:01:57.367Z</updated>
    
    <content type="html"><![CDATA[<h1 id="install-shadowsocks"><a href="#install-shadowsocks" class="headerlink" title="install shadowsocks"></a>install shadowsocks</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate -O shadowsocks-libev.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-libev.sh</span><br><span class="line">chmod +x shadowsocks-libev.sh</span><br><span class="line">./shadowsocks-libev.sh 2&gt;&amp;1 | tee shadowsocks-libev.log</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;install-shadowsocks&quot;&gt;&lt;a href=&quot;#install-shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;install shadowsocks&quot;&gt;&lt;/a&gt;install shadowsocks&lt;/h1&gt;&lt;figu
      
    
    </summary>
    
      <category term="shadowsocks" scheme="http://blog.golearns.org/categories/shadowsocks/"/>
    
    
      <category term="shadowsocks" scheme="http://blog.golearns.org/tags/shadowsocks/"/>
    
  </entry>
  
  <entry>
    <title>install consul</title>
    <link href="http://blog.golearns.org/2018/09/17/install-consul/"/>
    <id>http://blog.golearns.org/2018/09/17/install-consul/</id>
    <published>2018-09-17T15:01:03.000Z</published>
    <updated>2018-09-17T15:18:12.326Z</updated>
    
    <content type="html"><![CDATA[<h1 id="install-consul"><a href="#install-consul" class="headerlink" title="install consul"></a>install consul</h1><ul><li>下载</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://releases.hashicorp.com/consul/1.1.0/consul_1.1.0_linux_amd64.zip</span><br><span class="line">unzip consul_1.1.0_linux_amd64.zip</span><br></pre></td></tr></table></figure><ul><li>验证安装</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# consul</span><br><span class="line">Usage: consul [--version] [--help] &lt;command&gt; [&lt;args&gt;]</span><br><span class="line"></span><br><span class="line">Available commands are:</span><br><span class="line">    agent          Runs a Consul agent</span><br><span class="line">    catalog        Interact with the catalog</span><br></pre></td></tr></table></figure><a id="more"></a><ul><li>以开发模式启动consul agent</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# consul agent -dev</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: 'v1.1.0'</span><br><span class="line">           Node ID: 'b93d1692-c656-90ba-cdec-8b17a25f4216'</span><br><span class="line">         Node name: 'common'</span><br><span class="line">        Datacenter: 'dc1' (Segment: '&lt;all&gt;')</span><br><span class="line">            Server: true (Bootstrap: false)</span><br><span class="line">       Client Addr: [127.0.0.1] (HTTP: 8500, HTTPS: -1, DNS: 8600)</span><br><span class="line">      Cluster Addr: 127.0.0.1 (LAN: 8301, WAN: 8302)</span><br><span class="line">           Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</span><br></pre></td></tr></table></figure><ul><li>查看consul集群成员</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# consul members</span><br><span class="line">Node    Address         Status  Type    Build  Protocol  DC   Segment</span><br><span class="line">common  127.0.0.1:8301  alive   server  1.1.0  2         dc1  &lt;all&gt;</span><br></pre></td></tr></table></figure><h3 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h3><ul><li>创建consul配置目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# mkdir /etc/consul.d</span><br></pre></td></tr></table></figure><ul><li>编写一个服务定义配置文件，假设有一个web的服务在端口80上运行</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# echo '&#123;"service": &#123;"name": "web", "tags": ["rails"], "port": 80&#125;&#125;' | tee /etc/consul.d/web.json</span><br><span class="line">&#123;"service": &#123;"name": "web", "tags": ["rails"], "port": 80&#125;</span><br></pre></td></tr></table></figure><ul><li>重启agent，设置配置目录</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# consul agent -dev -config-dir=/etc/consul.d</span><br><span class="line">==&gt; Starting Consul agent...</span><br><span class="line">==&gt; Consul agent running!</span><br><span class="line">           Version: 'v1.1.0'</span><br><span class="line">           Node ID: '2448bf0f-2384-9855-cde3-600129841fec'</span><br><span class="line">         Node name: 'common'</span><br><span class="line">        Datacenter: 'dc1' (Segment: '&lt;all&gt;')</span><br><span class="line">            Server: true (Bootstrap: false)</span><br><span class="line">       Client Addr: [127.0.0.1] (HTTP: 8500, HTTPS: -1, DNS: 8600)</span><br><span class="line">      Cluster Addr: 127.0.0.1 (LAN: 8301, WAN: 8302)</span><br><span class="line">           Encrypt: Gossip: false, TLS-Outgoing: false, TLS-Incoming: false</span><br><span class="line"></span><br><span class="line">==&gt; Log data will now stream in as it occurs:</span><br><span class="line"></span><br><span class="line">    2018/06/12 01:57:13 [DEBUG] agent: Using random ID "2448bf0f-2384-9855-cde3-600129841fec" as node ID</span><br><span class="line">    2018/06/12 01:57:13 [INFO] raft: Initial configuration (index=1): [&#123;Suffrage:Voter ID:2448bf0f-2384-9855-cde3-600129841fec Address:127.0.0.1:8300&#125;]</span><br><span class="line">    2018/06/12 01:57:13 [INFO] serf: EventMemberJoin: common.dc1 127.0.0.1</span><br><span class="line">    2018/06/12 01:57:13 [INFO] serf: EventMemberJoin: common 127.0.0.1</span><br><span class="line">    2018/06/12 01:57:13 [INFO] agent: Started DNS server 127.0.0.1:8600 (udp)</span><br><span class="line">    2018/06/12 01:57:13 [INFO] raft: Node at 127.0.0.1:8300 [Follower] entering Follower state (Leader: "")</span><br><span class="line">    2018/06/12 01:57:13 [INFO] consul: Adding LAN server common (Addr: tcp/127.0.0.1:8300) (DC: dc1)</span><br><span class="line">    2018/06/12 01:57:13 [INFO] consul: Handled member-join event for server "common.dc1" in area "wan"</span><br><span class="line">    2018/06/12 01:57:13 [INFO] agent: Started DNS server 127.0.0.1:8600 (tcp)</span><br><span class="line">    2018/06/12 01:57:13 [INFO] agent: Started HTTP server on 127.0.0.1:8500 (tcp)</span><br><span class="line">    2018/06/12 01:57:13 [INFO] agent: started state syncer</span><br><span class="line">    2018/06/12 01:57:13 [WARN] raft: Heartbeat timeout from "" reached, starting election</span><br><span class="line">    2018/06/12 01:57:13 [INFO] raft: Node at 127.0.0.1:8300 [Candidate] entering Candidate state in term 2</span><br><span class="line">    2018/06/12 01:57:13 [DEBUG] raft: Votes needed: 1</span><br><span class="line">    2018/06/12 01:57:13 [DEBUG] raft: Vote granted from 2448bf0f-2384-9855-cde3-600129841fec in term 2. Tally: 1</span><br><span class="line">    2018/06/12 01:57:13 [INFO] raft: Election won. Tally: 1</span><br><span class="line">    2018/06/12 01:57:13 [INFO] raft: Node at 127.0.0.1:8300 [Leader] entering Leader state</span><br><span class="line">    2018/06/12 01:57:13 [INFO] consul: cluster leadership acquired</span><br><span class="line">    2018/06/12 01:57:13 [DEBUG] consul: Skipping self join check for "common" since the cluster is too small</span><br><span class="line">    2018/06/12 01:57:13 [INFO] consul: member 'common' joined, marking health alive</span><br><span class="line">    2018/06/12 01:57:13 [INFO] consul: New leader elected: common</span><br><span class="line">    2018/06/12 01:57:13 [DEBUG] agent: Skipping remote check "serfHealth" since it is managed automatically</span><br><span class="line">    2018/06/12 01:57:13 [INFO] agent: Synced service "web"</span><br><span class="line">    2018/06/12 01:57:13 [DEBUG] agent: Node info in sync</span><br><span class="line">    2018/06/12 01:57:15 [DEBUG] agent: Skipping remote check "serfHealth" since it is managed automatically</span><br><span class="line">    2018/06/12 01:57:15 [DEBUG] agent: Service "web" in sync</span><br><span class="line">    2018/06/12 01:57:15 [DEBUG] agent: Node info in sync</span><br><span class="line">    2018/06/12 01:57:15 [DEBUG] agent: Service "web" in sync</span><br><span class="line">    2018/06/12 01:57:15 [DEBUG] agent: Node info in sync</span><br></pre></td></tr></table></figure><ul><li>使用HTTP API查询服务</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# curl http://localhost:8500/v1/catalog/service/web</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        "ID": "2448bf0f-2384-9855-cde3-600129841fec",</span><br><span class="line">        "Node": "common",</span><br><span class="line">        "Address": "127.0.0.1",</span><br><span class="line">        "Datacenter": "dc1",</span><br><span class="line">        "TaggedAddresses": &#123;</span><br><span class="line">            "lan": "127.0.0.1",</span><br><span class="line">            "wan": "127.0.0.1"</span><br><span class="line">        &#125;,</span><br><span class="line">        "NodeMeta": &#123;</span><br><span class="line">            "consul-network-segment": ""</span><br><span class="line">        &#125;,</span><br><span class="line">        "ServiceID": "web",</span><br><span class="line">        "ServiceName": "web",</span><br><span class="line">        "ServiceTags": [</span><br><span class="line">            "rails"</span><br><span class="line">        ],</span><br><span class="line">        "ServiceAddress": "",</span><br><span class="line">        "ServiceMeta": &#123;&#125;,</span><br><span class="line">        "ServicePort": 80,</span><br><span class="line">        "ServiceEnableTagOverride": false,</span><br><span class="line">        "CreateIndex": 6,</span><br><span class="line">        "ModifyIndex": 6</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>查找健康状态的实例</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">[root@common ~]# curl 'http://localhost:8500/v1/health/service/web?passing'</span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        "Node": &#123;</span><br><span class="line">            "ID": "2448bf0f-2384-9855-cde3-600129841fec",</span><br><span class="line">            "Node": "common",</span><br><span class="line">            "Address": "127.0.0.1",</span><br><span class="line">            "Datacenter": "dc1",</span><br><span class="line">            "TaggedAddresses": &#123;</span><br><span class="line">                "lan": "127.0.0.1",</span><br><span class="line">                "wan": "127.0.0.1"</span><br><span class="line">            &#125;,</span><br><span class="line">            "Meta": &#123;</span><br><span class="line">                "consul-network-segment": ""</span><br><span class="line">            &#125;,</span><br><span class="line">            "CreateIndex": 5,</span><br><span class="line">            "ModifyIndex": 6</span><br><span class="line">        &#125;,</span><br><span class="line">        "Service": &#123;</span><br><span class="line">            "ID": "web",</span><br><span class="line">            "Service": "web",</span><br><span class="line">            "Tags": [</span><br><span class="line">                "rails"</span><br><span class="line">            ],</span><br><span class="line">            "Address": "",</span><br><span class="line">            "Meta": null,</span><br><span class="line">            "Port": 80,</span><br><span class="line">            "EnableTagOverride": false,</span><br><span class="line">            "CreateIndex": 6,</span><br><span class="line">            "ModifyIndex": 6</span><br><span class="line">        &#125;,</span><br><span class="line">        "Checks": [</span><br><span class="line">            &#123;</span><br><span class="line">                "Node": "common",</span><br><span class="line">                "CheckID": "serfHealth",</span><br><span class="line">                "Name": "Serf Health Status",</span><br><span class="line">                "Status": "passing",</span><br><span class="line">                "Notes": "",</span><br><span class="line">                "Output": "Agent alive and reachable",</span><br><span class="line">                "ServiceID": "",</span><br><span class="line">                "ServiceName": "",</span><br><span class="line">                "ServiceTags": [],</span><br><span class="line">                "Definition": &#123;&#125;,</span><br><span class="line">                "CreateIndex": 5,</span><br><span class="line">                "ModifyIndex": 5</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h3 id="开启远程访问"><a href="#开启远程访问" class="headerlink" title="开启远程访问"></a>开启远程访问</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">consul agent -dev -config-dir=/etc/consul.d -client 0.0.0.0</span><br></pre></td></tr></table></figure><h3 id="访问WEB页面"><a href="#访问WEB页面" class="headerlink" title="访问WEB页面"></a>访问WEB页面</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.3.212:8500/ui</span><br></pre></td></tr></table></figure><h3 id="使用新的UI-WEB页面"><a href="#使用新的UI-WEB页面" class="headerlink" title="使用新的UI WEB页面"></a>使用新的UI WEB页面</h3><ul><li>设置环境变量</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line">export CONSUL_UI_BETA=true</span><br></pre></td></tr></table></figure><ul><li>启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">consul agent -dev -config-dir=/etc/consul.d -client 0.0.0.0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;install-consul&quot;&gt;&lt;a href=&quot;#install-consul&quot; class=&quot;headerlink&quot; title=&quot;install consul&quot;&gt;&lt;/a&gt;install consul&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;下载&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://releases.hashicorp.com/consul/1.1.0/consul_1.1.0_linux_amd64.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unzip consul_1.1.0_linux_amd64.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;验证安装&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[root@common ~]# consul&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Usage: consul [--version] [--help] &amp;lt;command&amp;gt; [&amp;lt;args&amp;gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Available commands are:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    agent          Runs a Consul agent&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    catalog        Interact with the catalog&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="consul" scheme="http://blog.golearns.org/categories/consul/"/>
    
    
      <category term="consul" scheme="http://blog.golearns.org/tags/consul/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装php56</title>
    <link href="http://blog.golearns.org/2018/09/17/centos7%E5%AE%89%E8%A3%85php56/"/>
    <id>http://blog.golearns.org/2018/09/17/centos7安装php56/</id>
    <published>2018-09-17T14:59:47.000Z</published>
    <updated>2018-09-17T15:18:22.268Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7-install-php56"><a href="#centos7-install-php56" class="headerlink" title="centos7 install php56"></a>centos7 install php56</h1><pre><code>yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpmyum install yum-utilsyum install php56</code></pre><h3 id="检查已安装版本的扩展命令"><a href="#检查已安装版本的扩展命令" class="headerlink" title="检查已安装版本的扩展命令"></a>检查已安装版本的扩展命令</h3><pre><code>php56 --versionphp56 --modules</code></pre><a id="more"></a><h3 id="启用php-fpm"><a href="#启用php-fpm" class="headerlink" title="启用php-fpm"></a>启用<code>php-fpm</code></h3><pre><code>vi /etc/yum.repos.d/remi.repo# 找到remi和remi-php56，将enabled=0修改为enabled=1[remi]name=Remi’s RPM repository for Enterprise Linux 7 – $basearch#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/mirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirrorenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi…[remi-php56]name=Remi’s PHP 5.6 RPM repository for Enterprise Linux 7 – $basearch#baseurl=http://rpms.remirepo.net/enterprise/7/php56/$basearch/mirrorlist=http://rpms.remirepo.net/enterprise/7/php56/mirror# WARNING: If you enable this repository, you must also enable “remi”enabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remiyum install php-fpmsystemctl enable php-fpmsystemctl start php-fpm</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;centos7-install-php56&quot;&gt;&lt;a href=&quot;#centos7-install-php56&quot; class=&quot;headerlink&quot; title=&quot;centos7 install php56&quot;&gt;&lt;/a&gt;centos7 install php56&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;yum install http://rpms.remirepo.net/enterprise/remi-release-7.rpm
yum install yum-utils
yum install php56
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;检查已安装版本的扩展命令&quot;&gt;&lt;a href=&quot;#检查已安装版本的扩展命令&quot; class=&quot;headerlink&quot; title=&quot;检查已安装版本的扩展命令&quot;&gt;&lt;/a&gt;检查已安装版本的扩展命令&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;php56 --version
php56 --modules
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
      <category term="PHP" scheme="http://blog.golearns.org/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装Alfresco</title>
    <link href="http://blog.golearns.org/2018/09/17/centos7%E5%AE%89%E8%A3%85Alfresco/"/>
    <id>http://blog.golearns.org/2018/09/17/centos7安装Alfresco/</id>
    <published>2018-09-17T14:59:01.000Z</published>
    <updated>2018-09-17T14:59:34.162Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7-install-Alfresco"><a href="#centos7-install-Alfresco" class="headerlink" title="centos7 install Alfresco"></a>centos7 install Alfresco</h1><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><ul><li><a href="https://www.alfresco.com/alfresco-community-download" target="_blank" rel="noopener">Alfresco</a></li></ul><h3 id="设置可执行权限"><a href="#设置可执行权限" class="headerlink" title="设置可执行权限"></a>设置可执行权限</h3><pre><code>chmod +x alfresco-community-installer-201707-linux-x64.bin./alfresco-community-installer-201707-linux-x64.bin</code></pre><h3 id="配置-etc-hosts"><a href="#配置-etc-hosts" class="headerlink" title="配置/etc/hosts"></a>配置/etc/hosts</h3><pre><code>127.0.0.1              {hostname.output}{ipaddress.output}     {hostname.output}</code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><pre><code>./alfresco.sh start</code></pre><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><pre><code>http://ip:8080/share</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;centos7-install-Alfresco&quot;&gt;&lt;a href=&quot;#centos7-install-Alfresco&quot; class=&quot;headerlink&quot; title=&quot;centos7 install Alfresco&quot;&gt;&lt;/a&gt;centos7 instal
      
    
    </summary>
    
      <category term="Alfresco" scheme="http://blog.golearns.org/categories/Alfresco/"/>
    
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
      <category term="Alfresco" scheme="http://blog.golearns.org/tags/Alfresco/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装桌面</title>
    <link href="http://blog.golearns.org/2018/09/17/centos7%E5%AE%89%E8%A3%85%E6%A1%8C%E9%9D%A2/"/>
    <id>http://blog.golearns.org/2018/09/17/centos7安装桌面/</id>
    <published>2018-09-17T14:58:23.000Z</published>
    <updated>2018-09-17T14:58:48.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7-install-gnome"><a href="#centos7-install-gnome" class="headerlink" title="centos7 install gnome"></a>centos7 install gnome</h1><h3 id="centos7-install"><a href="#centos7-install" class="headerlink" title="centos7 install"></a>centos7 install</h3><pre><code>yum group install &quot;GNOME Desktop&quot; &quot;Graphical Administration Tools&quot;</code></pre><h3 id="rhel7"><a href="#rhel7" class="headerlink" title="rhel7"></a>rhel7</h3><pre><code>yum groupinstall &quot;Server with GUI&quot;</code></pre><h3 id="在系统启动时启用GUI"><a href="#在系统启动时启用GUI" class="headerlink" title="在系统启动时启用GUI"></a>在系统启动时启用GUI</h3><pre><code>ln -sf /lib/systemd/system/runlevel5.target /etc/systemd/system/default.target</code></pre><h3 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h3><pre><code>reboot</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;centos7-install-gnome&quot;&gt;&lt;a href=&quot;#centos7-install-gnome&quot; class=&quot;headerlink&quot; title=&quot;centos7 install gnome&quot;&gt;&lt;/a&gt;centos7 install gnome&lt;/
      
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
  </entry>
  
</feed>
