<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识记录</title>
  <icon>https://www.gravatar.com/avatar/4a4707290e0bd2d91bfe9658e5753e17</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.golearns.org/"/>
  <updated>2018-11-29T02:53:07.540Z</updated>
  <id>http://blog.golearns.org/</id>
  
  <author>
    <name>M2</name>
    <email>763960267@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql-proxy实现读写分离</title>
    <link href="http://blog.golearns.org/2018/11/29/mysql-proxy%E5%AE%9E%E7%8E%B0%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB/"/>
    <id>http://blog.golearns.org/2018/11/29/mysql-proxy实现读写分离/</id>
    <published>2018-11-29T02:52:13.000Z</published>
    <updated>2018-11-29T02:53:07.540Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql-proxy实现读写分离"><a href="#mysql-proxy实现读写分离" class="headerlink" title="mysql-proxy实现读写分离"></a>mysql-proxy实现读写分离</h1><blockquote></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql-proxy实现读写分离&quot;&gt;&lt;a href=&quot;#mysql-proxy实现读写分离&quot; class=&quot;headerlink&quot; title=&quot;mysql-proxy实现读写分离&quot;&gt;&lt;/a&gt;mysql-proxy实现读写分离&lt;/h1&gt;&lt;blockquote&gt;

      
    
    </summary>
    
      <category term="MySQL" scheme="http://blog.golearns.org/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://blog.golearns.org/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>mysql主主复制</title>
    <link href="http://blog.golearns.org/2018/11/28/mysql%E4%B8%BB%E4%B8%BB%E5%A4%8D%E5%88%B6/"/>
    <id>http://blog.golearns.org/2018/11/28/mysql主主复制/</id>
    <published>2018-11-28T15:28:28.000Z</published>
    <updated>2018-11-28T15:47:38.847Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql主主复制"><a href="#mysql主主复制" class="headerlink" title="mysql主主复制"></a>mysql主主复制</h1><blockquote><p>150服务器和170服务器</p></blockquote><h3 id="配置170服务器"><a href="#配置170服务器" class="headerlink" title="配置170服务器"></a>配置170服务器</h3><ul><li><p>修改配置文件</p><pre><code>cat /etc/my.cnf[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockuser=mysql# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0server-id=2master-host=192.168.1.150master-user=slavemaster-password=123456master-connect-retry=60# 也开启binlog日志log-bin=mysqlslave-bin-logbinlog-do-db=shoppingbinlog-ignore-db=mysql[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid</code></pre></li></ul><a id="more"></a><ul><li><p>创建一个授权用户</p><pre><code>mysql&gt; grant replication slave on *.* to &quot;slave170&quot;@&quot;192.168.1.150&quot; identified by &quot;123456&quot;;</code></pre></li><li><p>重启服务</p><pre><code>[root@m2lan170 ~]# service mysqld restart</code></pre></li></ul><h3 id="配置150服务器"><a href="#配置150服务器" class="headerlink" title="配置150服务器"></a>配置150服务器</h3><ul><li><p>修改配置文件</p><pre><code>cat /etc/my.cnf[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockuser=mysql# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0log-bin=mysqllogserver-id=1binlog-do-db=shoppingmaster-host=192.168.1.170master-user=slave170master-password=123456replicate-do-db=shopping[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid</code></pre></li><li><p>重启服务</p><pre><code>[root@m2lan150 ~]# service mysqld restart</code></pre></li><li><p>查看150服务器的从配置状态，<code>Slave_IO_Running</code>和<code>Slave_SQL_Running</code>都为yes表示正常</p><pre><code>mysql&gt; show slave status \G*************************** 1. row ***************************               Slave_IO_State: Waiting for master to send event                  Master_Host: 192.168.1.170                  Master_User: slave170                  Master_Port: 3306                Connect_Retry: 60              Master_Log_File: mysqlslave-bin-log.000001          Read_Master_Log_Pos: 257               Relay_Log_File: mysqld-relay-bin.000003                Relay_Log_Pos: 411        Relay_Master_Log_File: mysqlslave-bin-log.000001             Slave_IO_Running: Yes            Slave_SQL_Running: Yes              Replicate_Do_DB: shopping</code></pre></li><li><p>如果配置错误导致同步失败，可以尝试</p><pre><code>mysql&gt; stop slave;Query OK, 0 rows affected (0.04 sec)mysql&gt; reset slave;Query OK, 0 rows affected (0.03 sec)mysql&gt; start slave;Query OK, 0 rows affected (0.07 sec)</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mysql主主复制&quot;&gt;&lt;a href=&quot;#mysql主主复制&quot; class=&quot;headerlink&quot; title=&quot;mysql主主复制&quot;&gt;&lt;/a&gt;mysql主主复制&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;150服务器和170服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;配置170服务器&quot;&gt;&lt;a href=&quot;#配置170服务器&quot; class=&quot;headerlink&quot; title=&quot;配置170服务器&quot;&gt;&lt;/a&gt;配置170服务器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat /etc/my.cnf
[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
user=mysql
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0

server-id=2
master-host=192.168.1.150
master-user=slave
master-password=123456
master-connect-retry=60

# 也开启binlog日志
log-bin=mysqlslave-bin-log
binlog-do-db=shopping
binlog-ignore-db=mysql

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://blog.golearns.org/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://blog.golearns.org/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>mysql主从复制</title>
    <link href="http://blog.golearns.org/2018/11/28/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6/"/>
    <id>http://blog.golearns.org/2018/11/28/mysql主从复制/</id>
    <published>2018-11-28T14:34:12.000Z</published>
    <updated>2018-11-28T15:41:45.054Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql主从复制"><a href="#mysql主从复制" class="headerlink" title="mysql主从复制"></a>mysql主从复制</h1><blockquote><p>环境主服务器150，从服务器170</p></blockquote><h3 id="配置150服务器"><a href="#配置150服务器" class="headerlink" title="配置150服务器"></a>配置150服务器</h3><ul><li><p>修改mysql配置文件</p><pre><code>[root@m2lan150 ~]# cat /etc/my.cnf[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockuser=mysql# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0# 启用二进制日志，默认在/var/lib/mysql下面，名字随意起log-bin=mysqllog# 本机数据库ID标识server-id=1# 可以被从服务器复制的库，需要同步的数据库名称binlog-do-db=shopping# 不被复制的数据库# binlog-ignore-db=aa[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid</code></pre></li></ul><a id="more"></a><ul><li><p>创建一个授权用户</p><pre><code>mysql&gt; grant replication slave on *.* to &quot;slave&quot;@&quot;192.168.1.170&quot; identified by &quot;123456&quot;;</code></pre></li><li><p>查看主服务器状态</p><pre><code>mysql&gt; show master status;+-----------------+----------+--------------+------------------+| File            | Position | Binlog_Do_DB | Binlog_Ignore_DB |+-----------------+----------+--------------+------------------+| mysqllog.000001 |      535 | shopping     |                  |+-----------------+----------+--------------+------------------+1 row in set (0.00 sec)</code></pre></li><li><p>查看binlog日志</p><pre><code>mysql&gt; show binlog events;</code></pre></li><li><p>备份钱保证两个数据库中的数据保持一致</p><pre><code>[root@m2lan150 ~]# mysqldump -uroot -p -A -E --ignore-table=mysql.events &gt; /opt/all.sql</code></pre></li><li><p>copy文件到170从服务器</p><pre><code>scp /opt/all.sql 192.168.1.170:/root</code></pre></li></ul><h3 id="配置170服务器"><a href="#配置170服务器" class="headerlink" title="配置170服务器"></a>配置170服务器</h3><ul><li><p>安装mysql服务</p><pre><code>[root@m2lan170 ~]# yum install mysql-server -y[root@m2lan170 ~]# service mysqld restart</code></pre></li><li><p>测试能否连接上150服务器的mysql服务 </p><pre><code>[root@m2lan170 ~]# mysql -h 192.168.1.150 -u slave -p</code></pre></li><li><p>导入数据到从服务器mysql中</p><pre><code>[root@m2lan170 ~]# mysql -uroot -p &lt; all.sql</code></pre></li><li><p>修改配置文件</p><pre><code>cat /etc/my.cnf[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockuser=mysql# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0# 从服务器ID号，如果设置多个从服务器，每个从服务器必须有一个唯一的server-id号server-id=2# 主服务器的ip地址master-host=192.168.1.150# 指定在主服务器上可以进行同步的用户名master-user=slave# 密码master-password=123456# 断开重连时间master-connect-retry=60[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid</code></pre></li><li><p>重启服务</p><pre><code>[root@m2lan170 ~]# service mysqld restart</code></pre></li><li><p>查看从服务器状态，<code>Slave_IO_Running</code>和<code>Slave_SQL_Running</code>都为yes表示正常</p><pre><code>mysql&gt; show slave status \G*************************** 1. row ***************************               Slave_IO_State: Waiting for master to send event                  Master_Host: 192.168.1.150                  Master_User: slave                  Master_Port: 3306                Connect_Retry: 60              Master_Log_File: mysqllog.000001          Read_Master_Log_Pos: 674               Relay_Log_File: mysqld-relay-bin.000006                Relay_Log_Pos: 250        Relay_Master_Log_File: mysqllog.000001             Slave_IO_Running: Yes            Slave_SQL_Running: Yes</code></pre></li><li><p>在主服务器中插入数据测试。</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mysql主从复制&quot;&gt;&lt;a href=&quot;#mysql主从复制&quot; class=&quot;headerlink&quot; title=&quot;mysql主从复制&quot;&gt;&lt;/a&gt;mysql主从复制&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;环境主服务器150，从服务器170&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;配置150服务器&quot;&gt;&lt;a href=&quot;#配置150服务器&quot; class=&quot;headerlink&quot; title=&quot;配置150服务器&quot;&gt;&lt;/a&gt;配置150服务器&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改mysql配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@m2lan150 ~]# cat /etc/my.cnf
[mysqld]
datadir=/var/lib/mysql
socket=/var/lib/mysql/mysql.sock
user=mysql
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links=0

# 启用二进制日志，默认在/var/lib/mysql下面，名字随意起
log-bin=mysqllog
# 本机数据库ID标识
server-id=1
# 可以被从服务器复制的库，需要同步的数据库名称
binlog-do-db=shopping
# 不被复制的数据库
# binlog-ignore-db=aa

[mysqld_safe]
log-error=/var/log/mysqld.log
pid-file=/var/run/mysqld/mysqld.pid
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="MySQL" scheme="http://blog.golearns.org/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://blog.golearns.org/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>搭建squid代理服务器</title>
    <link href="http://blog.golearns.org/2018/11/11/%E6%90%AD%E5%BB%BAsquid%E4%BB%A3%E7%90%86%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.golearns.org/2018/11/11/搭建squid代理服务器/</id>
    <published>2018-11-11T08:47:05.000Z</published>
    <updated>2018-11-11T12:58:15.313Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建squid代理服务器"><a href="#搭建squid代理服务器" class="headerlink" title="搭建squid代理服务器"></a>搭建squid代理服务器</h1><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code>[root@m2lan150 ~]# yum install -y squid# 启动[root@m2lan150 ~]# service squid start正在启动 squid：.                                          [确定]</code></pre><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>150服务器，ip地址192.168.1.150，添加两个网卡，配置eth0为桥接，eth1为vmnet4模式，eth1的ip地址192.168.2.1</li><li>170服务器，配置eth0位vmnet4模式，ip地址192.168.2.2</li></ul><h3 id="配置squid正向代理服务器"><a href="#配置squid正向代理服务器" class="headerlink" title="配置squid正向代理服务器"></a>配置squid正向代理服务器</h3><blockquote><p>使内网主机170服务器192.168.2.2能够通过150服务器上的squid代理服务器加速上网</p></blockquote><ul><li><p>修改squid配置文件</p><pre><code># 将http_access deny all修改为http_access allow all</code></pre></li><li><p>重启服务</p><pre><code>service squid restart</code></pre></li><li>在170服务器配置firefox网络代理为192.168.2.1 端口3128</li></ul><a id="more"></a><h3 id="配置透明squid代理提升访问速度"><a href="#配置透明squid代理提升访问速度" class="headerlink" title="配置透明squid代理提升访问速度"></a>配置透明squid代理提升访问速度</h3><blockquote><p>客户端不用在浏览器里指定代理服务器的ip地址和端口号，就可以直接访问公网上的网站服务器</p></blockquote><ul><li><p>修改squid配置文件</p><pre><code># 将http_access deny all修改为http_access allow all# 将http_port 3128修改为http_port 3128 transparent# 打开路由转发功能[root@m2lan150 ~]# vim /etc/sysctl.conf# 将net.ipv4.ip_forward = 0修改为net.ipv4.ip_forward = 1[root@m2lan150 ~]# sysctl -p# 配置iptables# 让内网可以上网iptables -t nat -A POSTROUTING -s 192.168.2.0/24 -j SNAT --to 192.168.1.150# 将内网源地址为192.168.2.0/24的网段tcp协议端口为80的请求转发到3128端口iptables -t nat -A PREROUTING -s 192.168.2.0/24 -i eth1 -p tcp --dport 80 -j REDIRECT --to-port 3128# 测试访问，不用再设置浏览器的网络代理www.baidu.com192.168.1.1192.168.2.1</code></pre></li></ul><h3 id="配置squid反向代理加速内网web服务器响应速度"><a href="#配置squid反向代理加速内网web服务器响应速度" class="headerlink" title="配置squid反向代理加速内网web服务器响应速度"></a>配置squid反向代理加速内网web服务器响应速度</h3><blockquote><p>让宿主机访问192.168.1.150代理服务器。192.168.1.150代理服务器缓存170服务器的192.168.2.2 web服务器中的数据。实现150服务器给170服务器加速80和80两个服务。</p></blockquote><ul><li><p>配置宿主机</p><pre><code># 在hosts中添加192.168.1.150 www.serverA.com192.168.1.150 www.serverB.com</code></pre></li><li><p>配置150服务器，关闭iptables和selinux</p><pre><code># 将http_access deny all修改为http_access allow all# vhost表示支持多虚拟主机代理多台机器http_port 80 vhost# 缓存的机器# 代理192.168.2.2的80端口名字为acache_peer 192.168.2.2 parent 80 0 no-query originserver weight=1 name=a# 代理192.168.2.2的81端口名字为bcache_peer 192.168.2.2 parent 81 0 no-query originserver weight=1 name=b# 当访问www.serverA.com域名的时候，则squid向192.168.2.2服务器的80端口发送请求 cache_peer_domain a www.serverA.com# 当访问www.serverB.com域名的时候，则squid向192.168.2.2服务器的81端口发送请求 cache_peer_domain b www.serverB.com# 访问控制cache_peer_access a allow allcache_peer_access b allow all# 重启service squid restart</code></pre></li><li><p>配置170服务器</p><ul><li><p>配置apache服务</p><pre><code>[root@m2lan170 ~]# vim /etc/httpd/conf/httpd.confListen 80Listen 81NameVirtualHost *:80&lt;VirtualHost *:80&gt;    ServerAdmin webmaster@dummy-host.example.com    DocumentRoot /var/www/html    ServerName www.serverA.com    ErrorLog logs/dummy-host.example.com-error_log    CustomLog logs/dummy-host.example.com-access_log common&lt;/VirtualHost&gt;&lt;VirtualHost *:81&gt;    ServerAdmin webmaster@dummy-host.example.com    DocumentRoot /var/www/html/b    ServerName www.serverB.com    ErrorLog logs/dummy-host.example.com-error_log    CustomLog logs/dummy-host.example.com-access_log common&lt;/VirtualHost&gt;echo &quot;serverA.com&quot; &gt; /var/www/html/index.htmlecho &quot;serverB.com&quot; &gt; /var/www/html/b/index.html</code></pre></li><li><p>重启apache</p><pre><code>service httpd restart</code></pre></li></ul></li><li><p>在宿主机访问</p><pre><code>http://www.serverA.comhttp://www.serverB.com</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搭建squid代理服务器&quot;&gt;&lt;a href=&quot;#搭建squid代理服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建squid代理服务器&quot;&gt;&lt;/a&gt;搭建squid代理服务器&lt;/h1&gt;&lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;[root@m2lan150 ~]# yum install -y squid
# 启动
[root@m2lan150 ~]# service squid start
正在启动 squid：.                                          [确定]
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;150服务器，ip地址192.168.1.150，添加两个网卡，配置eth0为桥接，eth1为vmnet4模式，eth1的ip地址192.168.2.1&lt;/li&gt;
&lt;li&gt;170服务器，配置eth0位vmnet4模式，ip地址192.168.2.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;配置squid正向代理服务器&quot;&gt;&lt;a href=&quot;#配置squid正向代理服务器&quot; class=&quot;headerlink&quot; title=&quot;配置squid正向代理服务器&quot;&gt;&lt;/a&gt;配置squid正向代理服务器&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;使内网主机170服务器192.168.2.2能够通过150服务器上的squid代理服务器加速上网&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;修改squid配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 将http_access deny all修改为
http_access allow all
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;重启服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service squid restart
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;在170服务器配置firefox网络代理为192.168.2.1 端口3128&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="Squid" scheme="http://blog.golearns.org/tags/Squid/"/>
    
  </entry>
  
  <entry>
    <title>配置Selinux增强服务器安全</title>
    <link href="http://blog.golearns.org/2018/11/09/%E9%85%8D%E7%BD%AESelinux%E5%A2%9E%E5%BC%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%89%E5%85%A8/"/>
    <id>http://blog.golearns.org/2018/11/09/配置Selinux增强服务器安全/</id>
    <published>2018-11-09T07:27:22.000Z</published>
    <updated>2018-11-11T08:38:03.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="配置Selinux增强服务器安全"><a href="#配置Selinux增强服务器安全" class="headerlink" title="配置Selinux增强服务器安全"></a>配置Selinux增强服务器安全</h1><blockquote><p>安全性增强的linux</p></blockquote><h3 id="Selinux特点"><a href="#Selinux特点" class="headerlink" title="Selinux特点"></a>Selinux特点</h3><ul><li>MAC 对访问的控制彻底化，对所有文件、目录、端口的访问，都是基于策略设定的。这些策略是由管理员设定的，一般用户是无权修改的</li><li>RBAC 对用户只赋予最小权限。对用户来说，被划分成一些role，即使是root用户，只要不在sysadm_r里，也是不能实行sysadm_t管理操作的</li><li>TE 对进程只赋予最小运行权限，TE概念在Selinux中非常重要。其特点是对文件赋予一种叫type的文件类型标签，对于进程赋予一个叫domain的标签，可以规定某个进程只能执行某类文件</li></ul><h3 id="Selinux的执行模式"><a href="#Selinux的执行模式" class="headerlink" title="Selinux的执行模式"></a>Selinux的执行模式</h3><ul><li>enforcing 强制模式，只要Selinux不允许，就无法执行</li><li>permissive 警告模式，将该事件记录，依然允许执行</li><li>disabled 关闭Selinux</li><li><p>Selinux状态切换</p><ul><li>getenforce 查看Selinux状态</li><li><p>setenforce 修改Selinux状态</p><pre><code># 由enforcing切换为permissivesetenforce 0# 由permissive切换为enforcingsetenforce 1# 由enforcing或permissive切换为Disabled只能修改配置文件重启后才能生效# 由Disabled切换其他两个状态也是需要修改配置文件重启后生效</code></pre></li></ul></li></ul><a id="more"></a><h3 id="Selinux的运行模式"><a href="#Selinux的运行模式" class="headerlink" title="Selinux的运行模式"></a>Selinux的运行模式</h3><ul><li>SELINUXTYPE=targeted: 保护常见的网络服务，是Selinux的默认值</li><li>SELINUXTYPE=MLS: 多级安全保护</li></ul><h3 id="Selinux的概念"><a href="#Selinux的概念" class="headerlink" title="Selinux的概念"></a>Selinux的概念</h3><ul><li>security context: 安全上下文由<ul><li>当启动Selinux的时候，所有文件与对象都有安全上下文。进程的安全上下文是域domain，安全上下文由：用户:角色:类型(user:role:type)构成<ul><li>user: 类似linux系统中的UID，提供身份识别。三种常见的user<ul><li>user_u: 普通用户登录系统后预设。表示普通用户无特权用户</li><li>system_u: 开机过程中系统进程的预设。表示系统管理员用户，通过用户可以确认身份类型，一般搭配角色使用</li><li>unconfined_u: 非限制，没有做定义</li></ul></li><li>role: <ul><li>文件与目录的role，通常是object_r</li><li>程序的role，通常是system_r</li><li>用户的role，类似于系统中的GID，不同的角色具备不同的权限。用户可以具备多个role。但是同一时间只能使用一个role</li></ul></li><li>type:<ul><li>用来将主体与客体划分为不同的组，组每个主体和系统中的客体定义来一个类型。为进程运行提供最低的权限环境</li></ul></li></ul></li><li>系统根据pam子系统中的<code>/lib64/security/pam_selinux.so</code>模块设定登录者运行程序的安全上下文</li><li>rpm包安装会根据rpm包的内记录来生成安全上下文</li><li>如果是手动创建的，会根据policy中规定来设置安全上下文</li><li>如果是cp，会重新生成安全上下文</li><li>如果是mv，安全上下文不变</li></ul></li><li>policy: 策略(控制规则，哪些进程可以访问哪些资源)</li></ul><h3 id="Selinux规则文件路径"><a href="#Selinux规则文件路径" class="headerlink" title="Selinux规则文件路径"></a>Selinux规则文件路径</h3><ul><li><code>/etc/selinux/targeted/contexts/files/file_contexts</code></li></ul><h3 id="Selinux策略"><a href="#Selinux策略" class="headerlink" title="Selinux策略"></a>Selinux策略</h3><blockquote><p>Selinux的设置一般通过两部分完成，一个是安全上下文，另一个是策略，策略值是对安全上下文的补充</p><p>Selinux规范了许多boolean数值清单档案，提供开启或关闭功能存取项目，这些值都存放在<code>/selinux/booleans/</code>目录内的相关文件中，文件的值只有两种：1(启用)，0(关闭)</p></blockquote><ul><li><p>getsebool 命令查看Selinux策略，指定进程可以访问哪些文件</p><pre><code>getsebool -a</code></pre></li></ul><h3 id="Selinux的使用"><a href="#Selinux的使用" class="headerlink" title="Selinux的使用"></a>Selinux的使用</h3><ul><li><p>查看文件的Selinux安全上下文</p><pre><code>[root@m2lan150 ~]# touch a.txt[root@m2lan150 ~]# ls -Z a.txt-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a.txt# ||[root@m2lan150 ~]# ls --context a.txt-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a.txt</code></pre></li><li><p>使用<code>chcon</code>修改文件的安全上下文</p><ul><li>–reference=参考文件    使用指定参考文件的安全环境，而非指定值</li><li>-R, –recursive    递归处理所有的文件及子目录</li><li>-u, –user=用户         设置指定用户的目标安全环境</li><li>-r, –role=角色         设置指定角色的目标安全环境</li><li><p>-t, –type=类型         设置指定类型的目标安全环境</p><pre><code>[root@m2lan150 ~]# ls -Z a.txt-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a.txt[root@m2lan150 ~]# ls -Z /etc/hosts-rw-r--r--. root root system_u:object_r:net_conf_t:s0  /etc/hosts[root@m2lan150 ~]# chcon -t net_conf_t a.txt[root@m2lan150 ~]# ls -Z a.txt-rw-r--r--. root root unconfined_u:object_r:net_conf_t:s0 a.txt</code></pre></li></ul></li><li><p>查看apache文件目录下的文件类型</p><pre><code># 文件类型为httpd_sys_content_t，也就是说apache的特有文件类型就是httpd_sys_content_t，所有文件都必须是此类型才能被访问，否则会出现Forbidden[root@m2lan150 ~]# ll -Z /var/www/html/index.html-rw-r--r--. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/html/index.html[root@m2lan150 ~]# mv a.html /var/www/html/# 当访问a.html的时候就会出现Forbidden[root@m2lan150 ~]# ll -Z /var/www/html/a.html-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 /var/www/html/a.html# 查看apache文件目录的类型[root@m2lan150 ~]# ll -Zd /var/www/html/drwxr-xr-x. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/html/# 使用--reference参考apche文件目录的类型修改文件类型[root@m2lan150 ~]# chcon --reference=/var/www/html /var/www/html/a.html# 现在可以正常访问了[root@m2lan150 ~]# ll -Z !$ll -Z /var/www/html/a.html-rw-r--r--. root root system_u:object_r:httpd_sys_content_t:s0 /var/www/html/a.html</code></pre></li><li><p>使用<code>restorecon</code>恢复文件规则</p><pre><code>[root@m2lan150 ~]# touch a.txt[root@m2lan150 ~]# ll -Z a.txt-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 a.txt[root@m2lan150 ~]# ll -Z /etc/hosts-rw-r--r--. root root unconfined_u:object_r:net_conf_t:s0 /etc/hosts[root@m2lan150 ~]# chcon --reference=/root/a.txt /etc/hosts[root@m2lan150 ~]# ll -Z /etc/hosts-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 /etc/hosts[root@m2lan150 ~]# restorecon -v /etc/hostsrestorecon reset /etc/hosts context unconfined_u:object_r:admin_home_t:s0-&gt;unconfined_u:object_r:net_conf_t:s0[root@m2lan150 ~]# ll -Z /etc/hosts-rw-r--r--. root root unconfined_u:object_r:net_conf_t:s0 /etc/hosts# 也可以批量更改[root@m2lan150 ~]# echo &quot;bbbb&quot; &gt; b.html[root@m2lan150 ~]# mv b.html /var/www/html/[root@m2lan150 ~]# ll -Z /var/www/html/b.html-rw-r--r--. root root unconfined_u:object_r:admin_home_t:s0 /var/www/html/b.html[root@m2lan150 ~]# restorecon -rv /var/www/html/restorecon reset /var/www/html/b.html context unconfined_u:object_r:admin_home_t:s0-&gt;unconfined_u:object_r:httpd_sys_content_t:s0[root@m2lan150 ~]# ll -Z /var/www/html/b.html-rw-r--r--. root root unconfined_u:object_r:httpd_sys_content_t:s0 /var/www/html/b.html</code></pre></li><li><p>Selinux策略使用</p><blockquote><p>设定Selinux bool数值清单列表与内容</p><p>使用：<code>setsebool [ -PV ] boolean value | bool1=val1 bool2=val2...</code></p><p><code>-P</code>是永久性设置，否则重启后无效</p><ul><li>使用系统用户登录ftp后，会自动切换自己的家目录。</li></ul></blockquote><pre><code># 安装ftp[root@m2lan150 ~]# yum install -y vsftpd[root@m2lan150 ~]# service vsftpd restart# 安装ftp客户端[root@m2lan150 ~]# rpm -ivh /mnt/Packages/lftp-4.0.9-1.el6.x86_64.rpm[root@m2lan150 ~]# useradd aftp[root@m2lan150 ~]# echo 123456 | passwd --stdin aftp# 开启selinux后默认是不允许的[root@m2lan150 ~]# lftp aftp@192.168.1.150口令:lftp aftp@192.168.1.150:~&gt; lsls: 登录失败: 500 OOPS: cannot change directory:/home/aftplftp aftp@192.168.1.150:~&gt;# 默认是关闭的[root@m2lan150 ~]# getsebool -a | grep ftp_homeftp_home_dir --&gt; off# 开启[root@m2lan150 ~]# setsebool -P ftp_home_dir=on[root@m2lan150 ~]# getsebool -a | grep ftp_home_dirftp_home_dir --&gt; on[root@m2lan150 ~]# lftp aftp@192.168.1.150口令:lftp aftp@192.168.1.150:~&gt; lslftp aftp@192.168.1.150:~&gt; !lsanaconda-ks.cfg  document.txt     fail2ban-0.8.14.tar.gz  ks.cfga.txt         date.txtlftp aftp@192.168.1.150:~&gt; put a.txtlftp aftp@192.168.1.150:~&gt; ls-rw-r--r--    1 507      507             0 Nov 09 09:55 a.txt</code></pre><ul><li><p>设置允许ftp服务器匿名用户登录后，可以创建文件</p><pre><code># 默认只允许查看和下载[root@m2lan150 ~]# lftp 192.168.1.150lftp 192.168.1.150:~&gt; lsdrwxr-xr-x    3 14       0            4096 May 29  2017 datas-rw-r--r--    1 0        0            1282 Oct 30 16:13 ks.cfgdrwxr-xr-x    2 0        0            4096 Feb 12  2013 publftp 192.168.1.150:/&gt; !lsanaconda-ks.cfg  document.txt     fail2ban-0.8.14.tar.gz  ks.cfga.txt         date.txtlftp 192.168.1.150:/&gt; put date.txtput: Access failed: 550 Permission denied. (date.txt)# 修改ftp配置文件[root@m2lan150 ~]# vim /etc/vsftpd/vsftpd.confanonymous_enable=YESanon_upload_enable=YESanon_mkdir_write_enable=YES[root@m2lan150 ~]# service vsftpd restart# 修改目录权限[root@m2lan150 ~]# chmod -R 777 /var/ftp/pub[root@m2lan150 ~]# getsebool -a | grep allow_ftpd_anon_writeallow_ftpd_anon_write --&gt; off# 测试[root@m2lan150 ~]# lftp 192.168.1.150lftp 192.168.1.150:~&gt; cd pub/lftp 192.168.1.150:/pub&gt; put a.txtput: Access failed: 553 Could not create file. (a.txt)[root@m2lan150 ~]# setsebool -P allow_ftpd_anon_write=on[root@m2lan150 ~]# ll -Zd /var/ftp/pub/drwxrwxrwx. root root system_u:object_r:public_content_t:s0 /var/ftp/pub/[root@m2lan150 ~]# chcon -t public_content_rw_t /var/ftp/pub/# 测试[root@m2lan150 ~]# lftp 192.168.1.150lftp 192.168.1.150:~&gt; cd pub/lftp 192.168.1.150:/pub&gt; ls-rw-------    1 14       50              5 Nov 11 08:12 date.txt-rw-------    1 14       50             40 Nov 11 08:14 document.txt-rwxrwxrwx    1 0        0            1801 May 29  2017 passwdlftp 192.168.1.150:/pub&gt; put a.txtlftp 192.168.1.150:/pub&gt; ls-rw-------    1 14       50              0 Nov 11 08:16 a.txt-rw-------    1 14       50              5 Nov 11 08:12 date.txt-rw-------    1 14       50             40 Nov 11 08:14 document.txt-rwxrwxrwx    1 0        0            1801 May 29  2017 passwdlftp 192.168.1.150:/pub&gt; exit</code></pre></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;配置Selinux增强服务器安全&quot;&gt;&lt;a href=&quot;#配置Selinux增强服务器安全&quot; class=&quot;headerlink&quot; title=&quot;配置Selinux增强服务器安全&quot;&gt;&lt;/a&gt;配置Selinux增强服务器安全&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;安全性增强的linux&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Selinux特点&quot;&gt;&lt;a href=&quot;#Selinux特点&quot; class=&quot;headerlink&quot; title=&quot;Selinux特点&quot;&gt;&lt;/a&gt;Selinux特点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;MAC 对访问的控制彻底化，对所有文件、目录、端口的访问，都是基于策略设定的。这些策略是由管理员设定的，一般用户是无权修改的&lt;/li&gt;
&lt;li&gt;RBAC 对用户只赋予最小权限。对用户来说，被划分成一些role，即使是root用户，只要不在sysadm_r里，也是不能实行sysadm_t管理操作的&lt;/li&gt;
&lt;li&gt;TE 对进程只赋予最小运行权限，TE概念在Selinux中非常重要。其特点是对文件赋予一种叫type的文件类型标签，对于进程赋予一个叫domain的标签，可以规定某个进程只能执行某类文件&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Selinux的执行模式&quot;&gt;&lt;a href=&quot;#Selinux的执行模式&quot; class=&quot;headerlink&quot; title=&quot;Selinux的执行模式&quot;&gt;&lt;/a&gt;Selinux的执行模式&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;enforcing 强制模式，只要Selinux不允许，就无法执行&lt;/li&gt;
&lt;li&gt;permissive 警告模式，将该事件记录，依然允许执行&lt;/li&gt;
&lt;li&gt;disabled 关闭Selinux&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Selinux状态切换&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;getenforce 查看Selinux状态&lt;/li&gt;
&lt;li&gt;&lt;p&gt;setenforce 修改Selinux状态&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 由enforcing切换为permissive
setenforce 0
# 由permissive切换为enforcing
setenforce 1
# 由enforcing或permissive切换为Disabled只能修改配置文件重启后才能生效
# 由Disabled切换其他两个状态也是需要修改配置文件重启后生效
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="Selinux" scheme="http://blog.golearns.org/tags/Selinux/"/>
    
  </entry>
  
  <entry>
    <title>iptables防火墙</title>
    <link href="http://blog.golearns.org/2018/11/07/iptables%E9%98%B2%E7%81%AB%E5%A2%99/"/>
    <id>http://blog.golearns.org/2018/11/07/iptables防火墙/</id>
    <published>2018-11-07T02:27:43.000Z</published>
    <updated>2018-11-09T07:28:47.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="iptables防火墙"><a href="#iptables防火墙" class="headerlink" title="iptables防火墙"></a>iptables防火墙</h1><h3 id="iptables-基本介绍"><a href="#iptables-基本介绍" class="headerlink" title="iptables 基本介绍"></a>iptables 基本介绍</h3><ul><li>iptables 内置了<code>raw</code>、<code>filter</code>、<code>nat</code>和<code>mangle</code>四张表。所有规则配置后立即生效，不需要重新启动服务。<ul><li><code>raw</code>: 优先级最高，一般情况下用不到</li><li><code>filter</code>: 负责过滤数据包，包括的规则链: <code>INPUT</code>、<code>OUTPUT</code>和<code>FORWARD</code></li><li><code>nat</code>: 涉及到网络地址转换，包括的规则链: <code>PREROUTING</code>、<code>POSTROUTING</code>和<code>OUTPUT</code></li><li><code>mangle</code>: 主要应用在修改数据包内容上，用来做流量整形的，给数据包打个标识，默认的规则链: <code>INPUT</code>、<code>OUTPUT</code>、<code>FORWARD</code>、<code>POSTROUTING</code>和<code>PREROUTING</code></li></ul></li><li>五个链<ul><li><code>INPUT</code>: 匹配目标IP是本机的数据包</li><li><code>OUTPUT</code>: 向外流出的数据包</li><li><code>FORWARD</code>: 匹配流经本机的数据包</li><li><code>PREROUTING</code>: 用来修改目的地址来做<code>DNAT</code>。如: 把内网的80端口映射到路由器外网端口上</li><li><code>POSTROUTING</code>: 用来修改源地址来做<code>SNAT</code>。如: 内网通过路由器NAT转换功能实现通过一个公网IP地址上网</li></ul></li></ul><a id="more"></a><h3 id="iptables的使用方法"><a href="#iptables的使用方法" class="headerlink" title="iptables的使用方法"></a>iptables的使用方法</h3><ul><li>iptables 命令语法格式</li><li>注意<ul><li>不指定表名时，默认表示filter表</li><li>不指定链名时，默认表示该表内所有链</li><li>除非设置规则链的缺省策略，否则需要指定匹配条件</li></ul></li><li>iptables [-t 要操作的表] &lt;操作命令&gt; [要操作的链] [规则号码] [匹配条件] [-j 匹配到以后的动作]</li></ul><h3 id="操作命令-A、-I、-D、-P、-F、-L"><a href="#操作命令-A、-I、-D、-P、-F、-L" class="headerlink" title="操作命令(-A、-I、-D、-P、-F、-L)"></a>操作命令(-A、-I、-D、-P、-F、-L)</h3><ul><li><p>-A&lt;链名&gt; APPEND，追加一条规则(放到最后)</p><pre><code># 拒绝所有人访问服务器iptables -t filter -A INPUT -j DROP</code></pre></li><li><p>-I&lt;链名&gt; [规则num]: 增加一条规则，原来在该位置上的规则向后移动</p><pre><code># 在filter表INPUT链上的第一个位置增加一条规则iptables -I INPUT 1 -j ACCEPT# 在filter表INPUT链上的第二个位置增加一条规则iptables -I INPUT 2 -j ACCEPT</code></pre></li><li><p>-D: 删除一条规则</p><ul><li>若规则列表中有多条相同的规则时，按内容匹配只删除序号最小的一条</li><li>按号码匹配删除时，确保规则号码&lt;=已有规则数，否则报错</li><li><p>按内容匹配删除时，确保规则存在，否则报错</p><pre><code># 删除filter表INPUT链中的第一条规则iptables -D INPUT 1</code></pre></li></ul></li><li><p>-P &lt;链名&gt;&lt;动作&gt;: POLICY 设置某个链的默认规则，默认规则是ACCEPT</p><pre><code>[root@m2lan150 ~]# iptables -LChain INPUT (policy ACCEPT)target     prot opt source               destination# 修改默认规则[root@m2lan150 ~]# iptables -P INPUT DROP[root@m2lan150 ~]# iptables -LChain INPUT (policy DROP)target     prot opt source               destination</code></pre></li><li><p>-F &lt;链名&gt;，flush 清空规则</p><pre><code># 清空filter表中所有链上的规则iptables -F# 清空filter表中INPUT链上的规则iptables -F INPUT# 清空nat表中所有的规则iptables -t nat -F</code></pre></li><li><p>-L &lt;链名&gt;，list 列出规则</p><ul><li>v: 显示详细信息，包括每条规则的匹配包数量和匹配字节数</li><li>x: 在v的基础上，禁止自动单位转换(K, M)</li><li><p>n: 只显示IP地址和端口号码，不显示域名和服务名称</p><pre><code># 如果组合写的话vnx必须写在L前面iptables -vnxL# ||iptables -L -n # 列出nat表中所有链的规则iptables -t nat -L </code></pre></li></ul></li></ul><h3 id="匹配条件"><a href="#匹配条件" class="headerlink" title="匹配条件"></a>匹配条件</h3><ul><li>流入、流出接口(-i、-o)</li><li><p>按网络接口匹配</p><ul><li><p>-i &lt;匹配数据进入的网络接口&gt; <em>此参数主要应用于nat表，例如目标地址转换</em></p><pre><code># 匹配是否从网络接口eth0进来-i eth0</code></pre></li><li><p>-o &lt;匹配数据流出的网络接口&gt;</p><pre><code>-o eth0</code></pre></li></ul></li><li>来源、目的地址(-s、-d)</li><li><p>按来源目的匹配</p><ul><li><p>-s &lt;匹配来源地址&gt;，可以是IP、NET、DOMAIN，也可为空(任何地址)</p><pre><code># 匹配来自192.168.0.1的数据包-s 192.168.1.0 # 匹配来自192.168.1.0/24的网络数据包-s 192.168.1.0/24# 匹配来自192.168.0.0/16的网络数据包-s 192.168.0.0/16</code></pre></li><li><p>-d &lt;匹配目的地址&gt;，可以是IP、NET、DOMAIN，也可为空(任何地址)</p><pre><code># 匹配去往14.215.177.39的数据包-d 14.215.177.39# 匹配去往14.215.177.39/16的网路数据包-d 14.215.177.39/16# 匹配去往域名www.baidu.com的数据包-d www.baidu.com</code></pre></li></ul></li><li>协议类型(-p)</li><li><p>按协议类型匹配</p><ul><li><p>-p &lt;匹配协议类型&gt;，可以是TCP、UDP、ICMP等，也可为空</p><pre><code>-p tcp-p udp# -p icmp --icmp-type 类型(ping: type 8 pong: type 0)# 别人ping我主机的请求被丢弃iptables -A INPUT -p icmp --icmp-type 8 -j DROP</code></pre></li></ul></li><li>来源、目的端口(–sport、–dport)，<em>–sport和–dport必须配合-p参数使用</em></li><li><p>按来源目的端口匹配</p><ul><li><p>–sport &lt;匹配源端口&gt;，可以是单个端口，可以是端口范围</p><pre><code># 匹配源端口是1000的数据包--sport 1000 # 匹配源端口是1000-3000的数据包(含1000、3000)--sport 1000:3000# 匹配源端口是3000以下的数据包(含3000)--sport :3000# 匹配源端口是1000以上的数据包(含1000)--sport 1000:</code></pre></li><li><p>–dport &lt;匹配目的端口&gt;，可以是单个端口，可以是端口范围</p><pre><code># 匹配目的端口是80的数据包--dport 80# 匹配目的端口是6000-8000的数据包(含6000、8000)--dport 6000:8000# 匹配目的端口是8000以下的数据包(含8000)--dport :8000# 匹配目的端口是6000以上的数据包(含6000)--dport 6000:</code></pre></li></ul></li></ul><h3 id="动作-j"><a href="#动作-j" class="headerlink" title="动作(-j)"></a>动作(<code>-j</code>)</h3><ul><li>ACCEPT(同意，允许数据包通过本链而不拦截)</li><li>DROP(丢弃，直接丢弃数据，没有任何回应)</li><li>REJECT(拒绝，会返回一个拒绝的数据包)</li><li><p>SNAT(源地址转换)(nat表的POSTROUTING链)</p><ul><li>-j SNAT –to IP[-IP]<code>[:端口-端口]</code></li><li>SNAT支持转换为单IP，也支持转换到IP地址池(一组连续的IP地址)</li><li><p>将内网192.168.0.0/24的源地址修改为公网IP地址1.1.1.1</p><pre><code>iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -j SNAT --to 1.1.1.1</code></pre></li></ul></li><li><p>DNAT(目的地址转换)(nat表的PREROUTING链)</p><ul><li>-j DNAT –to IP[-IP]<code>[:端口-端口]</code></li><li>DNAT支持转换为单IP，也支持转换到IP地址池(一组连续的IP地址)</li><li><p>把从eth0进来的要访问TCP/80的数据包目的地址修改为192.168.0.1</p><pre><code>iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to 192.168.0.1</code></pre></li></ul></li><li><p>MASQUERADE(动态源地址转换，动态IP下使用。伪装一个公网IP地址)</p><ul><li><p>将源地址是192.168.0.0/24的数据包进行地址伪装，转换为eth0上的IP地址。eth0为路由器外网出口IP地址</p><pre><code>iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth0 -j MASQUERADE</code></pre></li></ul></li></ul><h3 id="附加模块"><a href="#附加模块" class="headerlink" title="附加模块"></a>附加模块</h3><ul><li><p>按包状态匹配(state)</p><ul><li><code>-m state --state 状态</code></li><li>状态：NEW、RELATED、ESTABLISHED、INVALID</li><li>NEW: 刚建立状态</li><li>RELATED: 衍生态</li><li>ESTABLISHED: 已经建立连接</li><li>INVALID： 不能被识别属于哪个链接或没有任何状态</li><li><p>例:</p><pre><code>iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT</code></pre></li></ul></li><li><p>按来源MAC匹配(mac)</p><ul><li><code>-m mac --mac-source MAC</code></li><li>匹配某个MAC地址</li><li><p>例:</p><pre><code># 阻断来自某MAC地址的数据包通过本机# 注意: 报文经过路由后，数据包中原有的mac信息会被替换，所以在路由后的iptables中使用mac模块无效iptables -A FORWARD -m mac --mac-source 00:50:56:20:2D:A1 -j DROP</code></pre></li></ul></li><li><p>按包速率匹配(limit)</p><ul><li><code>-m limit --limit 匹配速率 [--burst 缓冲数量]</code></li><li><p>例:</p><pre><code># 一秒中转发50个数据包到192.168.0.1iptables -A FORWARD -d 192.168.0.1 -m limit --limit 50/s -j ACCEPT# 50个数据包转发完后阻断iptables -A FORWARD -d 192.168.0.1 -j DROP</code></pre></li></ul></li><li><p>多端口匹配(multiport)</p><ul><li><code>-m multiport &lt;--sports|--dports|--ports&gt; 端口1[,端口2,....端口N]</code></li><li>一次性匹配多个端口，可以区分源端口，目的端口或不指定端口</li><li>注意: <em>必须与-p参数一起使用</em></li><li><p>例:</p><pre><code># 允许所有客户端访问服务器的21，22，25，80端口上的服务iptables -A INPUT -p tcp -m multiport --dports 21,22,25,80 -j ACCEPT</code></pre></li></ul></li></ul><h3 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h3><h4 id="使用iptables保护WEB服务器"><a href="#使用iptables保护WEB服务器" class="headerlink" title="使用iptables保护WEB服务器"></a>使用iptables保护WEB服务器</h4><pre><code># 放行环回口所有数据iptables -A INPUT -i lo -j ACCEPT# 放行22和80端口iptables -A INPUT -p tcp -m multiport --dports 22,80 -j ACCEPT# ||iptables -A INPUT -p tcp --dport 22 -j ACCEPTiptables -A INPUT -p tcp --dport 80 -j ACCEPT# 允许已经建立TCP连接的包以及该连接相关的包通过。状态防火墙能识别TCP或者UDP会话。非状态防火墙只能根据端口识别，不能识别会话iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT# 修改默认规则iptables -P INPUT DROP</code></pre><h4 id="搭建路由器使内网机器能上网"><a href="#搭建路由器使内网机器能上网" class="headerlink" title="搭建路由器使内网机器能上网"></a><a name="dajian">搭建路由器使内网机器能上网</a></h4><ul><li>使170服务器可以通过150服务器上网</li><li><p>配置150服务器</p><ul><li><p>添加两个网卡，配置eth0为桥接，eth1为vmnet4模式</p><pre><code>[root@m2lan150 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth1# Please read /usr/share/doc/initscripts-*/sysconfig.txt# for the documentation of these parameters.DEVICE=eth1BOOTPROTO=noneNETMASK=255.255.255.0TYPE=EthernetHWADDR=00:0c:29:25:5f:abIPADDR=192.168.2.1</code></pre></li><li><p>重启网络</p><pre><code>service network restart</code></pre></li><li><p>启动内核路由转发功能</p><pre><code>vim /etc/sysctl.conf# 修改net.ipv4.ip_forward = 0为net.ipv4.ip_forward = 1sysctl -p</code></pre></li><li><p>配置SNAT路由转发</p><pre><code># 添加nat表中路由后把192.168.2.0/24的所有请求转发到192.168.1.150公网IPiptables -t nat -A POSTROUTING -s 192.168.2.0/24 -j SNAT --to 192.168.1.150</code></pre></li></ul></li><li><p>配置170服务器</p><ul><li><p>配置网卡eth0为vmnet4模式，并修改ip地址为192.168.2.2</p><pre><code>[root@m2lan170 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0DEVICE=eth0TYPE=EthernetONBOOT=yesNM_CONTROLLED=yesBOOTPROTO=nonePREFIX=24DEFROUTE=yesIPV4_FAILURE_FATAL=yesIPV6INIT=noNAME=&quot;System eth0&quot;HWADDR=00:50:56:2a:92:c8USERCTL=noIPADDR=192.168.2.2NETMASK=255.255.255.0GATEWAY=192.168.2.1 # 配置网关为2.1DNS1=192.168.1.1</code></pre></li><li><p>重启网络</p><pre><code>service network restart</code></pre></li></ul></li></ul><h4 id="拒绝访问服务器本身和拒绝通过服务器访问别的机器"><a href="#拒绝访问服务器本身和拒绝通过服务器访问别的机器" class="headerlink" title="拒绝访问服务器本身和拒绝通过服务器访问别的机器"></a>拒绝访问服务器本身和拒绝通过服务器访问别的机器</h4><ul><li>基于<a href="#dajian"><strong>搭建路由器使内网机器能上网</strong></a>环境</li><li><p>禁止170服务器通过150服务器访问192.168.2.1，即不允许访问服务器本身</p><pre><code>iptables -A INPUT -s 192.168.2.2 -j DROP</code></pre></li><li><p>禁止170服务器通过150服务器上网</p><pre><code>iptables -A FORWARD -s 192.168.2.2 -j DROP</code></pre></li></ul><h4 id="使用DNAT功能，把内网web服务器端口映射到路由器外网"><a href="#使用DNAT功能，把内网web服务器端口映射到路由器外网" class="headerlink" title="使用DNAT功能，把内网web服务器端口映射到路由器外网"></a>使用DNAT功能，把内网web服务器端口映射到路由器外网</h4><ul><li>基于<a href="#dajian"><strong>搭建路由器使内网机器能上网</strong></a>环境</li><li><p>访问<code>192.168.1.150</code>的80端口转发到170服务器的<code>192.168.2.2:80</code></p><pre><code>iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to 192.168.2.2:80# ||iptables -t nat -A PREROUTING -d 192.168.1.150 -p tcp --dport 80 -j DNAT --to 192.168.2.2:80</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;iptables防火墙&quot;&gt;&lt;a href=&quot;#iptables防火墙&quot; class=&quot;headerlink&quot; title=&quot;iptables防火墙&quot;&gt;&lt;/a&gt;iptables防火墙&lt;/h1&gt;&lt;h3 id=&quot;iptables-基本介绍&quot;&gt;&lt;a href=&quot;#iptables-基本介绍&quot; class=&quot;headerlink&quot; title=&quot;iptables 基本介绍&quot;&gt;&lt;/a&gt;iptables 基本介绍&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;iptables 内置了&lt;code&gt;raw&lt;/code&gt;、&lt;code&gt;filter&lt;/code&gt;、&lt;code&gt;nat&lt;/code&gt;和&lt;code&gt;mangle&lt;/code&gt;四张表。所有规则配置后立即生效，不需要重新启动服务。&lt;ul&gt;
&lt;li&gt;&lt;code&gt;raw&lt;/code&gt;: 优先级最高，一般情况下用不到&lt;/li&gt;
&lt;li&gt;&lt;code&gt;filter&lt;/code&gt;: 负责过滤数据包，包括的规则链: &lt;code&gt;INPUT&lt;/code&gt;、&lt;code&gt;OUTPUT&lt;/code&gt;和&lt;code&gt;FORWARD&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nat&lt;/code&gt;: 涉及到网络地址转换，包括的规则链: &lt;code&gt;PREROUTING&lt;/code&gt;、&lt;code&gt;POSTROUTING&lt;/code&gt;和&lt;code&gt;OUTPUT&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mangle&lt;/code&gt;: 主要应用在修改数据包内容上，用来做流量整形的，给数据包打个标识，默认的规则链: &lt;code&gt;INPUT&lt;/code&gt;、&lt;code&gt;OUTPUT&lt;/code&gt;、&lt;code&gt;FORWARD&lt;/code&gt;、&lt;code&gt;POSTROUTING&lt;/code&gt;和&lt;code&gt;PREROUTING&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;五个链&lt;ul&gt;
&lt;li&gt;&lt;code&gt;INPUT&lt;/code&gt;: 匹配目标IP是本机的数据包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;OUTPUT&lt;/code&gt;: 向外流出的数据包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FORWARD&lt;/code&gt;: 匹配流经本机的数据包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PREROUTING&lt;/code&gt;: 用来修改目的地址来做&lt;code&gt;DNAT&lt;/code&gt;。如: 把内网的80端口映射到路由器外网端口上&lt;/li&gt;
&lt;li&gt;&lt;code&gt;POSTROUTING&lt;/code&gt;: 用来修改源地址来做&lt;code&gt;SNAT&lt;/code&gt;。如: 内网通过路由器NAT转换功能实现通过一个公网IP地址上网&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="iptables" scheme="http://blog.golearns.org/tags/iptables/"/>
    
  </entry>
  
  <entry>
    <title>搭建Postfix邮件服务器</title>
    <link href="http://blog.golearns.org/2018/11/05/%E6%90%AD%E5%BB%BAPostfix%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.golearns.org/2018/11/05/搭建Postfix邮件服务器/</id>
    <published>2018-11-05T14:15:11.000Z</published>
    <updated>2018-11-09T04:10:46.158Z</updated>
    
    <content type="html"><![CDATA[<h1 id="搭建Postfix邮件服务器"><a href="#搭建Postfix邮件服务器" class="headerlink" title="搭建Postfix邮件服务器"></a>搭建Postfix邮件服务器</h1><ul><li><p>安装邮件服务器发送端</p><pre><code>yum install -y postfix# 在服务端用于测试接收邮件yum install -y dovecot</code></pre></li><li><p>启动</p><pre><code>systemctl restart postfix</code></pre></li><li><p>修改postfix配置文件</p><pre><code>[root@nagios2 ~]# cat /etc/hosts127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4::1         localhost localhost.localdomain localhost6 localhost6.localdomain6192.168.1.241 nagios2.comvim /etc/postfix/main.cfmydomain = nagios2.commynetworks = 192.168.1.0/24,127.0.0.0/8# 重启systemctl restart postfix</code></pre></li></ul><a id="more"></a><ul><li><p>测试邮件发送(在对应邮箱中添加域的白名单)</p><pre><code>yum install -y mailxmail -s &quot;Postfix test&quot; xxxxx@qq.com &lt; /etc/hosts</code></pre></li><li><p>配置dovecot服务器，实现发邮件和收邮件</p><pre><code>vim /etc/dovecot/dovecot.conf# 打开协议protocols = imap pop3 lmtp# 允许哪个网段登录，允许所有网段登录改成0.0.0.0login_trusted_networks = 192.168.1.0/24vim /etc/dovecot/conf.d/10-mail.conf# 打开，指定邮件存放位置mail_location = mbox:~/mail:INBOX=/var/mail/%u# 重启服务systemctl restart dovecot# 为使新创建的用户可以自动创建收邮件目录，修改下面文件# 用户每次登录都会加载以下文件vim /etc/skel/.bash_profile# 添加if [ ! -d ~/mail/.imap/INBOX ] ; then    mkdir -p ~/mail/.imap/INBOXfi# 创建两个用户互相收发邮件[root@nagios2 ~]# useradd zhangsan[root@nagios2 ~]# echo &quot;123456&quot; | passwd --stdin zhangsan更改用户 zhangsan 的密码 。passwd：所有的身份验证令牌已经成功更新。[root@nagios2 ~]# useradd lisi[root@nagios2 ~]# echo &quot;123456&quot; | passwd --stdin lisi# 切换到zhangsan用户发邮件给lisi[root@nagios2 ~]# su - zhangsan上一次登录：日 10月 28 14:16:46 CST 2018pts/0 上[zhangsan@nagios2 ~]$ ll总用量 0drwxrwxr-x 3 zhangsan zhangsan 18 10月 28 14:18 mail[zhangsan@nagios2 ~]$ ll mail/.imap/INBOX/总用量 0[zhangsan@nagios2 ~]$ mail -s &quot;11111&quot; lisi@nagios2.com &lt; /etc/hosts[zhangsan@nagios2 ~]$ su - lisi密码：上一次登录：日 10月 28 14:17:56 CST 2018pts/0 上[lisi@nagios2 ~]$ ll总用量 0drwxrwxr-x 3 lisi lisi 18 10月 28 14:18 mail[lisi@nagios2 ~]$ mailHeirloom Mail version 12.5 7/5/10.  Type ? for help.&quot;/var/spool/mail/lisi&quot;: 2 messages 2 new&gt;N  1 zhangsan@nagios2.com  Sun Oct 28 14:17  20/727   &quot;11111&quot; N  2 zhangsan@nagios2.com  Sun Oct 28 14:18  20/727   &quot;11111&quot;&amp; 1Message  1:</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;搭建Postfix邮件服务器&quot;&gt;&lt;a href=&quot;#搭建Postfix邮件服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建Postfix邮件服务器&quot;&gt;&lt;/a&gt;搭建Postfix邮件服务器&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;安装邮件服务器发送端&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install -y postfix
# 在服务端用于测试接收邮件
yum install -y dovecot
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systemctl restart postfix
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;修改postfix配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@nagios2 ~]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
192.168.1.241 nagios2.com

vim /etc/postfix/main.cf
mydomain = nagios2.com
mynetworks = 192.168.1.0/24,127.0.0.0/8
# 重启
systemctl restart postfix
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="Postfix" scheme="http://blog.golearns.org/tags/Postfix/"/>
    
  </entry>
  
  <entry>
    <title>搭建无人值守安装服务器</title>
    <link href="http://blog.golearns.org/2018/10/30/%E6%90%AD%E5%BB%BA%E6%97%A0%E4%BA%BA%E5%80%BC%E5%AE%88%E5%AE%89%E8%A3%85%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.golearns.org/2018/10/30/搭建无人值守安装服务器/</id>
    <published>2018-10-30T13:02:39.000Z</published>
    <updated>2018-11-09T04:11:06.491Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基于redhat6-5搭建无人值守安装服务器"><a href="#基于redhat6-5搭建无人值守安装服务器" class="headerlink" title="基于redhat6.5搭建无人值守安装服务器"></a>基于redhat6.5搭建无人值守安装服务器</h1><blockquote><p>基于FTP+TFTP+PXE+DHCP+Kickstart</p><p>PXE协议使计算机可以通过网络启动，网卡中必须有PXE芯片</p><p>运行PXE协议需要设置DHCP服务器和TFTP服务器。DHCP服务器来给PXE client分配一个IP地址</p><p>由于是给PXE client分配IP地址，所以在配置DHCP服务器时需要增加相应的PXE设置</p><p>客户端开机PXE网卡会获取一个DHCP服务器，DHCP服务器告诉客户端使用TFTP客户端下载TFTP服务器上的文件，然后通过FTP提供的ks.cfg文件会安装服务器</p></blockquote><h3 id="安装ftp"><a href="#安装ftp" class="headerlink" title="安装ftp"></a>安装ftp</h3><pre><code>yum install -y vsftpdservice vsftpd startchkconfig vsftpd on</code></pre><h3 id="安装kickstart"><a href="#安装kickstart" class="headerlink" title="安装kickstart"></a>安装kickstart</h3><pre><code>yum install -y system-config-kickstart</code></pre><a id="more"></a><h3 id="安装TFTP"><a href="#安装TFTP" class="headerlink" title="安装TFTP"></a>安装TFTP</h3><pre><code>yum install -y tftp-server xinetd tftp# 配置tftpcat /etc/xinetd.d/tftpservice tftp{    socket_type        = dgram    protocol        = udp    wait            = yes    user            = root    server            = /usr/sbin/in.tftpd    server_args        = -s /tftpboot    disable            = no    per_source        = 11    cps            = 100 2    flags            = IPv4}service xinetd restartmkdir /tftpbootmkdir /tftpboot/pxelinux.cfgcp /usr/share/syslinux/pxelinux.0 /tftpboot/cp /mnt/isolinux/isolinux.cfg /tftpboot/pxelinux.cfg/default# 虚拟到内存里的镜像，在内存里可以虚拟出来一个文件系统 cp /mnt/images/pxeboot/initrd.img /tftpboot/# 内核cp /mnt/images/pxeboot/vmlinuz /tftpboot/chmod 644 /tftpboot/pxelinux.cfg/default# 修改default文件，通过ftp服务器方式来访问kickstart文件cat /tftpboot/pxelinux.cfg/defaultdefault linux#prompt 1timeout 600display boot.msgmenu background splash.jpgmenu title Welcome to Red Hat Enterprise Linux 6.5!menu color border 0 #ffffffff #00000000menu color sel 7 #ffffffff #ff000000menu color title 0 #ffffffff #00000000menu color tabmsg 0 #ffffffff #00000000menu color unsel 0 #ffffffff #00000000menu color hotsel 0 #ff000000 #ffffffffmenu color hotkey 7 #ffffffff #ff000000menu color scrollbar 0 #ffffffff #00000000label linux  menu label ^Install or upgrade an existing system  menu default  kernel vmlinuz  append initrd=initrd.img ks=ftp://192.168.1.10/ks.cfglabel vesa  menu label Install system with ^basic video driver  kernel vmlinuz  append initrd=initrd.img xdriver=vesa nomodesetlabel rescue  menu label ^Rescue installed system  kernel vmlinuz  append initrd=initrd.img rescuelabel local  menu label Boot from ^local drive  localboot 0xfffflabel memtest86  menu label ^Memory test  kernel memtest  append -# 在图形界面下打开kickstart配置程序LANG=zh_CN.UTF-8执行system-config-kickstart</code></pre><p><img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG126.jpeg" alt=""><img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG127.jpeg" alt=""><img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG128.jpeg" alt=""></p><ul><li><p>创建一个boot分区<img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG129.jpeg" alt=""></p></li><li><p>创建一个swap分区<img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG130.jpeg" alt=""></p></li><li><p>创建根分区<img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG131.jpeg" alt=""></p></li><li><p>网络配置<img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG132.jpeg" alt=""></p></li><li><p>防火墙配置<img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG133.jpeg" alt=""></p></li><li><p>安装后执行的脚本<img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG134.jpeg" alt=""></p></li><li><p>保存ks.cfg到/root下<img src="http://opsi4gg7g.bkt.clouddn.com/WechatIMG135.jpeg" alt=""></p></li><li><p>执行</p><pre><code>cp /root/ks.cfg /var/ftp# 挂载镜像mount /dev/cdrom /var/ftp/pub/service vsftpd restart</code></pre></li></ul><h3 id="安装DHCP"><a href="#安装DHCP" class="headerlink" title="安装DHCP"></a>安装DHCP</h3><pre><code>yum install -y dhcp# vmware中添加一张vmnet4的网卡ifconfig eth1 192.168.1.10/24# 配置DHCPsubnet 192.168.1.0 netmask 255.255.255.0 {  range 192.168.1.100 192.168.1.200;  option domain-name-servers 192.168.1.1;  option domain-name &quot;internal.example.org&quot;;  option routers 192.168.1.1;  option broadcast-address 192.168.1.255;  default-lease-time 600;  max-lease-time 7200;  # 告诉客户端要找的ftp地址和文件  # 需要添加一张vmnet4的网卡  next-server 192.168.1.10;  filename &quot;pxelinux.0&quot;;}service dhcpd restartchkconfig dhcpd on</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基于redhat6-5搭建无人值守安装服务器&quot;&gt;&lt;a href=&quot;#基于redhat6-5搭建无人值守安装服务器&quot; class=&quot;headerlink&quot; title=&quot;基于redhat6.5搭建无人值守安装服务器&quot;&gt;&lt;/a&gt;基于redhat6.5搭建无人值守安装服务器&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;基于FTP+TFTP+PXE+DHCP+Kickstart&lt;/p&gt;
&lt;p&gt;PXE协议使计算机可以通过网络启动，网卡中必须有PXE芯片&lt;/p&gt;
&lt;p&gt;运行PXE协议需要设置DHCP服务器和TFTP服务器。DHCP服务器来给PXE client分配一个IP地址&lt;/p&gt;
&lt;p&gt;由于是给PXE client分配IP地址，所以在配置DHCP服务器时需要增加相应的PXE设置&lt;/p&gt;
&lt;p&gt;客户端开机PXE网卡会获取一个DHCP服务器，DHCP服务器告诉客户端使用TFTP客户端下载TFTP服务器上的文件，然后通过FTP提供的ks.cfg文件会安装服务器&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;安装ftp&quot;&gt;&lt;a href=&quot;#安装ftp&quot; class=&quot;headerlink&quot; title=&quot;安装ftp&quot;&gt;&lt;/a&gt;安装ftp&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;yum install -y vsftpd
service vsftpd start
chkconfig vsftpd on
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;安装kickstart&quot;&gt;&lt;a href=&quot;#安装kickstart&quot; class=&quot;headerlink&quot; title=&quot;安装kickstart&quot;&gt;&lt;/a&gt;安装kickstart&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;yum install -y system-config-kickstart
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="dhcp" scheme="http://blog.golearns.org/tags/dhcp/"/>
    
      <category term="FTP" scheme="http://blog.golearns.org/tags/FTP/"/>
    
      <category term="TFTP" scheme="http://blog.golearns.org/tags/TFTP/"/>
    
      <category term="PXE" scheme="http://blog.golearns.org/tags/PXE/"/>
    
      <category term="Kickstart" scheme="http://blog.golearns.org/tags/Kickstart/"/>
    
  </entry>
  
  <entry>
    <title>搭建nagios监控服务器</title>
    <link href="http://blog.golearns.org/2018/10/30/%E6%90%AD%E5%BB%BAnagios%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://blog.golearns.org/2018/10/30/搭建nagios监控服务器/</id>
    <published>2018-10-30T06:16:44.000Z</published>
    <updated>2018-11-09T04:11:24.074Z</updated>
    
    <content type="html"><![CDATA[<h3 id="搭建nagios"><a href="#搭建nagios" class="headerlink" title="搭建nagios"></a>搭建nagios</h3><h1 id="安装nagios"><a href="#安装nagios" class="headerlink" title="安装nagios"></a>安装nagios</h1><pre><code>yum install -y httpd gcc glibc glibc-common php gd gd-devel libpng libmng libjpeg zlibuseradd nagiosgroupadd nagcmdusermod -G nagcmd nagiosusermod -G nagcmd apachetar xzvf nagios-3.5.1.tar.gzcd nagios./configure --with-command-group=nagcmdmake allmake install# 生成的nagios web访问目录ll /usr/local/nagios/share/# 生成启动脚本make install-init# 设置工作目录权限make install-commandmode# 生成配置文件make install-config# 配置文件目录ll /usr/local/nagios/etc/# 将nagios配置文件加入apache配置文件make install-webconf# 生成访问nagios web登录的用户名和密码htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin</code></pre><a id="more"></a><ul><li><p>编译nagios插件</p><pre><code># 安装插件之前先安装mysql服务yum install -y mysql-develtar xzvf nagios-plugins-2.1.1.tar.gzcd nagios-plugins-2.1.1./configure --with-nagios-user=nagios --with-nagios-group=nagcmdmake &amp;&amp; make install# 安装成功后会生成脚本文件ls -la /usr/local/nagios/libexec/</code></pre></li><li><p>检查配置文件</p><pre><code>/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg</code></pre></li><li><p>启动nagios</p><pre><code>systemctl start nagios</code></pre></li><li><p>访问</p><pre><code>http://192.168.1.240/nagios</code></pre></li></ul><h1 id="监控本机对象，监控NFS服务运行状态"><a href="#监控本机对象，监控NFS服务运行状态" class="headerlink" title="监控本机对象，监控NFS服务运行状态"></a>监控本机对象，监控NFS服务运行状态</h1><pre><code>cd /usr/local/nagios/etc/objects/cp localhost.cfg localhost.cfg.bakcat localhost.cfgdefine host {    use                     linux-server    host_name               localhost    alias                   localhost    address                 127.0.0.1  }define hostgroup{        hostgroup_name  linux-servers        alias           Linux Servers        members         localhost}define service {    use    local-service    host_name    localhost    service_description    NFS    check_command    check_tcp!2049 ;监听tcp端口2049}# 安装nfs服务yum install -y rpc-bind nfs-utils# 配置nfscat /etc/exports/tmp    *(rw)# 启动nfssystemctl restart nfs# 检查nfs是否启动成功showmount -e 192.168.1.240# 重启nagiossystemctl restart nagios# 访问http://192.168.1.240/nagios查看服务状态# 默认间隔5分钟检查一次，可以强制检查</code></pre><p><img src="http://opsi4gg7g.bkt.clouddn.com/1540545509151.jpg" alt=""></p><pre><code># 如果出现Error: Could not stat() command file &apos;/usr/local/nagios/var/rw/nagios.cmd&apos;!错误，关闭防火墙</code></pre><h1 id="监控外部主机192-168-1-241上的mysql服务器运行状态"><a href="#监控外部主机192-168-1-241上的mysql服务器运行状态" class="headerlink" title="监控外部主机192.168.1.241上的mysql服务器运行状态"></a>监控外部主机192.168.1.241上的mysql服务器运行状态</h1><ul><li><p>编辑主配置文件</p><pre><code>vim /usr/local/nagios/etc/nagios.cfg# 添加以下两项配置cfg_file=/usr/local/nagios/etc/objects/mysql.cfgcat mysql.cfgdefine host{        use                     linux-server        host_name               nagios2        alias                   mysql服务器        address                 192.168.1.241    hostgroups        mysql-server}define service {        use     local-service        host_name       nagios2        service_description     mysql服务        check_command   check_mysql}define hostgroup {    hostgroup_name    mysql-server    alias    mysql服务器    members    nagios2}# check_command 命令必须在command.cfg中存在# 在command.cfg中添加以下内容define command {command_name    check_mysqlcommand_line    $USER1$/check_mysql -H $HOSTADDRESS$ -u nagdb -d nagdb}# 在192.168.1.241服务器中安装mysql服务yum install -y mysql-serversystemctl start mysqld# 创建nagdb数据库和用户create database nagdb;grant select on nagdb.* to nagdb@&apos;192.168.1.240&apos;;# 回到192.168.1.240服务器中测试连接/usr/local/nagios/libexec/check_mysql -H 192.168.1.241 -u nagdb -d nagdb# 返回以下内容表示连接成功Uptime: 846  Threads: 1  Questions: 49  Slow queries: 0  Opens: 67  Flush tables: 1  Open tables: 60  Queries per second avg: 0.057|Connections=19c;;; Open_files=16;;; Open_tables=60;;; Qcache_free_memory=1031352;;; Qcache_hits=0c;;; Qcache_inserts=0c;;; Qcache_lowmem_prunes=0c;;; Qcache_not_cached=11c;;; Qcache_queries_in_cache=0;;; Queries=50c;;; Questions=44c;;; Table_locks_waited=0c;;; Threads_connected=1;;; Threads_running=1;;; Uptime=846c;;;# 关闭192.168.1.241上的mysql服务，测试返回结果为Can&apos;t connect to MySQL server on &apos;192.168.1.241&apos; (111)# 访问http://192.168.1.240/nagios查看mysql服务是否正常</code></pre><p>  <img src="http://opsi4gg7g.bkt.clouddn.com/1540615926016.jpg" alt=""></p></li></ul><h1 id="监听服务器上的私有信息"><a href="#监听服务器上的私有信息" class="headerlink" title="监听服务器上的私有信息"></a>监听服务器上的私有信息</h1><h2 id="监控192-168-1-241服务器上的私有信息-硬盘、。"><a href="#监控192-168-1-241服务器上的私有信息-硬盘、。" class="headerlink" title="监控192.168.1.241服务器上的私有信息(硬盘、。)"></a>监控192.168.1.241服务器上的私有信息(硬盘、。)</h2><ul><li>正常情况下不能访问外部服务器的私有信息，需要通过nagios远程执行插件nrpe来获取</li><li>两台机器通过ssl加密传输数据</li><li><p>在两台机器上192.168.1.240和241服务器安装ssl</p><pre><code>yum install -y openssl openssl-devel</code></pre></li><li><p>两台服务器分别安装nrpe</p><pre><code>tar xvzf nrpe-2.15.tar.gzcd nrpe-2.15yum install -y gcc./configure# 编译成功后显示General Options: ------------------------- NRPE port:    5666 NRPE user:    nagios NRPE group:   nagios Nagios user:  nagios Nagios group: nagios# 需要创建nagios用户useradd nagiosgroupadd nagcmdusermod -G nagcmd nagiosmake allmake install# 插件安装后所在路径/usr/local/nagios/libexec/check_nrpe# 192.168.1.241服务器还需生成配置文件make install-daemon-config# 让xinetd服务可以管理nrep服务，生成xinetd下nrpe配置文件make install-xinetdyum install -y xinetd</code></pre></li><li><p>在主配置文件添加配置文件</p><pre><code># 在/usr/local/nagios/etc/nagios.cfg中添加cfg_file=/usr/local/nagios/etc/objects/hosts.cfg# 在/usr/local/nagios/etc/objects/hosts.cfg中添加define service {    use     local-service    host_name       nagios2    service_description     磁盘检查    check_command   check_nrpe!check_root ; 当磁盘空间小于80%警告，小于90%警告危急}define service {    use local-service    host_name       nagios2    service_description     统计总进程    check_command   check_nrpe!check_total_procs ; 总进程数大于250个警告，大于400个警告危急}define service {    use     local-service    host_name       nagios2    service_description     当前负载    check_command   check_nrpe!check_load ; 检查当前服务器负载}# 在/usr/local/nagios/etc/objects/command.cfg中添加define command {    command_name    check_nrpe    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c $ARG1$}</code></pre></li></ul><h3 id="192-168-1-241配置"><a href="#192-168-1-241配置" class="headerlink" title="192.168.1.241配置"></a>192.168.1.241配置</h3><ul><li>安装nagios-plugins</li><li><p>编辑 /etc/xinetd.d/nrpe配置文件，添加only_from 192.168.1.240，允许240服务器连接nrpe</p><pre><code>service nrpe{        flags           = REUSE        socket_type     = stream        port            = 5666        wait            = no        user            = nagios        group           = nagios        server          = /usr/local/nagios/bin/nrpe        server_args     = -c /usr/local/nagios/etc/nrpe.cfg --inetd        log_on_failure  += USERID        disable         = no        only_from       = 127.0.0.1 192.168.1.240}</code></pre></li><li><p>在/etc/services文件中添加</p><pre><code>nrpe            5666/tcp                # NRPE</code></pre></li><li><p>/etc/services文件作用</p><ul><li>xinet.d来启动服务时会在/etc/services找相应的端口来启动服务。找不到对应端口，将不启动服务。</li></ul></li><li><p>启动xinetd</p><pre><code>systemctl start xinetd</code></pre></li><li><p>查看5666端口是否启动成功</p><pre><code>netstat -antlup | grep 5666</code></pre></li><li><p>/usr/local/nagios/etc/nrpe.cfg添加，检查磁盘剩余空间，小于80%告警，小于90%告警危急</p><pre><code>command[check_root]=/usr/local/nagios/libexec/check_disk -w 80% -c 90% -p /dev/mapper/centos-root</code></pre></li><li><p>重启xinetd</p><pre><code>systemctl restart xinetd</code></pre></li><li><p>查看磁盘空间</p><pre><code>[root@nagios2 etc]# df -h文件系统                 容量  已用  可用 已用% 挂载点/dev/mapper/centos-root   18G  2.0G   16G   11% /devtmpfs                 484M     0  484M    0% /devtmpfs                    494M     0  494M    0% /dev/shmtmpfs                    494M   13M  481M    3% /runtmpfs                    494M     0  494M    0% /sys/fs/cgroup/dev/sda1                497M  154M  344M   31% /boottmpfs                     99M     0   99M    0% /run/user/0</code></pre></li><li>访问<a href="http://192.168.1.240/nagios" target="_blank" rel="noopener">http://192.168.1.240/nagios</a><img src="http://opsi4gg7g.bkt.clouddn.com/1540630066544.jpg" alt=""></li></ul><h1 id="配置nagios邮件提醒"><a href="#配置nagios邮件提醒" class="headerlink" title="配置nagios邮件提醒"></a>配置nagios邮件提醒</h1><ul><li><p>安装sendmail</p><pre><code>yum install -y sendmailsystemctl enable sendmailsystemctl start sendmail</code></pre></li><li><p>修改配置文件<code>/usr/local/nagios/etc/objects/contacts.cfg</code></p><pre><code>define contact{    contact_name                    nagiosadmin    use                             generic-contact    alias                           Nagios Admin    email                           763960267@qq.com ; 多个联系人用空格分开}</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;搭建nagios&quot;&gt;&lt;a href=&quot;#搭建nagios&quot; class=&quot;headerlink&quot; title=&quot;搭建nagios&quot;&gt;&lt;/a&gt;搭建nagios&lt;/h3&gt;&lt;h1 id=&quot;安装nagios&quot;&gt;&lt;a href=&quot;#安装nagios&quot; class=&quot;headerlink&quot; title=&quot;安装nagios&quot;&gt;&lt;/a&gt;安装nagios&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;yum install -y httpd gcc glibc glibc-common php gd gd-devel libpng libmng libjpeg zlib
useradd nagios
groupadd nagcmd
usermod -G nagcmd nagios
usermod -G nagcmd apache

tar xzvf nagios-3.5.1.tar.gz
cd nagios
./configure --with-command-group=nagcmd
make all
make install

# 生成的nagios web访问目录
ll /usr/local/nagios/share/

# 生成启动脚本
make install-init

# 设置工作目录权限
make install-commandmode

# 生成配置文件
make install-config
# 配置文件目录
ll /usr/local/nagios/etc/

# 将nagios配置文件加入apache配置文件
make install-webconf

# 生成访问nagios web登录的用户名和密码
htpasswd -c /usr/local/nagios/etc/htpasswd.users nagiosadmin
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Linux" scheme="http://blog.golearns.org/categories/Linux/"/>
    
    
      <category term="nagios" scheme="http://blog.golearns.org/tags/nagios/"/>
    
  </entry>
  
  <entry>
    <title>php elsearch autocomplete</title>
    <link href="http://blog.golearns.org/2018/09/17/php-elsearch-autocomplete/"/>
    <id>http://blog.golearns.org/2018/09/17/php-elsearch-autocomplete/</id>
    <published>2018-09-17T15:13:08.000Z</published>
    <updated>2018-09-17T15:15:55.353Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PHP-Eleasticsearch-实现自动补全"><a href="#PHP-Eleasticsearch-实现自动补全" class="headerlink" title="PHP+Eleasticsearch 实现自动补全"></a>PHP+Eleasticsearch 实现自动补全</h1><h2 id="1-创建索引"><a href="#1-创建索引" class="headerlink" title="1. 创建索引"></a>1. 创建索引</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $params = [</span><br><span class="line">        <span class="string">'index'</span> =&gt; <span class="string">'auto_complete_shop'</span>,</span><br><span class="line">        <span class="string">'body'</span> =&gt; [</span><br><span class="line">            <span class="string">'settings'</span> =&gt; [</span><br><span class="line">                <span class="string">'number_of_shards'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                <span class="string">'analysis'</span> =&gt; [</span><br><span class="line">                    <span class="string">'filter'</span> =&gt; [</span><br><span class="line">                        <span class="string">'autocomplete_filter'</span> =&gt; [</span><br><span class="line">                            <span class="string">'type'</span> =&gt; <span class="string">'edge_ngram'</span>,</span><br><span class="line">                            <span class="string">'min_gram'</span> =&gt; <span class="number">1</span>,</span><br><span class="line">                            <span class="string">'max_gram'</span> =&gt; <span class="number">20</span></span><br><span class="line">                        ]</span><br><span class="line">                    ],</span><br><span class="line">                    <span class="string">'analyzer'</span> =&gt; [</span><br><span class="line">                        <span class="string">'autocomplete'</span> =&gt; [</span><br><span class="line">                            <span class="string">'type'</span> =&gt; <span class="string">'custom'</span>,</span><br><span class="line">                            <span class="string">'tokenizer'</span> =&gt; <span class="string">'standard'</span>,</span><br><span class="line">                            <span class="string">'filter'</span> =&gt; [</span><br><span class="line">                                <span class="string">'lowercase'</span>, <span class="string">'autocomplete_filter'</span></span><br><span class="line">                            ]</span><br><span class="line">                        ]</span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'mappings'</span> =&gt; [</span><br><span class="line">                <span class="string">'goods'</span> =&gt; [</span><br><span class="line">                    <span class="string">'_source'</span> =&gt; [</span><br><span class="line">                        <span class="string">'enabled'</span> =&gt; <span class="keyword">true</span></span><br><span class="line">                    ],</span><br><span class="line">                    <span class="string">'properties'</span> =&gt; [</span><br><span class="line">                        <span class="string">'name'</span> =&gt; [</span><br><span class="line">                            <span class="string">'type'</span> =&gt; <span class="string">'string'</span>,</span><br><span class="line">                            <span class="string">'analyzer'</span> =&gt; <span class="string">'autocomplete'</span>,</span><br><span class="line">                            <span class="string">'search_analyzer'</span> =&gt; <span class="string">'standard'</span></span><br><span class="line">                        ]</span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $result = <span class="keyword">$this</span>-&gt;client-&gt;indices()-&gt;create($params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json_encode($result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-批量索引文档"><a href="#2-批量索引文档" class="headerlink" title="2. 批量索引文档"></a>2. 批量索引文档</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">indexGoods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $goods = db(<span class="string">'goods'</span>)-&gt;field(<span class="string">'id, name, category_id, goods_no, pro_no, depot, brand_id, sell_price, market_price, cost_price, create_time, store_nums, warning_line'</span>)-&gt;select();</span><br><span class="line"></span><br><span class="line">    $params = [<span class="string">'body'</span> =&gt; []];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($goods !== <span class="keyword">false</span>) &#123;</span><br><span class="line">        <span class="keyword">foreach</span> ($goods <span class="keyword">as</span> $k =&gt; $good) &#123;</span><br><span class="line">            $params[<span class="string">'body'</span>][] = [</span><br><span class="line">                <span class="string">'index'</span> =&gt; [</span><br><span class="line">                    <span class="string">'_index'</span> =&gt; <span class="string">'auto_complete_shop'</span>,</span><br><span class="line">                    <span class="string">'_type'</span> =&gt; <span class="string">'goods'</span>,</span><br><span class="line">                    <span class="string">'_id'</span> =&gt; $good[<span class="string">'id'</span>]</span><br><span class="line">                ]</span><br><span class="line">            ];</span><br><span class="line"></span><br><span class="line">            $params[<span class="string">'body'</span>][] = [</span><br><span class="line">                <span class="string">'name'</span> =&gt; $good[<span class="string">'name'</span>],</span><br><span class="line">                <span class="string">'categoryId'</span> =&gt; $good[<span class="string">'category_id'</span>],</span><br><span class="line">                <span class="string">'goodsNo'</span> =&gt; $good[<span class="string">'goods_no'</span>],</span><br><span class="line">                <span class="string">'proNo'</span> =&gt; $good[<span class="string">'pro_no'</span>],</span><br><span class="line">                <span class="string">'depot'</span> =&gt; $good[<span class="string">'depot'</span>],</span><br><span class="line">                <span class="string">'brandId'</span> =&gt; $good[<span class="string">'brand_id'</span>],</span><br><span class="line">                <span class="string">'sellPrice'</span> =&gt; $good[<span class="string">'sell_price'</span>],</span><br><span class="line">                <span class="string">'marketPrice'</span> =&gt; $good[<span class="string">'market_price'</span>],</span><br><span class="line">                <span class="string">'costPrice'</span> =&gt; $good[<span class="string">'cost_price'</span>],</span><br><span class="line">                <span class="string">'createTime'</span> =&gt; $good[<span class="string">'create_time'</span>],</span><br><span class="line">                <span class="string">'storeNums'</span> =&gt; $good[<span class="string">'store_nums'</span>],</span><br><span class="line">                <span class="string">'warningLine'</span> =&gt; $good[<span class="string">'warning_line'</span>]</span><br><span class="line">            ];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ($k % <span class="number">1000</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                $responses = <span class="keyword">$this</span>-&gt;client-&gt;bulk($params);</span><br><span class="line">                $params = [<span class="string">'body'</span> =&gt; []];</span><br><span class="line">                <span class="keyword">unset</span>($responses);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">empty</span>($params[<span class="string">'body'</span>])) &#123;</span><br><span class="line">            $responses = <span class="keyword">$this</span>-&gt;client-&gt;bulk($params);</span><br><span class="line">            <span class="keyword">return</span> json_encode($responses);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="string">'status'</span> =&gt; <span class="string">'success'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> json_encode([<span class="string">'status'</span> =&gt; <span class="string">'faild'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-自动补全接口"><a href="#3-自动补全接口" class="headerlink" title="3. 自动补全接口"></a>3. 自动补全接口</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">autoComplete</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    $search = input(<span class="string">'get.search'</span>);</span><br><span class="line"></span><br><span class="line">    $params = [</span><br><span class="line">        <span class="string">'index'</span> =&gt; <span class="string">'auto_complete_shop'</span>,</span><br><span class="line">        <span class="string">'type'</span> =&gt; <span class="string">'goods'</span>,</span><br><span class="line">        <span class="string">'body'</span> =&gt; [</span><br><span class="line">            <span class="string">'query'</span> =&gt; [</span><br><span class="line">                <span class="string">'match'</span> =&gt; [</span><br><span class="line">                    <span class="string">'name'</span> =&gt; $search</span><br><span class="line">                ]</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    $response = <span class="keyword">$this</span>-&gt;client-&gt;search($params);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>($response[<span class="string">'hits'</span>][<span class="string">'hits'</span>]) &amp;&amp; count($response[<span class="string">'hits'</span>][<span class="string">'hits'</span>]) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        $result = [];</span><br><span class="line"></span><br><span class="line">        $hits = $response[<span class="string">'hits'</span>][<span class="string">'hits'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($hits <span class="keyword">as</span> $k =&gt; $v) &#123;</span><br><span class="line">            $result[$k][<span class="string">'name'</span>] = $v[<span class="string">'_source'</span>][<span class="string">'name'</span>];</span><br><span class="line">            <span class="comment">// array_push($result, $v['_source']['name']);</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> json_encode($result);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> json_encode([]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;PHP-Eleasticsearch-实现自动补全&quot;&gt;&lt;a href=&quot;#PHP-Eleasticsearch-实现自动补全&quot; class=&quot;headerlink&quot; title=&quot;PHP+Eleasticsearch 实现自动补全&quot;&gt;&lt;/a&gt;PHP+Eleasticsearch 实现自动补全&lt;/h1&gt;&lt;h2 id=&quot;1-创建索引&quot;&gt;&lt;a href=&quot;#1-创建索引&quot; class=&quot;headerlink&quot; title=&quot;1. 创建索引&quot;&gt;&lt;/a&gt;1. 创建索引&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;createIndex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $params = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;index&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;auto_complete_shop&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&#39;body&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;settings&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;number_of_shards&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;analysis&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;filter&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;autocomplete_filter&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;edge_ngram&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;min_gram&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;max_gram&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;analyzer&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;autocomplete&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;custom&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;tokenizer&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;standard&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;filter&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                &lt;span class=&quot;string&quot;&gt;&#39;lowercase&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;autocomplete_filter&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;string&quot;&gt;&#39;mappings&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;string&quot;&gt;&#39;goods&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;_source&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;enabled&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;string&quot;&gt;&#39;properties&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt; =&amp;gt; [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;type&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;string&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;analyzer&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;autocomplete&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                            &lt;span class=&quot;string&quot;&gt;&#39;search_analyzer&#39;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&#39;standard&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    $result = &lt;span class=&quot;keyword&quot;&gt;$this&lt;/span&gt;-&amp;gt;client-&amp;gt;indices()-&amp;gt;create($params);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; json_encode($result);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/categories/thinkphp5/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/tags/thinkphp5/"/>
    
  </entry>
  
  <entry>
    <title>elsearch安装</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch%E5%AE%89%E8%A3%85/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch安装/</id>
    <published>2018-09-17T15:10:59.000Z</published>
    <updated>2018-09-17T15:16:21.897Z</updated>
    
    <content type="html"><![CDATA[<h1 id="elasticsearch-install"><a href="#elasticsearch-install" class="headerlink" title="elasticsearch install"></a>elasticsearch install</h1><h3 id="新建用户组和用户"><a href="#新建用户组和用户" class="headerlink" title="新建用户组和用户"></a>新建用户组和用户</h3><pre><code>groupadd elsearchuseradd elsearch -g elsearch# 切换用户su elsearch</code></pre><h3 id="下载启动"><a href="#下载启动" class="headerlink" title="下载启动"></a>下载启动</h3><pre><code>wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.zipunzip elasticsearch-5.5.1.zipcd elasticsearch-5.5.1/</code></pre><a id="more"></a><h3 id="遇到无法启动，切换到root用户"><a href="#遇到无法启动，切换到root用户" class="headerlink" title="遇到无法启动，切换到root用户"></a>遇到无法启动，切换到root用户</h3><pre><code>vim /etc/security/limits.conf# 添加* soft nofile 65536* hard nofile 131072* soft nproc 2048* hard nproc 4096vim /etc/sysctl.conf# 添加vm.max_map_count=655360# 执行sysctl -p</code></pre><h3 id="重启elasticsearch"><a href="#重启elasticsearch" class="headerlink" title="重启elasticsearch"></a>重启elasticsearch</h3><pre><code>su elsearchcd elasticsearch/./bin/elasticsearch -d -p pid</code></pre><h3 id="需要远程访问"><a href="#需要远程访问" class="headerlink" title="需要远程访问"></a>需要远程访问</h3><pre><code>vim config/elasticsearch.ymlnetwork.host: 0.0.0.0</code></pre><h3 id="中文分词设置"><a href="#中文分词设置" class="headerlink" title="中文分词设置"></a>中文分词设置</h3><pre><code>./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.1/elasticsearch-analysis-ik-5.5.1.zip# 可以将文件下载ftp上传后通过以下方式安装./bin/elasticsearch-plugin install file:///home/elsearch/elasticsearch-analysis-ik-5.5.1.zip</code></pre><h3 id="查看集群信息"><a href="#查看集群信息" class="headerlink" title="查看集群信息"></a>查看集群信息</h3><ul><li><p>查看健康状态</p><pre><code>curl &apos;http://localhost:9200/_cat/health?v&apos;status: green yellow redgreen: 表示一切正常，集群功能完全正常yellow: 表示所有数据都可用，但是一些副本尚未分配。red: 表示某些数据因任何原因不可用</code></pre></li><li><p>查看节点列表</p><pre><code>curl &apos;http://localhost:9200/_cat/nodes?v&apos;</code></pre></li><li><p>查看节点所有索引信息</p><pre><code>curl &apos;http://localhost:9200/_cat/indices?v&apos;health status index           uuid                   pri rep docs.count docs.deleted store.size pri.store.sizeyellow open   megacorp_spring NpcpvsXYTiOWGpFXqznl2Q   5   1          1            0      6.3kb          6.3kbyellow open   user            0GPpkAzNTHaLCJV0yhievQ   5   1          4            0     22.9kb         22.9kbhealth: 健康状态status: 状态, yellow(因为elasticsearch默认为这个索引分配了一个副本，当前只有一个节点，当该副本被分配到第二个节点上，该索引状态将变成绿色)index: 索引名称uuid: 唯一标识pri: 主分片rep: 副本docs.count: docs.deleted: store.size: pri.store.size: </code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;elasticsearch-install&quot;&gt;&lt;a href=&quot;#elasticsearch-install&quot; class=&quot;headerlink&quot; title=&quot;elasticsearch install&quot;&gt;&lt;/a&gt;elasticsearch install&lt;/h1&gt;&lt;h3 id=&quot;新建用户组和用户&quot;&gt;&lt;a href=&quot;#新建用户组和用户&quot; class=&quot;headerlink&quot; title=&quot;新建用户组和用户&quot;&gt;&lt;/a&gt;新建用户组和用户&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;groupadd elsearch
useradd elsearch -g elsearch
# 切换用户
su elsearch
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;下载启动&quot;&gt;&lt;a href=&quot;#下载启动&quot; class=&quot;headerlink&quot; title=&quot;下载启动&quot;&gt;&lt;/a&gt;下载启动&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-5.5.1.zip
unzip elasticsearch-5.5.1.zip
cd elasticsearch-5.5.1/
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
  </entry>
  
  <entry>
    <title>elsearch autocomplete</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch-autocomplete/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch-autocomplete/</id>
    <published>2018-09-17T15:10:30.000Z</published>
    <updated>2018-09-17T15:16:29.121Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Elsearch自动补全"><a href="#Elsearch自动补全" class="headerlink" title="Elsearch自动补全"></a>Elsearch自动补全</h1><h2 id="1-创建索引、实例化token过滤器和分析器"><a href="#1-创建索引、实例化token过滤器和分析器" class="headerlink" title="1. 创建索引、实例化token过滤器和分析器"></a>1. 创建索引、实例化token过滤器和分析器</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT localhost:9200/autosuggest -d '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"settings"</span>: &#123;</span><br><span class="line">        <span class="attr">"number_of_shards"</span>: <span class="number">1</span>, </span><br><span class="line">        <span class="attr">"analysis"</span>: &#123;</span><br><span class="line">            <span class="attr">"filter"</span>: &#123;</span><br><span class="line">                <span class="attr">"autocomplete_filter"</span>: &#123; </span><br><span class="line">                    <span class="attr">"type"</span>:     <span class="string">"edge_ngram"</span>,</span><br><span class="line">                    <span class="attr">"min_gram"</span>: <span class="number">1</span>,</span><br><span class="line">                    <span class="attr">"max_gram"</span>: <span class="number">20</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">"analyzer"</span>: &#123;</span><br><span class="line">                <span class="attr">"autocomplete"</span>: &#123;</span><br><span class="line">                    <span class="attr">"type"</span>:      <span class="string">"custom"</span>,</span><br><span class="line">                    <span class="attr">"tokenizer"</span>: <span class="string">"standard"</span>,</span><br><span class="line">                    <span class="attr">"filter"</span>: [</span><br><span class="line">                        <span class="string">"lowercase"</span>,</span><br><span class="line">                        <span class="string">"autocomplete_filter"</span> </span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="2-测试分析器是否正确"><a href="#2-测试分析器是否正确" class="headerlink" title="2. 测试分析器是否正确"></a>2. 测试分析器是否正确</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/_analyze -d '                             </span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"analyzer"</span>: <span class="string">"autocomplete"</span>,</span><br><span class="line">  <span class="attr">"text"</span>: <span class="string">"quick brown"</span></span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="3-使用update-mappingAPI将这个分析器应用到具体字段"><a href="#3-使用update-mappingAPI将这个分析器应用到具体字段" class="headerlink" title="3. 使用update-mappingAPI将这个分析器应用到具体字段"></a>3. 使用<code>update-mapping</code>API将这个分析器应用到具体字段</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT localhost:9200/autosuggest/_mapping/my_type -d '                             </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"my_type"</span>: &#123;</span><br><span class="line">        <span class="attr">"properties"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: &#123;</span><br><span class="line">                <span class="attr">"type"</span>:     <span class="string">"string"</span>,</span><br><span class="line">                <span class="attr">"analyzer"</span>: <span class="string">"autocomplete"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="4-创建测试文档"><a href="#4-创建测试文档" class="headerlink" title="4. 创建测试文档"></a>4. 创建测试文档</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">curl -XPOST localhost:9200/autosuggest/my_type/_bulk -d '                             </span><br><span class="line">&#123; <span class="attr">"index"</span>: &#123; <span class="attr">"_id"</span>: <span class="number">1</span>            &#125;&#125;</span><br><span class="line">&#123; <span class="attr">"name"</span>: <span class="string">"Brown foxes"</span>    &#125;</span><br><span class="line">&#123; <span class="attr">"index"</span>: &#123; <span class="attr">"_id"</span>: <span class="number">2</span>            &#125;&#125;</span><br><span class="line">&#123; <span class="attr">"name"</span>: <span class="string">"Yellow furballs"</span> &#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="5-如果使用简单的match查询测试brown-fo"><a href="#5-如果使用简单的match查询测试brown-fo" class="headerlink" title="5. 如果使用简单的match查询测试brown fo"></a>5. 如果使用简单的match查询测试<code>brown fo</code></h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_search -d '                             </span><br><span class="line">&#123;                                  </span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"match"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"brown fo"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><ul><li>可以看到两个文档都能匹配，尽管 <code>Yellow furballs</code> 这个文档并不包含 <code>brown</code> 和 <code>fo</code> ：</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span>: <span class="number">42</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"max_score"</span>: <span class="number">1.7102298</span>,</span><br><span class="line">    <span class="attr">"hits"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"my_type"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"1"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">1.7102298</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"Brown foxes"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"my_type"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"2"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">0.2688388</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"name"</span>: <span class="string">"Yellow furballs"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-分析"><a href="#6-分析" class="headerlink" title="6. 分析"></a>6. 分析</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_validate/query?explain -d ' </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"match"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"brown fo"</span></span><br><span class="line">        &#125;                              </span><br><span class="line">    &#125;                                  </span><br><span class="line">&#125;                                             </span><br><span class="line">'</span><br></pre></td></tr></table></figure><ul><li><code>name:f</code>条件可以满足第二个文档</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"explanations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">      <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"explanation"</span>: <span class="string">"+(Synonym(name:b name:br name:bro name:brow name:brown) Synonym(name:f name:fo)) #_type:my_type"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-匹配用户输入的完整词组"><a href="#7-匹配用户输入的完整词组" class="headerlink" title="7. 匹配用户输入的完整词组"></a>7. 匹配用户输入的完整词组</h2><ul><li>可以通过在索引时使用 <code>autocomplete</code> 分析器，并在搜索时使用 <code>standard</code> 标准分析器来实现这种想法，只要改变查询使用的搜索分析器 <code>analyzer</code> 参数即可：</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_search -d '</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="attr">"query"</span>: &#123;</span><br><span class="line">         <span class="attr">"match"</span>: &#123;</span><br><span class="line">             <span class="attr">"name"</span>: &#123;</span><br><span class="line">                 <span class="attr">"query"</span>:    <span class="string">"brown fo"</span>,</span><br><span class="line">                 <span class="attr">"analyzer"</span>: <span class="string">"standard"</span> </span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> '</span><br></pre></td></tr></table></figure><h2 id="8-改变-search-analyzer-这里只要更新现有的映射不用对数据重新创建索引"><a href="#8-改变-search-analyzer-这里只要更新现有的映射不用对数据重新创建索引" class="headerlink" title="8. 改变`search_analyzer `这里只要更新现有的映射不用对数据重新创建索引"></a>8. 改变<code>`search_analyzer</code> `这里只要更新现有的映射不用对数据重新创建索引</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT localhost:9200/autosuggest/my_type/_mapping -d '</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"my_type"</span>: &#123;</span><br><span class="line">        <span class="attr">"properties"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: &#123;</span><br><span class="line">                <span class="attr">"type"</span>:            <span class="string">"string"</span>,</span><br><span class="line">                <span class="attr">"analyzer"</span>: <span class="string">"autocomplete"</span>,</span><br><span class="line">                <span class="attr">"search_analyzer"</span>: <span class="string">"standard"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">'</span><br></pre></td></tr></table></figure><h2 id="9-再次请求validate-queryAPI"><a href="#9-再次请求validate-queryAPI" class="headerlink" title="9. 再次请求validate-queryAPI"></a>9. 再次请求<code>validate-query</code>API</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">curl -XGET localhost:9200/autosuggest/my_type/_validate/query?explain -d ' </span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"match"</span>: &#123;</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"brown fo"</span></span><br><span class="line">        &#125;                              </span><br><span class="line">    &#125;                                  </span><br><span class="line">&#125;                                             </span><br><span class="line">'</span><br><span class="line"></span><br><span class="line">Response: </span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"explanations"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"index"</span>: <span class="string">"autosuggest"</span>,</span><br><span class="line">      <span class="attr">"valid"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"explanation"</span>: <span class="string">"+(name:brown name:fo) #_type:my_type"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Elsearch自动补全&quot;&gt;&lt;a href=&quot;#Elsearch自动补全&quot; class=&quot;headerlink&quot; title=&quot;Elsearch自动补全&quot;&gt;&lt;/a&gt;Elsearch自动补全&lt;/h1&gt;&lt;h2 id=&quot;1-创建索引、实例化token过滤器和分析器&quot;&gt;&lt;a href=&quot;#1-创建索引、实例化token过滤器和分析器&quot; class=&quot;headerlink&quot; title=&quot;1. 创建索引、实例化token过滤器和分析器&quot;&gt;&lt;/a&gt;1. 创建索引、实例化token过滤器和分析器&lt;/h2&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;curl -XPUT localhost:9200/autosuggest -d &#39;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;settings&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;number_of_shards&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;attr&quot;&gt;&quot;analysis&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;filter&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;autocomplete_filter&quot;&lt;/span&gt;: &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;:     &lt;span class=&quot;string&quot;&gt;&quot;edge_ngram&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;min_gram&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;max_gram&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;attr&quot;&gt;&quot;analyzer&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;attr&quot;&gt;&quot;autocomplete&quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;type&quot;&lt;/span&gt;:      &lt;span class=&quot;string&quot;&gt;&quot;custom&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;tokenizer&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;standard&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;attr&quot;&gt;&quot;filter&quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;lowercase&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;string&quot;&gt;&quot;autocomplete_filter&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elsearch 关键配置</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch-%E5%85%B3%E9%94%AE%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch-关键配置/</id>
    <published>2018-09-17T15:10:02.000Z</published>
    <updated>2018-09-17T15:39:07.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Elsearch-关键配置"><a href="#Elsearch-关键配置" class="headerlink" title="Elsearch 关键配置"></a>Elsearch 关键配置</h1><h2 id="关键配置项"><a href="#关键配置项" class="headerlink" title="关键配置项"></a>关键配置项</h2><p><strong>1、索引的shards个数:</strong></p><p>shards的个数，最好是和节点数相关的。理论上对同一个索引，单机上的shards个数最好不要超过两个，这样每个查询尽可能并行。但因为ES中shards的个数是确定了就没办法再调整的，所以如果考虑到数据会高速增长，一开始分配多些也可以。另一个常见思路是按时间纬度（如月）去定义ES索引——因为可以动态调整新加的索引的shards个数。其他的一些情况，比如下面举到的Wetest聚合的例子，因为需要数据尽量地按照渠道切分开，所以定义了很多个shards（200个），但太多的shards通常是不推荐的，ES管理起来也有开销。</p><p><strong>2、heap内存:</strong></p><p>官方建议是可用内存的一半，是通过启动ES的环境中，定义环境变量的方式完成的。如<code>export ES_HEAP_SIZE=10g</code></p><a id="more"></a><p><strong>3、cluster.name:</strong></p><p>集群的逻辑名称。只有cluster name相同的机器，才会在逻辑上组成一个集群。比如，内网中有5台ES机器的实例，是可以构成几个互不干扰的ES集群的。</p><p><strong>4、discovery.zen.minimum_master_nodes:</strong></p><p>这个是用于集群的分布式决策的最少master机器个数。和常见的分布式协调算法一样，为了避免脑裂现象，建议超过一半的机器，<code>n/2+1</code></p><p><strong>5、discovery.zen.ping.unicast.hosts:</strong></p><p>ES集群的机器列表。注意ES单点不用配置集群中的所有机器列表，像一个连通图一样，只要每台机器配置了其他机器，而这些配置又是互相可以连接的，那ES最终就会发现所有机器，构成集群。如<code>[&#39;111.111.111.0&#39;,&#39;111.111.111.1&#39;,&#39;111.111.111.2&#39;]</code></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Elsearch-关键配置&quot;&gt;&lt;a href=&quot;#Elsearch-关键配置&quot; class=&quot;headerlink&quot; title=&quot;Elsearch 关键配置&quot;&gt;&lt;/a&gt;Elsearch 关键配置&lt;/h1&gt;&lt;h2 id=&quot;关键配置项&quot;&gt;&lt;a href=&quot;#关键配置项&quot; class=&quot;headerlink&quot; title=&quot;关键配置项&quot;&gt;&lt;/a&gt;关键配置项&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;1、索引的shards个数:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;shards的个数，最好是和节点数相关的。理论上对同一个索引，单机上的shards个数最好不要超过两个，这样每个查询尽可能并行。但因为ES中shards的个数是确定了就没办法再调整的，所以如果考虑到数据会高速增长，一开始分配多些也可以。另一个常见思路是按时间纬度（如月）去定义ES索引——因为可以动态调整新加的索引的shards个数。其他的一些情况，比如下面举到的Wetest聚合的例子，因为需要数据尽量地按照渠道切分开，所以定义了很多个shards（200个），但太多的shards通常是不推荐的，ES管理起来也有开销。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、heap内存:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官方建议是可用内存的一半，是通过启动ES的环境中，定义环境变量的方式完成的。如&lt;code&gt;export ES_HEAP_SIZE=10g&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>elsearch 安装sql插件</title>
    <link href="http://blog.golearns.org/2018/09/17/elsearch-%E5%AE%89%E8%A3%85sql%E6%8F%92%E4%BB%B6/"/>
    <id>http://blog.golearns.org/2018/09/17/elsearch-安装sql插件/</id>
    <published>2018-09-17T15:09:23.000Z</published>
    <updated>2018-09-17T15:16:42.439Z</updated>
    
    <content type="html"><![CDATA[<h1 id="elsearch安装sql插件"><a href="#elsearch安装sql插件" class="headerlink" title="elsearch安装sql插件"></a>elsearch安装sql插件</h1><ul><li><p>install</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/5.5.1.0/elasticsearch-sql-5.5.1.0.zip</span><br></pre></td></tr></table></figure></li><li><p>install ui web front-end</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/NLPchina/elasticsearch-sql/releases/download/5.4.1.0/es-sql-site-standalone.zip</span><br><span class="line"></span><br><span class="line">cd site-server</span><br><span class="line">npm install express --save</span><br><span class="line">node node-server.js &amp;</span><br></pre></td></tr></table></figure></li></ul><a id="more"></a><ul><li><p>request web</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://site:8080</span><br><span class="line"></span><br><span class="line">// 修改头部请求链接</span><br><span class="line">http://site:9200</span><br></pre></td></tr></table></figure></li><li><p>输入查询语句通过explain后将代码调整为文档格式后请求搜索</p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;elsearch安装sql插件&quot;&gt;&lt;a href=&quot;#elsearch安装sql插件&quot; class=&quot;headerlink&quot; title=&quot;elsearch安装sql插件&quot;&gt;&lt;/a&gt;elsearch安装sql插件&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;install&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;./bin/elasticsearch-plugin install https://github.com/NLPchina/elasticsearch-sql/releases/download/5.5.1.0/elasticsearch-sql-5.5.1.0.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;install ui web front-end&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://github.com/NLPchina/elasticsearch-sql/releases/download/5.4.1.0/es-sql-site-standalone.zip&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd site-server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install express --save&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;node node-server.js &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>centos7 install elasticHD</title>
    <link href="http://blog.golearns.org/2018/09/17/centos7-install-elasticHD/"/>
    <id>http://blog.golearns.org/2018/09/17/centos7-install-elasticHD/</id>
    <published>2018-09-17T15:08:32.000Z</published>
    <updated>2018-09-17T15:09:15.200Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7-install-elasticHD"><a href="#centos7-install-elasticHD" class="headerlink" title="centos7 install elasticHD"></a>centos7 install elasticHD</h1><ul><li>下载ElasticHD<a href="https://github.com/360EntSecGroup-Skylar/ElasticHD/releases/download/1.4/elasticHD_linux_amd64.zip" target="_blank" rel="noopener">elasticHD_linux_amd64.zip</a></li></ul><h3 id="config"><a href="#config" class="headerlink" title="config"></a>config</h3><pre><code>chmod 0777 elasticHD_linux_amd64.zipunzip elasticHD_linux_amd64.zip# 开启端口9800# 启动./ElasticHD -p 0.0.0.0:9800 &amp;# 访问http://site:9800</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;centos7-install-elasticHD&quot;&gt;&lt;a href=&quot;#centos7-install-elasticHD&quot; class=&quot;headerlink&quot; title=&quot;centos7 install elasticHD&quot;&gt;&lt;/a&gt;centos7 ins
      
    
    </summary>
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/categories/Elasticsearch/"/>
    
    
      <category term="Elasticsearch" scheme="http://blog.golearns.org/tags/Elasticsearch/"/>
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos" scheme="http://blog.golearns.org/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>webrtc服务端搭建</title>
    <link href="http://blog.golearns.org/2018/09/17/webrtc%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%90%AD%E5%BB%BA/"/>
    <id>http://blog.golearns.org/2018/09/17/webrtc服务端搭建/</id>
    <published>2018-09-17T15:07:37.000Z</published>
    <updated>2018-09-17T15:17:02.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="webrtc服务端"><a href="#webrtc服务端" class="headerlink" title="webrtc服务端"></a>webrtc服务端</h1><h2 id="搭建房间服务器"><a href="#搭建房间服务器" class="headerlink" title="搭建房间服务器"></a>搭建房间服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">yum install -y java-1.8.0-openjdk</span><br><span class="line">yum install -y nodejs</span><br><span class="line">yum install python</span><br><span class="line">yum install python-test</span><br><span class="line">git clone  https://github.com/webrtc/apprtc.git</span><br><span class="line">cd apprtc</span><br><span class="line">npm install</span><br><span class="line">npm -g install grunt</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 修改</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz apprtc]# cat src/app_engine/constants.py</span><br><span class="line"><span class="meta">#</span> Copyright 2015 Google Inc. All Rights Reserved.</span><br><span class="line"></span><br><span class="line">"""AppRTC Constants.</span><br><span class="line"></span><br><span class="line">This module contains the constants used in AppRTC Python modules.</span><br><span class="line">"""</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Deprecated domains which we should to redirect to REDIRECT_URL.</span><br><span class="line">REDIRECT_DOMAINS =  [</span><br><span class="line">  'apprtc.appspot.com', 'apprtc.webrtc.org', 'www.appr.tc'</span><br><span class="line">]</span><br><span class="line"><span class="meta">#</span> URL which we should redirect to if matching in REDIRECT_DOMAINS.</span><br><span class="line">REDIRECT_URL = 'https://appr.tc'</span><br><span class="line"></span><br><span class="line">ROOM_MEMCACHE_EXPIRATION_SEC = 60 * 60 * 24</span><br><span class="line">MEMCACHE_RETRY_LIMIT = 100</span><br><span class="line"></span><br><span class="line">LOOPBACK_CLIENT_ID = 'LOOPBACK_CLIENT_ID'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Turn/Stun server override. This allows AppRTC to connect to turn servers</span><br><span class="line"><span class="meta">#</span> directly rather than retrieving them from an ICE server provider.</span><br><span class="line">ICE_SERVER_OVERRIDE = None</span><br><span class="line"><span class="meta">#</span> Enable by uncomment below and comment out above, then specify turn and stun</span><br><span class="line"><span class="meta">#</span> ICE_SERVER_OVERRIDE  = [</span><br><span class="line"><span class="meta">#</span>   &#123;</span><br><span class="line"><span class="meta">#</span>     "urls": [</span><br><span class="line"><span class="meta">#</span>       "turn:hostname/IpToTurnServer:19305?transport=udp",</span><br><span class="line"><span class="meta">#</span>       "turn:hostname/IpToTurnServer:19305?transport=tcp"</span><br><span class="line"><span class="meta">#</span>     ],</span><br><span class="line"><span class="meta">#</span>     "username": "TurnServerUsername",</span><br><span class="line"><span class="meta">#</span>     "credential": "TurnServerCredentials"</span><br><span class="line"><span class="meta">#</span>   &#125;,</span><br><span class="line"><span class="meta">#</span>   &#123;</span><br><span class="line"><span class="meta">#</span>     "urls": [</span><br><span class="line"><span class="meta">#</span>       "stun:hostname/IpToStunServer:19302"</span><br><span class="line"><span class="meta">#</span>     ]</span><br><span class="line"><span class="meta">#</span>   &#125;</span><br><span class="line"><span class="meta">#</span> ]</span><br><span class="line"></span><br><span class="line">TURN_BASE_URL = 'https://webrtc.m2lan.com'</span><br><span class="line">TURN_URL_TEMPLATE = '%s/turn.php?username=%s&amp;key=%s'</span><br><span class="line">CODE_KEY = 'zhangsan'</span><br><span class="line"></span><br><span class="line">ICE_SERVER_BASE_URL = 'https://webrtc.m2lan.com'</span><br><span class="line">ICE_SERVER_URL_TEMPLATE = '%s/iceconfig.php?key=%s'</span><br><span class="line">ICE_SERVER_API_KEY = os.environ.get('ICE_SERVER_API_KEY')</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dictionary keys in the collider instance info constant.</span><br><span class="line">WSS_INSTANCE_HOST_KEY = 'webrtc.m2lan.com:8089'</span><br><span class="line">WSS_INSTANCE_NAME_KEY = 'vm_name'</span><br><span class="line">WSS_INSTANCE_ZONE_KEY = 'zone'</span><br><span class="line">WSS_INSTANCES = [&#123;</span><br><span class="line">    WSS_INSTANCE_HOST_KEY: 'webrtc.m2lan.com:8089',</span><br><span class="line">    WSS_INSTANCE_NAME_KEY: 'wsserver-std',</span><br><span class="line">    WSS_INSTANCE_ZONE_KEY: 'us-central1-a'</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    WSS_INSTANCE_HOST_KEY: 'webrtc.m2lan.com:8089',</span><br><span class="line">    WSS_INSTANCE_NAME_KEY: 'wsserver-std-2',</span><br><span class="line">    WSS_INSTANCE_ZONE_KEY: 'us-central1-f'</span><br><span class="line">&#125;]</span><br><span class="line"></span><br><span class="line">WSS_HOST_PORT_PAIRS = [ins[WSS_INSTANCE_HOST_KEY] for ins in WSS_INSTANCES]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> memcache key for the active collider host.</span><br><span class="line">WSS_HOST_ACTIVE_HOST_KEY = 'wss_host_active_host'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dictionary keys in the collider probing result.</span><br><span class="line">WSS_HOST_IS_UP_KEY = 'is_up'</span><br><span class="line">WSS_HOST_STATUS_CODE_KEY = 'status_code'</span><br><span class="line">WSS_HOST_ERROR_MESSAGE_KEY = 'error_message'</span><br><span class="line"></span><br><span class="line">RESPONSE_ERROR = 'ERROR'</span><br><span class="line">RESPONSE_ROOM_FULL = 'FULL'</span><br><span class="line">RESPONSE_UNKNOWN_ROOM = 'UNKNOWN_ROOM'</span><br><span class="line">RESPONSE_UNKNOWN_CLIENT = 'UNKNOWN_CLIENT'</span><br><span class="line">RESPONSE_DUPLICATE_CLIENT = 'DUPLICATE_CLIENT'</span><br><span class="line">RESPONSE_SUCCESS = 'SUCCESS'</span><br><span class="line">RESPONSE_INVALID_REQUEST = 'INVALID_REQUEST'</span><br><span class="line"></span><br><span class="line">IS_DEV_SERVER = os.environ.get('APPLICATION_ID', '').startswith('dev')</span><br><span class="line"></span><br><span class="line">BIGQUERY_URL = 'https://www.googleapis.com/auth/bigquery'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dataset used in production.</span><br><span class="line">BIGQUERY_DATASET_PROD = 'prod'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Dataset used when running locally.</span><br><span class="line">BIGQUERY_DATASET_LOCAL = 'dev'</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> BigQuery table within the dataset.</span><br><span class="line">BIGQUERY_TABLE = 'analytics'</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>编译</span><br><span class="line">grunt build</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>安装和配置google app engine</span><br><span class="line">wget https://storage.googleapis.com/appengine-sdks/featured/google_appengine_1.9.50.zip</span><br><span class="line">unzip google_appengine_1.9.50.zip</span><br><span class="line"><span class="meta">#</span>编辑/etc/profile</span><br><span class="line">export PATH="$PATH:/root/google_appengine/"</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>运行房间服务器</span><br><span class="line">cd google_appengine/</span><br><span class="line">nohup ./dev_appserver.py /root/apprtc/out/app_engine &amp;</span><br></pre></td></tr></table></figure><h2 id="搭建信令服务器"><a href="#搭建信令服务器" class="headerlink" title="搭建信令服务器"></a>搭建信令服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span>安装golang环境</span><br><span class="line">mkdir -p /root/go/src</span><br><span class="line"><span class="meta">#</span>编辑/etc/profile</span><br><span class="line">export GOPATH=$HOME/go</span><br><span class="line">export GOROOT=/usr/local/go</span><br><span class="line">export PATH=$PATH:$GOROOT/bin</span><br><span class="line">export PATH=$PATH:/$GOPATH/bin</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>拷贝/root/apprtc/src/collider/目录下的三个目录（collider、collidermain、collidertest）复制到/root/goWorkspace/src/目录下</span><br><span class="line">cp -rf /root/apprtc/src/collider/* /root/goWorkspace/src</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编辑修改房间服务器地址</span><br><span class="line">vim /root/go/src/collidermain/main.go</span><br><span class="line">var roomSrv = flag.String("room-server", "https://webrtc.m2lan.com", "The origin of the room server")</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>编辑修改ssl</span><br><span class="line">vim /root/go/src/collider/collider.go</span><br><span class="line"><span class="meta">#</span>将</span><br><span class="line">e = server.ListenAndServeTLS("/cert/cert.pem", "/cert/key.pem")</span><br><span class="line"><span class="meta">#</span>改为</span><br><span class="line">e = server.ListenAndServeTLS("/etc/letsencrypt/live/webrtc.m2lan.com/fullchain.pem", "/etc/letsencrypt/live/webrtc.m2lan.com/privkey.pem")</span><br></pre></td></tr></table></figure><h3 id="编译信令服务器"><a href="#编译信令服务器" class="headerlink" title="编译信令服务器"></a>编译信令服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /root/go/src/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz src]# go get collidermain</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz src]# go install collidermain</span><br></pre></td></tr></table></figure><h3 id="运行信令服务器"><a href="#运行信令服务器" class="headerlink" title="运行信令服务器"></a>运行信令服务器</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd go/bin</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz bin]# nohup ./collidermain -port=8089 -tls=true &amp;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 使用systemd管理</span><br><span class="line"><span class="meta">#</span> 添加/collider/start.sh文件</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# mkdir /collider</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /collider/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz collider]# vim start.sh</span><br><span class="line"><span class="meta">#</span>!/bin/sh -</span><br><span class="line">/root/go/bin/collidermain -port=8089 -tls=true 2&gt;&gt; /collider/collider.log</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz collider]# chmod 744 start.sh</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /lib/systemd/system/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz system]# vim collider.service</span><br><span class="line">[Unit]</span><br><span class="line">Description=AppRTC signalling server (Collider)</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/collider/start.sh</span><br><span class="line">StandardOutput=null</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">Alias=collider.service</span><br><span class="line"><span class="meta">#</span> 启用服务</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# systemctl enable collider.service</span><br><span class="line"><span class="meta">#</span> 运行</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# systemctl start collider.service</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 记录运行时日志</span><br><span class="line"><span class="meta">#</span> 日志每天轮换，10天后删除，日志存放在/collider目录</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /etc/logrotate.d/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz logrotate.d]# vim collider</span><br><span class="line">/collider/collider.log &#123;</span><br><span class="line">    daily</span><br><span class="line">    compress</span><br><span class="line">    copytruncate</span><br><span class="line">    dateext</span><br><span class="line">    missingok</span><br><span class="line">    notifempty</span><br><span class="line">    rotate 10</span><br><span class="line">    sharedscripts</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="搭建STUN-TURN服务器"><a href="#搭建STUN-TURN服务器" class="headerlink" title="搭建STUN/TURN服务器"></a>搭建STUN/TURN服务器</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# wget http://coturn.net/turnserver/v4.5.0.7/turnserver-4.5.0.7-CentOS7.4-x86_64.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# tar xvfz turnserver-4.5.0.7-CentOS7.4-x86_64.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd turnserver-4.5.0.7</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz turnserver-4.5.0.7]# ./install.sh</span><br><span class="line"><span class="meta">#</span>编辑turnserver.conf</span><br><span class="line"><span class="meta">#</span>key码生成</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz turnserver-4.5.0.7]# turnadmin -k -u zhangsan -r north.gov -p zhangsan</span><br><span class="line"><span class="meta">#</span>证书生成</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz etc]# openssl req -x509 -newkey rsa:2048 -keyout /usr/local/etc/turn_server_pkey.pem -out /usr/local/etc/turn_server_cert.pem -days 9999 -nodes</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# vim /etc/turnserver/turnserver.conf</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz etc]# cat /etc/turnserver/turnserver.conf | grep -v "^#" | grep -v '^$'</span><br><span class="line">listening-device=eth0</span><br><span class="line">listening-port=3478</span><br><span class="line">relay-device=eth0</span><br><span class="line">min-port=49152</span><br><span class="line">max-port=65535</span><br><span class="line">Verbose</span><br><span class="line">fingerprint</span><br><span class="line">lt-cred-mech</span><br><span class="line">use-auth-secret</span><br><span class="line">static-auth-secret=zhangsan #此处要和房间服务器配置时constants.py文件中的CODE_KEY保持一致。</span><br><span class="line">user=zhangsan:0x934893f0ea44d4355cbfd48a40ae023c</span><br><span class="line">user=zhangsan:zhangsan</span><br><span class="line">stale-nonce=600</span><br><span class="line">cert=/usr/local/etc/turn_server_cert.pem</span><br><span class="line">pkey=/usr/local/etc/turn_server_pkey.pem</span><br><span class="line">no-stdout-log</span><br><span class="line">syslog</span><br><span class="line">no-loopback-peers</span><br><span class="line">no-multicast-peers</span><br><span class="line">pidfile="/var/run/turnserver/turnserver.pid"</span><br><span class="line">mobility</span><br><span class="line">no-cli</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>运行-r: 外部服务器地址</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# turnserver -V -r 47.88.159.236:3478 -a -o -c /etc/turnserver/turnserver.conf</span><br></pre></td></tr></table></figure><h3 id="创建turn-php和iceconfig-php"><a href="#创建turn-php和iceconfig-php" class="headerlink" title="创建turn.php和iceconfig.php"></a>创建turn.php和iceconfig.php</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/share/nginx/html/turn.php </span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $request_username = $_GET[<span class="string">"username"</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($request_username)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"username == null"</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    $request_key = $_GET[<span class="string">"key"</span>];</span><br><span class="line">    $time_to_live = <span class="number">600</span>;</span><br><span class="line">    $timestamp = time() + $time_to_live;<span class="comment">//失效时间</span></span><br><span class="line">    $response_username = $timestamp.<span class="string">":"</span>.$_GET[<span class="string">"username"</span>];</span><br><span class="line">    $response_key = $request_key;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($response_key)) &#123;</span><br><span class="line">        $response_key = <span class="string">"zhangsan"</span>; <span class="comment">//constants.py中CEOD_KEY  </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $response_password = getSignature($response_username, $response_key);  </span><br><span class="line"></span><br><span class="line">    $jsonObj = <span class="keyword">new</span> Response();</span><br><span class="line">    $jsonObj-&gt;username = $response_username;</span><br><span class="line">    $jsonObj-&gt;password = $response_password;</span><br><span class="line">    $jsonObj-&gt;ttl = <span class="number">86400</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//此处需配置自己的服务器</span></span><br><span class="line">    $jsonObj-&gt;uris= <span class="keyword">array</span>(<span class="string">"stun:webrtc.m2lan.com:3478"</span>,<span class="string">"turn:webrtc.m2lan.com:3478?transport=udp"</span>,<span class="string">"turn:webrtc.m2lan.com?transport=tcp"</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($jsonObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用HMAC-SHA1算法生成签名值</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $str 源串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> $key 密钥</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 签名值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getSignature</span><span class="params">($str, $key)</span> </span>&#123;</span><br><span class="line">        $signature = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (function_exists(<span class="string">'hash_hmac'</span>)) &#123;</span><br><span class="line">            $signature = base64_encode(hash_hmac(<span class="string">"sha1"</span>, $str, $key, <span class="keyword">true</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $blocksize = <span class="number">64</span>;</span><br><span class="line">            $hashfunc = <span class="string">'sha1'</span>;</span><br><span class="line">            <span class="keyword">if</span> (strlen($key) &gt; $blocksize) &#123;</span><br><span class="line">                $key = pack(<span class="string">'H*'</span>, $hashfunc($key));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $key = str_pad($key, $blocksize, chr(<span class="number">0x00</span>));</span><br><span class="line">            $ipad = str_repeat(chr(<span class="number">0x36</span>), $blocksize);</span><br><span class="line">            $opad = str_repeat(chr(<span class="number">0x5c</span>), $blocksize);</span><br><span class="line">            $hmac = pack(</span><br><span class="line">                <span class="string">'H*'</span>, $hashfunc(($key ^ $opad). pack(<span class="string">'H*'</span>, $hashfunc(($key ^ $ipad) . $str)))</span><br><span class="line">            );</span><br><span class="line">            $signature = base64_encode($hmac);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $signature;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $username = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $password = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $ttl = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $uris = <span class="keyword">array</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/share/nginx/html/iceconfig.php</span></span><br><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">    $request_username = <span class="string">"zhangsan"</span>;  <span class="comment">//配置成自己的turn服务器用户名</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($request_username)) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"username == null"</span>;</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">    $request_key = <span class="string">"zhangsan"</span>;  <span class="comment">//配置成自己的turn服务器密码</span></span><br><span class="line">    $time_to_live = <span class="number">600</span>;</span><br><span class="line">    $timestamp = time() + $time_to_live;<span class="comment">//失效时间</span></span><br><span class="line">    $response_username = $timestamp.<span class="string">":"</span>.$_GET[<span class="string">"username"</span>];</span><br><span class="line">    $response_key = $request_key;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($response_key)) &#123;</span><br><span class="line">        $response_key = <span class="string">"zhangsan"</span>;<span class="comment">//constants.py中CEOD_KEY</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $response_password = getSignature($response_username, $response_key);</span><br><span class="line"></span><br><span class="line">    $arrayObj = <span class="keyword">array</span>();</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'username'</span>] = $response_username;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'credential'</span>] = $response_password;</span><br><span class="line">    <span class="comment">//配置成自己的stun/turn服务器</span></span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'urls'</span>][<span class="number">0</span>] = <span class="string">"stun:webrtc.m2lan.com:3478"</span>;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'urls'</span>][<span class="number">1</span>] = <span class="string">"turn:webrtc.m2lan.com:3478?transport=tcp"</span>;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'uris'</span>][<span class="number">0</span>] = <span class="string">"stun:webrtc.m2lan.com:3478"</span>;</span><br><span class="line">    $arrayObj[<span class="number">0</span>][<span class="string">'uris'</span>][<span class="number">1</span>] = <span class="string">"turn:webrtc.m2lan.com:3478?transport=tcp"</span>;</span><br><span class="line">    $jsonObj = <span class="keyword">new</span> Response();</span><br><span class="line">    $jsonObj-&gt;lifetimeDuration = <span class="string">"300.000s"</span>;</span><br><span class="line">    $jsonObj-&gt;iceServers = $arrayObj;</span><br><span class="line">    <span class="keyword">echo</span> json_encode($jsonObj);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 使用HMAC-SHA1算法生成签名值</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> $str 源串</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> $key 密钥</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 签名值</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getSignature</span><span class="params">($str, $key)</span> </span>&#123;</span><br><span class="line">        $signature = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (function_exists(<span class="string">'hash_hmac'</span>)) &#123;</span><br><span class="line">            $signature = base64_encode(hash_hmac(<span class="string">"sha1"</span>, $str, $key, <span class="keyword">true</span>));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $blocksize = <span class="number">64</span>;</span><br><span class="line">            hashfunc = <span class="string">'sha1'</span>;</span><br><span class="line">            <span class="keyword">if</span> (strlen($key) &gt; $blocksize) &#123;</span><br><span class="line">                $key = pack(<span class="string">'H*'</span>, $hashfunc($key));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            $key = str_pad($key, $blocksize, chr(<span class="number">0x00</span>));</span><br><span class="line">            $ipad = str_repeat(chr(<span class="number">0x36</span>), $blocksize);</span><br><span class="line">            $opad = str_repeat(chr(<span class="number">0x5c</span>), $blocksize);</span><br><span class="line">            $hmac = pack(<span class="string">'H*'</span>, $hashfunc(($key ^ $opad) . pack(<span class="string">'H*'</span>, $hashfunc(($key ^ $ipad) . $str))));</span><br><span class="line">            $signature = base64_encode($hmac);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $signature;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Response</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> $lifetimeDuration = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">public</span> $iceServers = <span class="keyword">array</span>(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="运行过程中的问题"><a href="#运行过程中的问题" class="headerlink" title="运行过程中的问题"></a>运行过程中的问题</h2><ul><li>Failed to start signaling: Failed to execute ‘pushState’ on ‘History’: A history state object with URL ‘<a href="http://192.168.6.54/r/198676628" target="_blank" rel="noopener">http://192.168.6.54/r/198676628</a>’ cannot be created in a document with origin ‘<a href="https://192.168.6.54/" target="_blank" rel="noopener">https://192.168.6.54</a>’ and URL ‘<a href="https://192.168.6.54/" target="_blank" rel="noopener">https://192.168.6.54/</a></li></ul><blockquote><p><strong>解决方法1：</strong> 房间服务器编译完成后，在/root/apprtc/out/app_engine/js/apprtc.debug.js文件中找到window.history.pushState({‘roomId’: roomId, ‘roomLink’: roomLink}, roomId, roomLink)，把这句话注释掉，重新运行即可。（如果重新编译，需要重新修改）</p><p><strong>解决方法2：</strong> 在/root/apprtc/src/web_app/js/appcontroller.js文件中找到window.history.pushState({‘roomId’: roomId, ‘roomLink’: roomLink}, roomId, roomLink)，把这句话注释掉，然后重新编译，重新运行房间服务器即可。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;webrtc服务端&quot;&gt;&lt;a href=&quot;#webrtc服务端&quot; class=&quot;headerlink&quot; title=&quot;webrtc服务端&quot;&gt;&lt;/a&gt;webrtc服务端&lt;/h1&gt;&lt;h2 id=&quot;搭建房间服务器&quot;&gt;&lt;a href=&quot;#搭建房间服务器&quot; class=&quot;headerlink&quot; title=&quot;搭建房间服务器&quot;&gt;&lt;/a&gt;搭建房间服务器&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install -y java-1.8.0-openjdk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install -y nodejs&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install python&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;yum install python-test&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git clone  https://github.com/webrtc/apprtc.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd apprtc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm install&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;npm -g install grunt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="webrtc" scheme="http://blog.golearns.org/categories/webrtc/"/>
    
    
      <category term="Linux" scheme="http://blog.golearns.org/tags/Linux/"/>
    
      <category term="Centos7" scheme="http://blog.golearns.org/tags/Centos7/"/>
    
      <category term="webrtc" scheme="http://blog.golearns.org/tags/webrtc/"/>
    
  </entry>
  
  <entry>
    <title>thinkphp-oauth2</title>
    <link href="http://blog.golearns.org/2018/09/17/thinkphp-oauth2/"/>
    <id>http://blog.golearns.org/2018/09/17/thinkphp-oauth2/</id>
    <published>2018-09-17T15:05:45.000Z</published>
    <updated>2018-09-17T15:25:01.494Z</updated>
    
    <content type="html"><![CDATA[<h1 id="OAuth2-Server-PHP"><a href="#OAuth2-Server-PHP" class="headerlink" title="OAuth2 Server PHP"></a>OAuth2 Server PHP</h1><p><a href="http://bshaffer.github.io/oauth2-server-php-docs" target="_blank" rel="noopener">oauth2-server-php-docs</a></p><h3 id="获取OAuth2"><a href="#获取OAuth2" class="headerlink" title="获取OAuth2"></a>获取OAuth2</h3><pre><code>composer require bshaffer/oauth2-server-php &quot;^1.10&quot;</code></pre><h3 id="Authorized认证方式"><a href="#Authorized认证方式" class="headerlink" title="Authorized认证方式"></a>Authorized认证方式</h3><blockquote><p><a href="http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz" target="_blank" rel="noopener">http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz</a></p><p><a href="http://swoole-chat.com/index/index/testToken" target="_blank" rel="noopener">http://swoole-chat.com/index/index/testToken</a> form-data: [grant_type: authorization_code, code: authorizedCode]</p></blockquote><pre><code>use utils\Crypt;use OAuth2\Autoloader;use OAuth2\Server;use OAuth2\GrantType\AuthorizationCode;use OAuth2\GrantType\ClientCredentials;use OAuth2\GrantType\UserCredentials;use OAuth2\Request;use OAuth2\Response;use OAuth2\Storage\Redis as StorageRedis;use cache\Redis;header(&apos;Access-Control-Allow-Origin:*&apos;);class Index {    protected $server;    public function __construct() {        // 使用PDO方式存储        // $storage = new Pdo([&apos;dsn&apos; =&gt; &apos;mysql:dbname=oauth;host=192.168.3.188&apos;, &apos;username&apos; =&gt; &apos;root&apos;, &apos;password&apos; =&gt; &apos;123456&apos;]);        // 使用Redis方式存储        $redis = new Redis(config(&apos;redis&apos;));        $storage = new StorageRedis($redis);        // Authorized example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz        $storage-&gt;setClientDetails(&apos;ios&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;android&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;phpweb&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $server = new Server($storage);        // 授权码        $server-&gt;addGrantType(new AuthorizationCode($storage));        $this-&gt;server = $server;    }    /**     * Authorized认证     * example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz     * @return bool|string     */    public function testAuthorize() {        $request = Request::createFromGlobals();        $response = new Response();        if (!$this-&gt;server-&gt;validateAuthorizeRequest($request, $response)) {            $response-&gt;send();            die;        }        if (empty($_POST)) {            return &apos;                &lt;form method=&quot;post&quot;&gt;                  &lt;label&gt;是否对testclient用户授权?&lt;/label&gt;&lt;br /&gt;                  &lt;input type=&quot;submit&quot; name=&quot;authorized&quot; value=&quot;yes&quot;&gt;                  &lt;input type=&quot;submit&quot; name=&quot;authorized&quot; value=&quot;no&quot;&gt;                &lt;/form&gt;            &apos;;        }        $is_authorized = ($_POST[&apos;authorized&apos;] === &apos;yes&apos;);        $this-&gt;server-&gt;handleAuthorizeRequest($request, $response, $is_authorized, 1);        if ($is_authorized) {            $code = substr($response-&gt;getHttpHeader(&apos;Location&apos;), strpos($response-&gt;getHttpHeader(&apos;Location&apos;), &apos;code=&apos;) + 5, 40);            return $code;        }        return &apos;授权失败&apos;;    }    /**     * 获取token     * @return [type] [description]     */    public function testToken() {        return $this-&gt;server-&gt;handleTokenRequest(Request::createFromGlobals())-&gt;send();    }    /**     * 请求API     * @return [type] [description]     */    public function testApi() {        $request = Request::createFromGlobals();        if (!$this-&gt;server-&gt;verifyResourceRequest($request)) {            return $this-&gt;server-&gt;getResponse()-&gt;send();        }        $result = $this-&gt;server-&gt;getAccessTokenData($request);        return json_encode([&apos;success&apos; =&gt; true, &apos;message&apos; =&gt; &apos;你可以访问API了&apos;, &apos;userId&apos; =&gt; $result[&apos;user_id&apos;]]);    }}</code></pre><a id="more"></a><h3 id="Password认证方式"><a href="#Password认证方式" class="headerlink" title="Password认证方式"></a>Password认证方式</h3><blockquote><p>curl -u phpweb:123456 <a href="http://swoole-chat.com/token" target="_blank" rel="noopener">http://swoole-chat.com/token</a> -d ‘grant_type=password&amp;username=zhangsan&amp;password=123456</p></blockquote><pre><code>use utils\Crypt;use OAuth2\Autoloader;use OAuth2\Server;use OAuth2\GrantType\AuthorizationCode;use OAuth2\GrantType\ClientCredentials;use OAuth2\GrantType\UserCredentials;use OAuth2\Request;use OAuth2\Response;use OAuth2\Storage\Redis as StorageRedis;use cache\Redis;header(&apos;Access-Control-Allow-Origin:*&apos;);class Index {    protected $server;    public function __construct() {        // 使用PDO方式存储        // $storage = new Pdo([&apos;dsn&apos; =&gt; &apos;mysql:dbname=oauth;host=192.168.3.188&apos;, &apos;username&apos; =&gt; &apos;root&apos;, &apos;password&apos; =&gt; &apos;123456&apos;]);        // 使用Redis方式存储        $redis = new Redis(config(&apos;redis&apos;));        $storage = new StorageRedis($redis);        // Authorized example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;client_id=phpweb&amp;state=xyz        $storage-&gt;setClientDetails(&apos;ios&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;android&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;phpweb&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password&apos;, &apos;read write&apos;);        // Password example: curl -u phpweb:123456 http://swoole-chat.com/token -d &apos;grant_type=password&amp;username=zhangsan&amp;password=123456        $server = new Server($storage);        // 用户凭据        $server-&gt;addGrantType(new UserCredentials($storage));        $this-&gt;server = $server;    }    /**     * 获取token     * @return [type] [description]     */    public function testToken() {        $_POST[&apos;username&apos;] = 3;        $request = Request::createFromGlobals();        return $this-&gt;server-&gt;handleTokenRequest($request)-&gt;send();    }    /**     * 请求API     * @return [type] [description]     */    public function testApi() {        $request = Request::createFromGlobals();        if (!$this-&gt;server-&gt;verifyResourceRequest($request)) {            return $this-&gt;server-&gt;getResponse()-&gt;send();        }        $result = $this-&gt;server-&gt;getAccessTokenData($request);        return json_encode([&apos;success&apos; =&gt; true, &apos;message&apos; =&gt; &apos;你可以访问API了&apos;, &apos;userId&apos; =&gt; $result[&apos;user_id&apos;]]);    }}</code></pre><h3 id="令牌刷新"><a href="#令牌刷新" class="headerlink" title="令牌刷新"></a>令牌刷新</h3><ul><li><p>controller</p><pre><code>use OAuth2\GrantType\RefreshToken;use OAuth2\Scope;use OAuth2\ScopeTest;use utils\Crypt;use OAuth2\Server;use OAuth2\GrantType\AuthorizationCode;use OAuth2\GrantType\ClientCredentials;use OAuth2\GrantType\UserCredentials;use OAuth2\Request;use OAuth2\Response;use OAuth2\Storage\Redis as StorageRedis;use cache\Redis;header(&apos;Access-Control-Allow-Origin:*&apos;);class Index {    protected $server;    public function __construct() {        // Autoloader::register();        // $storage = new Pdo([&apos;dsn&apos; =&gt; &apos;mysql:dbname=oauth;host=192.168.3.188&apos;, &apos;username&apos; =&gt; &apos;root&apos;, &apos;password&apos; =&gt; &apos;123456&apos;]);        $redis = new Redis(config(&apos;redis&apos;));        $storage = new StorageRedis($redis);        $storage-&gt;setClientDetails(&apos;ios&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password refresh_token&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;android&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password refresh_token&apos;, &apos;read write&apos;);        $storage-&gt;setClientDetails(&apos;phpweb&apos;, &apos;123456&apos;, &apos;http://swoole-chat.com&apos;, &apos;authorization_code password refresh_token&apos;, &apos;read write&apos;);        // 刷新令牌 example: curl -u phpweb:123456 http://swoole-chat.com/index/index/testToken -d &apos;grant_type=refresh_token&amp;refresh_token=xxxxxx&apos;        $server = new Server($storage, [            &apos;always_issue_new_refresh_token&apos; =&gt; true,            &apos;refresh_token_lifetime&apos; =&gt; 1209600 // 14天        ]);        // 用户凭据        $server-&gt;addGrantType(new UserCredentials($storage));        // 令牌刷新        $server-&gt;addGrantType(new RefreshToken($storage));        $this-&gt;server = $server;    }    /**     * 获取token     * @return [type] [description]     */    public function testToken() {        // 校验用户登录信息是否正确，更改username为用户ID来验证请求信息        $_POST[&apos;username&apos;] = 3;        $request = Request::createFromGlobals();        return $this-&gt;server-&gt;handleTokenRequest($request)-&gt;send();    }    /**     * 请求API     * @return [type] [description]     */    public function testApi() {        $request = Request::createFromGlobals();        if (!$this-&gt;server-&gt;verifyResourceRequest($request)) {            return $this-&gt;server-&gt;getResponse()-&gt;send();        }        $result = $this-&gt;server-&gt;getAccessTokenData($request);        return json_encode([&apos;success&apos; =&gt; true, &apos;message&apos; =&gt; &apos;你可以访问API了&apos;, &apos;userId&apos; =&gt; $result[&apos;user_id&apos;]]);    }}</code></pre></li><li><p>获取访问令牌</p><pre><code>curl -u phpweb:123456 http://swoole-chat.com/index/index/testToken -d &apos;grant_type=password&amp;username=tianqi&amp;password=123456&apos;// result:{    &quot;access_token&quot;:&quot;2fc621cf037d7906a2bf037d62f2fe286c83bdab&quot;,    &quot;expires_in&quot;:3600,    &quot;token_type&quot;:&quot;Bearer&quot;,    &quot;scope&quot;:null,    &quot;refresh_token&quot;:&quot;745e6207af4b5ec88c44f411ff736c631ffd59ed&quot;}</code></pre></li><li><p>拿到上面的refresh_token,请求刷新令牌</p><pre><code>curl -u phpweb:123456 http://swoole-chat.com/index/index/testToken -d &apos;grant_type=refresh_token&amp;refresh_token=745e6207af4b5ec88c44f411ff736c631ffd59ed&apos;// result:{     &quot;access_token&quot;:&quot;73c5382acdc41220f1b40a660a2531f40153f5d8&quot;,     &quot;expires_in&quot;:3600,     &quot;token_type&quot;:&quot;Bearer&quot;,     &quot;scope&quot;:null}</code></pre></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;OAuth2-Server-PHP&quot;&gt;&lt;a href=&quot;#OAuth2-Server-PHP&quot; class=&quot;headerlink&quot; title=&quot;OAuth2 Server PHP&quot;&gt;&lt;/a&gt;OAuth2 Server PHP&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://bshaffer.github.io/oauth2-server-php-docs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;oauth2-server-php-docs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;获取OAuth2&quot;&gt;&lt;a href=&quot;#获取OAuth2&quot; class=&quot;headerlink&quot; title=&quot;获取OAuth2&quot;&gt;&lt;/a&gt;获取OAuth2&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;composer require bshaffer/oauth2-server-php &amp;quot;^1.10&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&quot;Authorized认证方式&quot;&gt;&lt;a href=&quot;#Authorized认证方式&quot; class=&quot;headerlink&quot; title=&quot;Authorized认证方式&quot;&gt;&lt;/a&gt;Authorized认证方式&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://swoole-chat.com/index/index/testToken&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://swoole-chat.com/index/index/testToken&lt;/a&gt; form-data: [grant_type: authorization_code, code: authorizedCode]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;use utils\Crypt;
use OAuth2\Autoloader;
use OAuth2\Server;
use OAuth2\GrantType\AuthorizationCode;
use OAuth2\GrantType\ClientCredentials;
use OAuth2\GrantType\UserCredentials;
use OAuth2\Request;
use OAuth2\Response;
use OAuth2\Storage\Redis as StorageRedis;
use cache\Redis;

header(&amp;apos;Access-Control-Allow-Origin:*&amp;apos;);

class Index {

    protected $server;

    public function __construct() {

        // 使用PDO方式存储
        // $storage = new Pdo([&amp;apos;dsn&amp;apos; =&amp;gt; &amp;apos;mysql:dbname=oauth;host=192.168.3.188&amp;apos;, &amp;apos;username&amp;apos; =&amp;gt; &amp;apos;root&amp;apos;, &amp;apos;password&amp;apos; =&amp;gt; &amp;apos;123456&amp;apos;]);

        // 使用Redis方式存储
        $redis = new Redis(config(&amp;apos;redis&amp;apos;));

        $storage = new StorageRedis($redis);

        // Authorized example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz
        $storage-&amp;gt;setClientDetails(&amp;apos;ios&amp;apos;, &amp;apos;123456&amp;apos;, &amp;apos;http://swoole-chat.com&amp;apos;, &amp;apos;authorization_code password&amp;apos;, &amp;apos;read write&amp;apos;);
        $storage-&amp;gt;setClientDetails(&amp;apos;android&amp;apos;, &amp;apos;123456&amp;apos;, &amp;apos;http://swoole-chat.com&amp;apos;, &amp;apos;authorization_code password&amp;apos;, &amp;apos;read write&amp;apos;);
        $storage-&amp;gt;setClientDetails(&amp;apos;phpweb&amp;apos;, &amp;apos;123456&amp;apos;, &amp;apos;http://swoole-chat.com&amp;apos;, &amp;apos;authorization_code password&amp;apos;, &amp;apos;read write&amp;apos;);

        $server = new Server($storage);

        // 授权码
        $server-&amp;gt;addGrantType(new AuthorizationCode($storage));

        $this-&amp;gt;server = $server;
    }

    /**
     * Authorized认证
     * example: http://swoole-chat.com/index/index/testAuthorize?response_type=code&amp;amp;client_id=phpweb&amp;amp;state=xyz
     * @return bool|string
     */
    public function testAuthorize() {
        $request = Request::createFromGlobals();
        $response = new Response();

        if (!$this-&amp;gt;server-&amp;gt;validateAuthorizeRequest($request, $response)) {
            $response-&amp;gt;send();
            die;
        }

        if (empty($_POST)) {
            return &amp;apos;
                &amp;lt;form method=&amp;quot;post&amp;quot;&amp;gt;
                  &amp;lt;label&amp;gt;是否对testclient用户授权?&amp;lt;/label&amp;gt;&amp;lt;br /&amp;gt;
                  &amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;authorized&amp;quot; value=&amp;quot;yes&amp;quot;&amp;gt;
                  &amp;lt;input type=&amp;quot;submit&amp;quot; name=&amp;quot;authorized&amp;quot; value=&amp;quot;no&amp;quot;&amp;gt;
                &amp;lt;/form&amp;gt;
            &amp;apos;;
        }

        $is_authorized = ($_POST[&amp;apos;authorized&amp;apos;] === &amp;apos;yes&amp;apos;);
        $this-&amp;gt;server-&amp;gt;handleAuthorizeRequest($request, $response, $is_authorized, 1);

        if ($is_authorized) {
            $code = substr($response-&amp;gt;getHttpHeader(&amp;apos;Location&amp;apos;), strpos($response-&amp;gt;getHttpHeader(&amp;apos;Location&amp;apos;), &amp;apos;code=&amp;apos;) + 5, 40);
            return $code;
        }

        return &amp;apos;授权失败&amp;apos;;
    }

    /**
     * 获取token
     * @return [type] [description]
     */
    public function testToken() {
        return $this-&amp;gt;server-&amp;gt;handleTokenRequest(Request::createFromGlobals())-&amp;gt;send();
    }

    /**
     * 请求API
     * @return [type] [description]
     */
    public function testApi() {
        $request = Request::createFromGlobals();

        if (!$this-&amp;gt;server-&amp;gt;verifyResourceRequest($request)) {
            return $this-&amp;gt;server-&amp;gt;getResponse()-&amp;gt;send();
        }

        $result = $this-&amp;gt;server-&amp;gt;getAccessTokenData($request);

        return json_encode([&amp;apos;success&amp;apos; =&amp;gt; true, &amp;apos;message&amp;apos; =&amp;gt; &amp;apos;你可以访问API了&amp;apos;, &amp;apos;userId&amp;apos; =&amp;gt; $result[&amp;apos;user_id&amp;apos;]]);
    }
}
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/categories/thinkphp5/"/>
    
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/tags/thinkphp5/"/>
    
      <category term="oauth2" scheme="http://blog.golearns.org/tags/oauth2/"/>
    
  </entry>
  
  <entry>
    <title>nginx thinkphp5配置</title>
    <link href="http://blog.golearns.org/2018/09/17/nginx-thinkphp5%E9%85%8D%E7%BD%AE/"/>
    <id>http://blog.golearns.org/2018/09/17/nginx-thinkphp5配置/</id>
    <published>2018-09-17T15:04:22.000Z</published>
    <updated>2018-09-17T15:17:53.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx-thinkphp5-config"><a href="#nginx-thinkphp5-config" class="headerlink" title="nginx thinkphp5 config"></a>nginx thinkphp5 config</h1><h3 id="新建think5-conf"><a href="#新建think5-conf" class="headerlink" title="新建think5.conf"></a>新建think5.conf</h3><pre><code>server {    listen       80;    server_name  think5.com;    index index.html index.php;    root /usr/share/nginx/html/think5/public;    set $basedir &quot;open_basedir=/usr/share/nginx/html/think5/:/tmp/:/proc/&quot;;    #charset koi8-r;    #access_log  /var/log/nginx/host.access.log  main;    location / {    if (!-e $request_filename) {        rewrite ^(.*)$ /index.php?s=/$1 last;        break;    }    }    #error_page  404              /404.html;    # redirect server error pages to the static page /50x.html    #    #error_page   500 502 503 504  /50x.html;    #location = /50x.html {    #    root   /usr/share/nginx/html;    #}    location ~ \.php$ {        try_files $uri =404;        fastcgi_pass 127.0.0.1:9000;        fastcgi_index index.php;        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;        include fastcgi_params;    }   }</code></pre><a id="more"></a><h3 id="fastcgi-params配置"><a href="#fastcgi-params配置" class="headerlink" title="fastcgi_params配置"></a>fastcgi_params配置</h3><pre><code>fastcgi_param  PHP_ADMIN_VALUE &quot;open_basedir=$document_root/:/tmp/:/proc/&quot;;fastcgi_param  PHP_ADMIN_VALUE $basedir if_not_empty;</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx-thinkphp5-config&quot;&gt;&lt;a href=&quot;#nginx-thinkphp5-config&quot; class=&quot;headerlink&quot; title=&quot;nginx thinkphp5 config&quot;&gt;&lt;/a&gt;nginx thinkphp5 config&lt;/h1&gt;&lt;h3 id=&quot;新建think5-conf&quot;&gt;&lt;a href=&quot;#新建think5-conf&quot; class=&quot;headerlink&quot; title=&quot;新建think5.conf&quot;&gt;&lt;/a&gt;新建think5.conf&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;server {
    listen       80;
    server_name  think5.com;
    index index.html index.php;
    root /usr/share/nginx/html/think5/public;

    set $basedir &amp;quot;open_basedir=/usr/share/nginx/html/think5/:/tmp/:/proc/&amp;quot;;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
    if (!-e $request_filename) {
        rewrite ^(.*)$ /index.php?s=/$1 last;
        break;
    }
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass 127.0.0.1:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
    }   
}
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/categories/thinkphp5/"/>
    
    
      <category term="thinkphp5" scheme="http://blog.golearns.org/tags/thinkphp5/"/>
    
      <category term="Nginx" scheme="http://blog.golearns.org/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>jks转pem</title>
    <link href="http://blog.golearns.org/2018/09/17/jks%E8%BD%ACpem/"/>
    <id>http://blog.golearns.org/2018/09/17/jks转pem/</id>
    <published>2018-09-17T15:02:45.000Z</published>
    <updated>2018-09-17T15:03:03.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jks转pem"><a href="#jks转pem" class="headerlink" title="jks转pem"></a>jks转pem</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keytool -importkeystore -srckeystore test.jks -destkeystore test.p12 -srcstoretype jks -deststoretype pkcs12</span><br><span class="line"></span><br><span class="line">openssl pkcs12 -in test.p12 -out test.pem</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;jks转pem&quot;&gt;&lt;a href=&quot;#jks转pem&quot; class=&quot;headerlink&quot; title=&quot;jks转pem&quot;&gt;&lt;/a&gt;jks转pem&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="jks" scheme="http://blog.golearns.org/categories/jks/"/>
    
    
      <category term="jks" scheme="http://blog.golearns.org/tags/jks/"/>
    
      <category term="pem" scheme="http://blog.golearns.org/tags/pem/"/>
    
  </entry>
  
  <entry>
    <title>janus webrtc网关</title>
    <link href="http://blog.golearns.org/2018/09/17/janus-webrtc%E7%BD%91%E5%85%B3/"/>
    <id>http://blog.golearns.org/2018/09/17/janus-webrtc网关/</id>
    <published>2018-09-17T15:02:07.000Z</published>
    <updated>2018-09-17T15:18:02.614Z</updated>
    
    <content type="html"><![CDATA[<h1 id="janus-webrtc-网关服务器"><a href="#janus-webrtc-网关服务器" class="headerlink" title="janus webrtc 网关服务器"></a>janus webrtc 网关服务器</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">yum install libmicrohttpd-devel jansson-devel libnice-devel \</span><br><span class="line">   openssl-devel libsrtp-devel sofia-sip-devel glib-devel \</span><br><span class="line">   opus-devel libogg-devel libcurl-devel lua-devel \</span><br><span class="line">   pkgconfig gengetopt libtool autoconf automake</span><br><span class="line">   </span><br><span class="line"><span class="meta">#</span>如果出现No package sofia-sip-devel available</span><br><span class="line"><span class="meta">#</span>下载地址</span><br><span class="line">https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/</span><br><span class="line">wget https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/sofia-sip-1.12.11.tar.gz/download</span><br><span class="line"></span><br><span class="line">tar xzvf download</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="安装安装-libsrtp"><a href="#安装安装-libsrtp" class="headerlink" title="安装安装 libsrtp"></a>安装安装 libsrtp</h2><blockquote><p>Janus至少需要version1.5以上的libsrtp，如果已经安装需要先卸载后再安装</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# yum remove libsrtp</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# wget https://github.com/cisco/libsrtp/archive/v2.2.0.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# tar xfv v2.2.0.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd libsrtp-2.2.0/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libsrtp-2.2.0]# ./configure --prefix=/usr --enable-openssl</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libsrtp-2.2.0]# make shared_library</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libsrtp-2.2.0]# make install</span><br></pre></td></tr></table></figure><h2 id="安装websocket"><a href="#安装websocket" class="headerlink" title="安装websocket"></a>安装websocket</h2><blockquote><p>janus支持websocket是可选的，如果不安装，编译janus时默认不支持websocket链接请求</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# git clone https://github.com/warmcat/libwebsockets.git</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd libwebsockets/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libwebsockets]# mkdir build</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> centos install cmake</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# wget  https://cmake.org/files/v3.3/cmake-3.3.2.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# tar xzvf cmake-3.3.2.tar.gz</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd cmake-3.3.2</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz cmake-3.3.2]# ./bootstrap</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz cmake-3.3.2]# gmake</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz cmake-3.3.2]# make install</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 切换到libwebsockets/build</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz libwebsockets]# cd build/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz build]# cmake -DLWS_MAX_SMP=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" ..</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz build]# make</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz build]# make install</span><br></pre></td></tr></table></figure><h2 id="编译安装janus"><a href="#编译安装janus" class="headerlink" title="编译安装janus"></a>编译安装janus</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# git clone https://github.com/meetecho/janus-gateway.git</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd janus-gateway/</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# sh autogen.sh</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# ./configure --prefix=/opt/janus --enable-websockets --enable-docs</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# make</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# make install</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus-gateway]# make configs</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 启动janus报错</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# /opt/janus/bin/janus </span><br><span class="line">/opt/janus/bin/janus: error while loading shared libraries: libsrtp2.so.1: cannot open shared object file: No such file or directory</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 查看libsrtp2.so.1所在目录</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz janus]# whereis libsrtp2.so.1</span><br><span class="line">libsrtp2.so: /usr/lib/libsrtp2.so /usr/lib/libsrtp2.so.1</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cd /etc/ld.so.conf.d/</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 添加whatever.conf文件</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ld.so.conf.d]# vim whatever.conf</span><br><span class="line">/usr/lib</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 更新配置</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# ldconfig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 再次启动janus报以下错误</span><br><span class="line">[ERR] [plugins/janus_lua.c:janus_lua_init:1155] Error loading Lua script /opt/janus/share/janus/lua/echotest.lua: /opt/janus/share/janus/lua/echotest.lua:6: module 'json' not found:</span><br><span class="line">no field package.preload['json']</span><br><span class="line">no file './json.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/json.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/json/init.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/json.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/json/init.lua'</span><br><span class="line">no file '/opt/janus/share/janus/lua/json.lua'</span><br><span class="line">no file './json.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/json.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/loadall.so'</span><br><span class="line">[WARN] The 'janus.plugin.lua' plugin could not be initialized</span><br><span class="line"></span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# yum install -y ncurses-devel</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# yum install lua-json</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 重新启动报</span><br><span class="line">[ERR] [plugins/janus_lua.c:janus_lua_init:1155] Error loading Lua script /opt/janus/share/janus/lua/echotest.lua: /opt/janus/share/janus/lua/echotest.lua:12: module 'ansicolors' not found:</span><br><span class="line">no field package.preload['ansicolors']</span><br><span class="line">no file './ansicolors.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/ansicolors.lua'</span><br><span class="line">no file '/usr/share/lua/5.1/ansicolors/init.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/ansicolors.lua'</span><br><span class="line">no file '/usr/lib64/lua/5.1/ansicolors/init.lua'</span><br><span class="line">no file '/opt/janus/share/janus/lua/ansicolors.lua'</span><br><span class="line">no file './ansicolors.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/ansicolors.so'</span><br><span class="line">no file '/usr/lib64/lua/5.1/loadall.so'</span><br><span class="line">[WARN] The 'janus.plugin.lua' plugin could not be initialized</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 新建color.lua文件</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# cat color.lua </span><br><span class="line">local colors = require 'ansicolors'</span><br><span class="line">print(colors('%&#123;red&#125;hello'))</span><br><span class="line">print(colors('%&#123;redbg&#125;hello%&#123;reset&#125;'))</span><br><span class="line">print(colors('%&#123;bright red underline&#125;hello'))</span><br><span class="line"></span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# lua color.lua </span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line">hello</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 再次运行</span><br><span class="line">[root@izt4n3cqwumhn3nkbr5oxxz ~]# /opt/janus/bin/janus</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;janus-webrtc-网关服务器&quot;&gt;&lt;a href=&quot;#janus-webrtc-网关服务器&quot; class=&quot;headerlink&quot; title=&quot;janus webrtc 网关服务器&quot;&gt;&lt;/a&gt;janus webrtc 网关服务器&lt;/h1&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install libmicrohttpd-devel jansson-devel libnice-devel \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   openssl-devel libsrtp-devel sofia-sip-devel glib-devel \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   opus-devel libogg-devel libcurl-devel lua-devel \&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   pkgconfig gengetopt libtool autoconf automake&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;如果出现No package sofia-sip-devel available&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;下载地址&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;wget https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/sofia-sip-1.12.11.tar.gz/download&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;tar xzvf download&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./configure&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;make &amp;amp;&amp;amp; make install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="webrtc" scheme="http://blog.golearns.org/categories/webrtc/"/>
    
    
      <category term="webrt" scheme="http://blog.golearns.org/tags/webrt/"/>
    
      <category term="janus" scheme="http://blog.golearns.org/tags/janus/"/>
    
      <category term="网关" scheme="http://blog.golearns.org/tags/%E7%BD%91%E5%85%B3/"/>
    
  </entry>
  
</feed>
